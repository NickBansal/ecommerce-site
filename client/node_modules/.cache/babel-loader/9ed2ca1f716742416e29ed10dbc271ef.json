{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore } from '../../firebase/utils';\nimport convertCollectionsToMap from '../../firebase/convertCollectionsToMap';\nimport directoryTypes from './types';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './actions';\nexport function* fetchCollectionsAsync() {\n  console.log('I am fired');\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => {\n    dispatch(fetchCollectionsFailure(error));\n  });\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(directoryTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/nick.bansal/Desktop/dev/ecommerce-site/src/redux/directory/sagas.js"],"names":["takeEvery","firestore","convertCollectionsToMap","directoryTypes","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","catch","error","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAOC,uBAAP,MAAoC,wCAApC;AAEA,OAAOC,cAAP,MAA2B,SAA3B;AAEA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,WAAjE;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,QAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AAEAD,EAAAA,aAAa,CACXE,GADF,GAEEC,IAFF,CAEOC,QAAQ,IAAI;AACjB,UAAMC,cAAc,GAAGZ,uBAAuB,CAACW,QAAD,CAA9C;AACAE,IAAAA,QAAQ,CAACX,uBAAuB,CAACU,cAAD,CAAxB,CAAR;AACA,GALF,EAMEE,KANF,CAMQC,KAAK,IAAI;AACfF,IAAAA,QAAQ,CAACV,uBAAuB,CAACY,KAAD,CAAxB,CAAR;AACA,GARF;AASA;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMlB,SAAS,CACdG,cAAc,CAACgB,uBADD,EAEdb,qBAFc,CAAf;AAIA","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\nimport { firestore } from '../../firebase/utils';\nimport convertCollectionsToMap from '../../firebase/convertCollectionsToMap';\n\nimport directoryTypes from './types';\n\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './actions';\n\nexport function* fetchCollectionsAsync() {\n\tconsole.log('I am fired');\n\n\tconst collectionRef = firestore.collection('collections');\n\n\tcollectionRef\n\t\t.get()\n\t\t.then(snapshot => {\n\t\t\tconst collectionsMap = convertCollectionsToMap(snapshot);\n\t\t\tdispatch(fetchCollectionsSuccess(collectionsMap));\n\t\t})\n\t\t.catch(error => {\n\t\t\tdispatch(fetchCollectionsFailure(error));\n\t\t});\n}\n\nexport function* fetchCollectionsStart() {\n\tyield takeEvery(\n\t\tdirectoryTypes.FETCH_COLLECTIONS_START,\n\t\tfetchCollectionsAsync\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}