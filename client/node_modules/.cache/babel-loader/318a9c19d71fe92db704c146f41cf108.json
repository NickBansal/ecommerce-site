{"ast":null,"code":"var _jsxFileName = \"/Users/nick.bansal/Desktop/dev/ecommerce-site/src/components/Form/SignIn/index.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { createStructuredSelector } from 'reselect';\nimport FormInput from '../FormInput';\nimport CustomButton from '../../CustomButton'; // import FormError from '../Error';\n\nimport { googleSignInStart, emailSignInStart } from '../../../redux/user/actions';\nconst Container = styled.div`\n\twidth: 380px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 20px;\n`;\nconst Buttons = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n`;\n\nconst SignInForm = ({\n  googleSignInToStart,\n  emailSignInToStart\n}) => {\n  const [state, setState] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleSubmit = async e => {\n    const {\n      email,\n      password\n    } = state;\n    e.preventDefault();\n    emailSignInToStart(email, password);\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setState({ ...state,\n      [name]: value\n    });\n  };\n\n  const {\n    email,\n    password\n  } = state;\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: \"email\",\n    name: \"email\",\n    type: \"email\",\n    handleChange: handleChange,\n    value: email,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: \"password\",\n    name: \"password\",\n    type: \"password\",\n    handleChange: handleChange,\n    value: password,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Buttons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 6\n    }\n  }, \" SIGN IN \"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInToStart,\n    isGoogle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 6\n    }\n  }, ' ', \"SIGN IN WITH GOOGLE\", ' '))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInToStart: () => dispatch(googleSignInStart()),\n  emailSignInToStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignInForm);","map":{"version":3,"sources":["/Users/nick.bansal/Desktop/dev/ecommerce-site/src/components/Form/SignIn/index.js"],"names":["React","useState","connect","styled","createStructuredSelector","FormInput","CustomButton","googleSignInStart","emailSignInStart","Container","div","Buttons","SignInForm","googleSignInToStart","emailSignInToStart","state","setState","email","password","handleSubmit","e","preventDefault","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { createStructuredSelector } from 'reselect';\n\nimport FormInput from '../FormInput';\nimport CustomButton from '../../CustomButton';\n// import FormError from '../Error';\n\nimport {\n\tgoogleSignInStart,\n\temailSignInStart\n} from '../../../redux/user/actions';\n\nconst Container = styled.div`\n\twidth: 380px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 20px;\n`;\n\nconst Buttons = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n`;\n\nconst SignInForm = ({ googleSignInToStart, emailSignInToStart }) => {\n\tconst [state, setState] = useState({\n\t\temail: '',\n\t\tpassword: ''\n\t});\n\n\tconst handleSubmit = async e => {\n\t\tconst { email, password } = state;\n\n\t\te.preventDefault();\n\n\t\temailSignInToStart(email, password);\n\t};\n\n\tconst handleChange = e => {\n\t\tconst { name, value } = e.target;\n\t\tsetState({\n\t\t\t...state,\n\t\t\t[name]: value\n\t\t});\n\t};\n\n\tconst { email, password } = state;\n\n\treturn (\n\t\t<Container>\n\t\t\t<h2>I already have an account</h2>\n\t\t\t<span>Sign in with your email and password</span>\n\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<FormInput\n\t\t\t\t\tlabel=\"email\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\tvalue={email}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\tlabel=\"password\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\tvalue={password}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t{/* {error && <FormError>{error.message}</FormError>} */}\n\t\t\t\t<Buttons>\n\t\t\t\t\t<CustomButton type=\"submit\"> SIGN IN </CustomButton>\n\t\t\t\t\t<CustomButton\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tonClick={googleSignInToStart}\n\t\t\t\t\t\tisGoogle\n\t\t\t\t\t>\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t\tSIGN IN WITH GOOGLE{' '}\n\t\t\t\t\t</CustomButton>\n\t\t\t\t</Buttons>\n\t\t\t</form>\n\t\t</Container>\n\t);\n};\n\nconst mapDispatchToProps = dispatch => ({\n\tgoogleSignInToStart: () => dispatch(googleSignInStart()),\n\temailSignInToStart: (email, password) =>\n\t\tdispatch(emailSignInStart({ email, password }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignInForm);\n"]},"metadata":{},"sourceType":"module"}