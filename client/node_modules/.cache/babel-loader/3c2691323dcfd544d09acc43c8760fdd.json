{"ast":null,"code":"import OPTIONS from '../../constants/options';\nimport directoryTypes from './types';\nconst INITIAL_STATE = {\n  data: null,\n  sections: OPTIONS,\n  errorMessage: undefined\n};\n\nconst directoryReducer = (state = INITIAL_STATE, actions) => {\n  switch (actions.type) {\n    case directoryTypes.FETCH_COLLECTIONS_START:\n      return { ...state,\n        isFetching: true\n      };\n\n    case directoryTypes.FETCH_COLLECTIONS_SUCCESS:\n      return { ...state,\n        data: actions.payload,\n        isFetching: false\n      };\n\n    case directoryTypes.FETCH_COLLECTIONS_FAILURE:\n      return { ...state,\n        errorMessage: actions.payload,\n        isFetching: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default directoryReducer;","map":{"version":3,"sources":["/Users/nick.bansal/Desktop/dev/ecommerce-site/src/redux/directory/reducer.js"],"names":["OPTIONS","directoryTypes","INITIAL_STATE","data","sections","errorMessage","undefined","directoryReducer","state","actions","type","FETCH_COLLECTIONS_START","isFetching","FETCH_COLLECTIONS_SUCCESS","payload","FETCH_COLLECTIONS_FAILURE"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,yBAApB;AAEA,OAAOC,cAAP,MAA2B,SAA3B;AAEA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,IAAI,EAAE,IADe;AAErBC,EAAAA,QAAQ,EAAEJ,OAFW;AAGrBK,EAAAA,YAAY,EAAEC;AAHO,CAAtB;;AAMA,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAGN,aAAT,EAAwBO,OAAxB,KAAoC;AAC5D,UAAQA,OAAO,CAACC,IAAhB;AACC,SAAKT,cAAc,CAACU,uBAApB;AACC,aAAO,EACN,GAAGH,KADG;AAENI,QAAAA,UAAU,EAAE;AAFN,OAAP;;AAID,SAAKX,cAAc,CAACY,yBAApB;AACC,aAAO,EACN,GAAGL,KADG;AAENL,QAAAA,IAAI,EAAEM,OAAO,CAACK,OAFR;AAGNF,QAAAA,UAAU,EAAE;AAHN,OAAP;;AAKD,SAAKX,cAAc,CAACc,yBAApB;AACC,aAAO,EACN,GAAGP,KADG;AAENH,QAAAA,YAAY,EAAEI,OAAO,CAACK,OAFhB;AAGNF,QAAAA,UAAU,EAAE;AAHN,OAAP;;AAKD;AACC,aAAOJ,KAAP;AAnBF;AAqBA,CAtBD;;AAwBA,eAAeD,gBAAf","sourcesContent":["import OPTIONS from '../../constants/options';\n\nimport directoryTypes from './types';\n\nconst INITIAL_STATE = {\n\tdata: null,\n\tsections: OPTIONS,\n\terrorMessage: undefined\n};\n\nconst directoryReducer = (state = INITIAL_STATE, actions) => {\n\tswitch (actions.type) {\n\t\tcase directoryTypes.FETCH_COLLECTIONS_START:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: true\n\t\t\t};\n\t\tcase directoryTypes.FETCH_COLLECTIONS_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdata: actions.payload,\n\t\t\t\tisFetching: false\n\t\t\t};\n\t\tcase directoryTypes.FETCH_COLLECTIONS_FAILURE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terrorMessage: actions.payload,\n\t\t\t\tisFetching: false\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default directoryReducer;\n"]},"metadata":{},"sourceType":"module"}