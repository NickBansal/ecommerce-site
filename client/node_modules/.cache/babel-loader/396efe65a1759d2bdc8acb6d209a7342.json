{"ast":null,"code":"export const calculateQuanity = (payload, cartItems) => {\n  const newPayload = { ...payload\n  };\n  const newItems = cartItems.slice();\n\n  if (!cartItems.find(item => item.id === newPayload.id && item.name === newPayload.name)) {\n    return [...cartItems, { ...newPayload,\n      quantity: 1\n    }];\n  }\n\n  const arrayIndex = newItems.findIndex(item => item.id === newPayload.id && item.name === newPayload.name);\n  newItems[arrayIndex].quantity++;\n  return newItems;\n};\nexport const totalItemInCart = cart => {\n  let total;\n  cart.forEach(item => {\n    if (item.quantity) {\n      total += item.quantity;\n    }\n  });\n};","map":{"version":3,"sources":["/Users/nick.bansal/Desktop/dev/ecommerce-site/src/redux/cart/utils.js"],"names":["calculateQuanity","payload","cartItems","newPayload","newItems","slice","find","item","id","name","quantity","arrayIndex","findIndex","totalItemInCart","cart","total","forEach"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,CAACC,OAAD,EAAUC,SAAV,KAAwB;AACvD,QAAMC,UAAU,GAAG,EAAE,GAAGF;AAAL,GAAnB;AACA,QAAMG,QAAQ,GAAGF,SAAS,CAACG,KAAV,EAAjB;;AAEA,MACC,CAACH,SAAS,CAACI,IAAV,CACAC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,UAAU,CAACK,EAAvB,IAA6BD,IAAI,CAACE,IAAL,KAAcN,UAAU,CAACM,IAD9D,CADF,EAIE;AACD,WAAO,CAAC,GAAGP,SAAJ,EAAe,EAAE,GAAGC,UAAL;AAAiBO,MAAAA,QAAQ,EAAE;AAA3B,KAAf,CAAP;AACA;;AAED,QAAMC,UAAU,GAAGP,QAAQ,CAACQ,SAAT,CAClBL,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,UAAU,CAACK,EAAvB,IAA6BD,IAAI,CAACE,IAAL,KAAcN,UAAU,CAACM,IAD5C,CAAnB;AAGAL,EAAAA,QAAQ,CAACO,UAAD,CAAR,CAAqBD,QAArB;AAEA,SAAON,QAAP;AACA,CAlBM;AAoBP,OAAO,MAAMS,eAAe,GAAGC,IAAI,IAAI;AACtC,MAAIC,KAAJ;AACAD,EAAAA,IAAI,CAACE,OAAL,CAAaT,IAAI,IAAI;AACpB,QAAIA,IAAI,CAACG,QAAT,EAAmB;AAClBK,MAAAA,KAAK,IAAIR,IAAI,CAACG,QAAd;AACA;AACD,GAJD;AAKA,CAPM","sourcesContent":["export const calculateQuanity = (payload, cartItems) => {\n\tconst newPayload = { ...payload };\n\tconst newItems = cartItems.slice();\n\n\tif (\n\t\t!cartItems.find(\n\t\t\titem => item.id === newPayload.id && item.name === newPayload.name\n\t\t)\n\t) {\n\t\treturn [...cartItems, { ...newPayload, quantity: 1 }];\n\t}\n\n\tconst arrayIndex = newItems.findIndex(\n\t\titem => item.id === newPayload.id && item.name === newPayload.name\n\t);\n\tnewItems[arrayIndex].quantity++;\n\n\treturn newItems;\n};\n\nexport const totalItemInCart = cart => {\n\tlet total;\n\tcart.forEach(item => {\n\t\tif (item.quantity) {\n\t\t\ttotal += item.quantity;\n\t\t}\n\t});\n};\n"]},"metadata":{},"sourceType":"module"}