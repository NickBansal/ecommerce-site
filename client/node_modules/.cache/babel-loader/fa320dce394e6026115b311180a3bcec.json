{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userTypes from './types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './actions';\nimport { auth, googleProvider } from '../../firebase/utils';\nimport createUserProfileDocument from '../../firebase/createUser';\nimport getCurrentUser from '../../firebase/getCurrentUser';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const snapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: snapshot.id,\n      ...snapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n\n    if (!userAuth) {\n      return;\n    }\n\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(userTypes.SIGNOUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(userTypes.SIGNUP_START, signUp);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onSignOutStart), call(onSignUpStart), call(isUserAuthenticated)]);\n}","map":{"version":3,"sources":["/Users/nick.bansal/Desktop/dev/ecommerce-site/src/redux/user/sagas.js"],"names":["takeLatest","put","all","call","userTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","userRef","snapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","signOut","isUserAuthenticated","signUp","displayName","createUserWithEmailAndPassword","additionalData","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGNOUT_START","onSignUpStart","SIGNUP_START","onEmailSignInStart","EMAIL_SIGNIN_START","onGoogleSignInStart","GOOGLE_SIGNIN_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport userTypes from './types';\nimport {\n\tsignInSuccess,\n\tsignInFailure,\n\tsignOutSuccess,\n\tsignOutFailure,\n\tsignUpSuccess,\n\tsignUpFailure\n} from './actions';\n\nimport { auth, googleProvider } from '../../firebase/utils';\nimport createUserProfileDocument from '../../firebase/createUser';\nimport getCurrentUser from '../../firebase/getCurrentUser';\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n\ttry {\n\t\tconst userRef = yield call(createUserProfileDocument, userAuth);\n\t\tconst snapshot = yield userRef.get();\n\t\tyield put(signInSuccess({ id: snapshot.id, ...snapshot.data() }));\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* signInWithGoogle() {\n\ttry {\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\n\t\tyield getSnapshotFromUserAuth(user);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n\ttry {\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\n\t\tyield getSnapshotFromUserAuth(user);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* signOut() {\n\ttry {\n\t\tyield auth.signOut();\n\t\tyield put(signOutSuccess());\n\t} catch (error) {\n\t\tyield put(signOutFailure(error));\n\t}\n}\n\nexport function* isUserAuthenticated() {\n\ttry {\n\t\tconst userAuth = yield getCurrentUser();\n\t\tif (!userAuth) {\n\t\t\treturn;\n\t\t}\n\t\tyield getSnapshotFromUserAuth(userAuth);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n\ttry {\n\t\tconst { user } = yield auth.createUserWithEmailAndPassword(\n\t\t\temail,\n\t\t\tpassword\n\t\t);\n\t\tyield put(signUpSuccess({ user, additionalData: { displayName } }));\n\t} catch (error) {\n\t\tyield put(signUpFailure(error));\n\t}\n}\n\nexport function* onCheckUserSession() {\n\tyield takeLatest(userTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart() {\n\tyield takeLatest(userTypes.SIGNOUT_START, signOut);\n}\n\nexport function* onSignUpStart() {\n\tyield takeLatest(userTypes.SIGNUP_START, signUp);\n}\n\nexport function* onEmailSignInStart() {\n\tyield takeLatest(userTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\n\nexport function* onGoogleSignInStart() {\n\tyield takeLatest(userTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\n\nexport function* userSagas() {\n\tyield all([\n\t\tcall(onGoogleSignInStart),\n\t\tcall(onEmailSignInStart),\n\t\tcall(onSignOutStart),\n\t\tcall(onSignUpStart),\n\t\tcall(isUserAuthenticated)\n\t]);\n}\n"]},"metadata":{},"sourceType":"module"}