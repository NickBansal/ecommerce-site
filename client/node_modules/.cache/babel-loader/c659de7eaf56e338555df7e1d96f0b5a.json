{"ast":null,"code":"import directoryTypes from './types';\nimport { firestore } from '../../firebase/utils';\nimport convertCollectionsToMap from '../../firebase/convertCollectionsToMap';\nexport const setCurrentData = data => ({\n  type: directoryTypes.GET_CURRENT_DATA,\n  payload: data\n});\nexport const fetchCollectionsStart = () => ({\n  type: directoryTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = data => ({\n  type: directoryTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: data\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: directoryTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      console.log(snapshot, ' <<<<<<<<<<<<<');\n      const collectionsMap = convertCollectionsToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => {\n      dispatch(fetchCollectionsFailure(error));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/nick.bansal/Desktop/dev/ecommerce-site/src/redux/directory/actions.js"],"names":["directoryTypes","firestore","convertCollectionsToMap","setCurrentData","data","type","GET_CURRENT_DATA","payload","fetchCollectionsStart","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","FETCH_COLLECTIONS_SUCCESS","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","console","log","collectionsMap","catch","error"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,SAA3B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAOC,uBAAP,MAAoC,wCAApC;AAEA,OAAO,MAAMC,cAAc,GAAGC,IAAI,KAAK;AACtCC,EAAAA,IAAI,EAAEL,cAAc,CAACM,gBADiB;AAEtCC,EAAAA,OAAO,EAAEH;AAF6B,CAAL,CAA3B;AAKP,OAAO,MAAMI,qBAAqB,GAAG,OAAO;AAC3CH,EAAAA,IAAI,EAAEL,cAAc,CAACS;AADsB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGN,IAAI,KAAK;AAC/CC,EAAAA,IAAI,EAAEL,cAAc,CAACW,yBAD0B;AAE/CJ,EAAAA,OAAO,EAAEH;AAFsC,CAAL,CAApC;AAKP,OAAO,MAAMQ,uBAAuB,GAAGC,YAAY,KAAK;AACvDR,EAAAA,IAAI,EAAEL,cAAc,CAACc,yBADkC;AAEvDP,EAAAA,OAAO,EAAEM;AAF8C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC/C,SAAOC,QAAQ,IAAI;AAClB,UAAMC,aAAa,GAAGhB,SAAS,CAACiB,UAAV,CAAqB,aAArB,CAAtB;AAEAF,IAAAA,QAAQ,CAACR,qBAAqB,EAAtB,CAAR;AAEAS,IAAAA,aAAa,CACXE,GADF,GAEEC,IAFF,CAEOC,QAAQ,IAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAAsB,gBAAtB;AACA,YAAMG,cAAc,GAAGtB,uBAAuB,CAACmB,QAAD,CAA9C;AACAL,MAAAA,QAAQ,CAACN,uBAAuB,CAACc,cAAD,CAAxB,CAAR;AACA,KANF,EAOEC,KAPF,CAOQC,KAAK,IAAI;AACfV,MAAAA,QAAQ,CAACJ,uBAAuB,CAACc,KAAD,CAAxB,CAAR;AACA,KATF;AAUA,GAfD;AAgBA,CAjBM","sourcesContent":["import directoryTypes from './types';\nimport { firestore } from '../../firebase/utils';\nimport convertCollectionsToMap from '../../firebase/convertCollectionsToMap';\n\nexport const setCurrentData = data => ({\n\ttype: directoryTypes.GET_CURRENT_DATA,\n\tpayload: data\n});\n\nexport const fetchCollectionsStart = () => ({\n\ttype: directoryTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsSuccess = data => ({\n\ttype: directoryTypes.FETCH_COLLECTIONS_SUCCESS,\n\tpayload: data\n});\n\nexport const fetchCollectionsFailure = errorMessage => ({\n\ttype: directoryTypes.FETCH_COLLECTIONS_FAILURE,\n\tpayload: errorMessage\n});\n\nexport const fetchCollectionsStartAsync = () => {\n\treturn dispatch => {\n\t\tconst collectionRef = firestore.collection('collections');\n\n\t\tdispatch(fetchCollectionsStart());\n\n\t\tcollectionRef\n\t\t\t.get()\n\t\t\t.then(snapshot => {\n\t\t\t\tconsole.log(snapshot, ' <<<<<<<<<<<<<');\n\t\t\t\tconst collectionsMap = convertCollectionsToMap(snapshot);\n\t\t\t\tdispatch(fetchCollectionsSuccess(collectionsMap));\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tdispatch(fetchCollectionsFailure(error));\n\t\t\t});\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}