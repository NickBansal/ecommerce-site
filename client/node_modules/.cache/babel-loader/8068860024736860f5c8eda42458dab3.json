{"ast":null,"code":"import directoryTypes from './types';\nimport { firestore } from '../../firebase/utils';\nexport const setCurrentData = data => ({\n  type: directoryTypes.GET_CURRENT_DATA,\n  payload: data\n});\nexport const fetchCollectionsStart = () => ({\n  type: directoryTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const dataCollection = convertCollectionsToMap(snapshot);\n      dispatch(setCurrentData(dataCollection));\n      setLoading(false);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/nick.bansal/Desktop/dev/ecommerce-site/src/redux/directory/actions.js"],"names":["directoryTypes","firestore","setCurrentData","data","type","GET_CURRENT_DATA","payload","fetchCollectionsStart","FETCH_COLLECTIONS_START","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","dataCollection","convertCollectionsToMap","setLoading"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,SAA3B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AAEA,OAAO,MAAMC,cAAc,GAAGC,IAAI,KAAK;AACtCC,EAAAA,IAAI,EAAEJ,cAAc,CAACK,gBADiB;AAEtCC,EAAAA,OAAO,EAAEH;AAF6B,CAAL,CAA3B;AAKP,OAAO,MAAMI,qBAAqB,GAAG,OAAO;AAC3CH,EAAAA,IAAI,EAAEJ,cAAc,CAACQ;AADsB,CAAP,CAA9B;AAIP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC/C,SAAOC,QAAQ,IAAI;AAClB,UAAMC,aAAa,GAAGV,SAAS,CAACW,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACpC,YAAMC,cAAc,GAAGC,uBAAuB,CAACF,QAAD,CAA9C;AACAL,MAAAA,QAAQ,CAACR,cAAc,CAACc,cAAD,CAAf,CAAR;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KAJD;AAKA,GARD;AASA,CAVM","sourcesContent":["import directoryTypes from './types';\nimport { firestore } from '../../firebase/utils';\n\nexport const setCurrentData = data => ({\n\ttype: directoryTypes.GET_CURRENT_DATA,\n\tpayload: data\n});\n\nexport const fetchCollectionsStart = () => ({\n\ttype: directoryTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsStartAsync = () => {\n\treturn dispatch => {\n\t\tconst collectionRef = firestore.collection('collections');\n\n\t\tcollectionRef.get().then(snapshot => {\n\t\t\tconst dataCollection = convertCollectionsToMap(snapshot);\n\t\t\tdispatch(setCurrentData(dataCollection));\n\t\t\tsetLoading(false);\n\t\t});\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}