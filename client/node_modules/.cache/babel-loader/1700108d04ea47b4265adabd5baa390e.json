{"ast":null,"code":"import { firestore } from '../../firebase/utils';\nimport convertCollectionsToMap from '../../firebase/convertCollectionsToMap';\nimport directoryTypes from './types';\nexport const fetchCollectionsStart = () => ({\n  type: directoryTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: directoryTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsError = errorMessage => ({\n  type: directoryTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const dataCollection = convertCollectionsToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(dataCollection));\n    }).catch(error => {});\n  };\n};","map":{"version":3,"sources":["/Users/nick.bansal/Desktop/dev/ecommerce-site/src/redux/directory/actions.js"],"names":["firestore","convertCollectionsToMap","directoryTypes","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsError","errorMessage","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","dataCollection","catch","error"],"mappings":"AAAA,SAASA,SAAT,QAA0B,sBAA1B;AACA,OAAOC,uBAAP,MAAoC,wCAApC;AAEA,OAAOC,cAAP,MAA2B,SAA3B;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC3CC,EAAAA,IAAI,EAAEF,cAAc,CAACG;AADsB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACzDH,EAAAA,IAAI,EAAEF,cAAc,CAACM,yBADoC;AAEzDC,EAAAA,OAAO,EAAEF;AAFgD,CAAL,CAA9C;AAKP,OAAO,MAAMG,qBAAqB,GAAGC,YAAY,KAAK;AACrDP,EAAAA,IAAI,EAAEF,cAAc,CAACM,yBADgC;AAErDC,EAAAA,OAAO,EAAEF;AAF4C,CAAL,CAA1C;AAKP,OAAO,MAAMK,0BAA0B,GAAG,MAAM;AAC/C,SAAOC,QAAQ,IAAI;AAClB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACV,qBAAqB,EAAtB,CAAR;AAEAW,IAAAA,aAAa,CACXE,GADF,GAEEC,IAFF,CAEOC,QAAQ,IAAI;AACjB,YAAMC,cAAc,GAAGlB,uBAAuB,CAACiB,QAAD,CAA9C;AACAL,MAAAA,QAAQ,CAACP,uBAAuB,CAACa,cAAD,CAAxB,CAAR;AACA,KALF,EAMEC,KANF,CAMQC,KAAK,IAAI,CAAE,CANnB;AAOA,GAXD;AAYA,CAbM","sourcesContent":["import { firestore } from '../../firebase/utils';\nimport convertCollectionsToMap from '../../firebase/convertCollectionsToMap';\n\nimport directoryTypes from './types';\n\nexport const fetchCollectionsStart = () => ({\n\ttype: directoryTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n\ttype: directoryTypes.FETCH_COLLECTIONS_SUCCESS,\n\tpayload: collectionsMap\n});\n\nexport const fetchCollectionsError = errorMessage => ({\n\ttype: directoryTypes.FETCH_COLLECTIONS_SUCCESS,\n\tpayload: collectionsMap\n});\n\nexport const fetchCollectionsStartAsync = () => {\n\treturn dispatch => {\n\t\tconst collectionRef = firestore.collection('collections');\n\t\tdispatch(fetchCollectionsStart());\n\n\t\tcollectionRef\n\t\t\t.get()\n\t\t\t.then(snapshot => {\n\t\t\t\tconst dataCollection = convertCollectionsToMap(snapshot);\n\t\t\t\tdispatch(fetchCollectionsSuccess(dataCollection));\n\t\t\t})\n\t\t\t.catch(error => {});\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}