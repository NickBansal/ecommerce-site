{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userTypes from './types';\nimport { signInSuccess, signInFailure, signUpFailure, signOutSuccess, signOutFailure } from './actions';\nimport { auth, googleProvider } from '../../firebase/utils';\nimport createUserProfileDocument from '../../firebase/createUser';\nimport getCurrentUser from '../../firebase/getCurrentUser';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const snapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: snapshot.id,\n      ...snapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signUpWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n\n    if (!userAuth) {\n      return;\n    }\n\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(userTypes.SIGNOUT_START, signOut);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(userTypes.SIGNUP_START, signUpWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onSignOutStart), call(onCheckUserSession), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["/Users/nick.bansal/Desktop/dev/ecommerce-site/src/redux/user/sagas.js"],"names":["takeLatest","put","all","call","userTypes","signInSuccess","signInFailure","signUpFailure","signOutSuccess","signOutFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","userRef","snapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","signUpWithEmail","createUserWithEmailAndPassword","signOut","isUserAuthenticated","onGoogleSignInStart","GOOGLE_SIGNIN_START","onEmailSignInStart","EMAIL_SIGNIN_START","onSignOutStart","SIGNOUT_START","onCheckUserSession","CHECK_USER_SESSION","onSignUpStart","SIGNUP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport userTypes from './types';\nimport {\n\tsignInSuccess,\n\tsignInFailure,\n\tsignUpFailure,\n\tsignOutSuccess,\n\tsignOutFailure\n} from './actions';\n\nimport { auth, googleProvider } from '../../firebase/utils';\nimport createUserProfileDocument from '../../firebase/createUser';\nimport getCurrentUser from '../../firebase/getCurrentUser';\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n\ttry {\n\t\tconst userRef = yield call(createUserProfileDocument, userAuth);\n\t\tconst snapshot = yield userRef.get();\n\t\tyield put(signInSuccess({ id: snapshot.id, ...snapshot.data() }));\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* signInWithGoogle() {\n\ttry {\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\n\t\tyield getSnapshotFromUserAuth(user);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n\ttry {\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\n\t\tyield getSnapshotFromUserAuth(user);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* signUpWithEmail({ payload: { email, password } }) {\n\ttry {\n\t\tconst { user } = yield auth.createUserWithEmailAndPassword(\n\t\t\temail,\n\t\t\tpassword\n\t\t);\n\t\tyield getSnapshotFromUserAuth(user);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* signOut() {\n\ttry {\n\t\tyield auth.signOut();\n\t\tyield put(signOutSuccess());\n\t} catch (error) {\n\t\tyield put(signOutFailure(error));\n\t}\n}\n\nexport function* isUserAuthenticated() {\n\ttry {\n\t\tconst userAuth = yield getCurrentUser();\n\t\tif (!userAuth) {\n\t\t\treturn;\n\t\t}\n\t\tyield getSnapshotFromUserAuth(userAuth);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* onGoogleSignInStart() {\n\tyield takeLatest(userTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n\tyield takeLatest(userTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\n\nexport function* onSignOutStart() {\n\tyield takeLatest(userTypes.SIGNOUT_START, signOut);\n}\n\nexport function* onCheckUserSession() {\n\tyield takeLatest(userTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignUpStart() {\n\tyield takeLatest(userTypes.SIGNUP_START, signUpWithEmail);\n}\n\nexport function* userSagas() {\n\tyield all([\n\t\tcall(onGoogleSignInStart),\n\t\tcall(onEmailSignInStart),\n\t\tcall(onSignOutStart),\n\t\tcall(onCheckUserSession),\n\t\tcall(onSignUpStart)\n\t]);\n}\n"]},"metadata":{},"sourceType":"module"}