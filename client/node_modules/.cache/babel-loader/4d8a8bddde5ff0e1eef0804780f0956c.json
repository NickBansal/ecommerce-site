{"ast":null,"code":"var _jsxFileName = \"/Users/nick.bansal/Desktop/dev/ecommerce-site/src/pages/Shop/Overview/index.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCollectionForPreview, selectSections } from '../../../redux/directory/selectors';\nimport CollectionItems from '../../../components/Collections/Preview/Items';\nconst Preview = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-bottom: 10px;\n\n\t.title {\n\t\tfont-size: 28px;\n\t\tmargin-bottom: 25px;\n\n\t\t&:hover {\n\t\t\ttext-decoration: underline;\n\t\t}\n\t}\n\n\t.preview {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t}\n`;\n\nconst CollectionOverview = ({\n  shopData,\n  collection\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, shopData.map(items => {\n    console.log(items.items);\n    const {\n      title,\n      routeName\n    } = items;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }\n    }) // <Preview key={title}>\n    // \t<Link to={`/shop/${routeName}`}>\n    // \t\t<h1 className=\"title\">{title.toUpperCase()}</h1>\n    // \t</Link>\n    // \t<div className=\"preview\">\n    // \t\t{items.slice(0, 4).map(({ id, ...rest }) => (\n    // \t\t\t<CollectionItems key={id} id={id} {...rest} />\n    // \t\t))}\n    // \t</div>\n    // </Preview>\n    ;\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  shopData: selectCollectionForPreview,\n  collection: selectSections\n});\nexport default connect(mapStateToProps)(CollectionOverview);","map":{"version":3,"sources":["/Users/nick.bansal/Desktop/dev/ecommerce-site/src/pages/Shop/Overview/index.js"],"names":["React","styled","Link","connect","createStructuredSelector","selectCollectionForPreview","selectSections","CollectionItems","Preview","div","CollectionOverview","shopData","collection","map","items","console","log","title","routeName","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SACCC,0BADD,EAECC,cAFD,QAGO,oCAHP;AAKA,OAAOC,eAAP,MAA4B,+CAA5B;AAEA,MAAMC,OAAO,GAAGP,MAAM,CAACQ,GAAI;;;;;;;;;;;;;;;;;;CAA3B;;AAoBA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA8B;AACxD,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,QAAQ,CAACE,GAAT,CAAaC,KAAK,IAAI;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACA,KAAlB;AACA,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAuBJ,KAA7B;AACA,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXD;AAaA,GAhBA,CADF,CADD;AAqBA,CAtBD;;AAwBA,MAAMK,eAAe,GAAGf,wBAAwB,CAAC;AAChDO,EAAAA,QAAQ,EAAEN,0BADsC;AAEhDO,EAAAA,UAAU,EAAEN;AAFoC,CAAD,CAAhD;AAKA,eAAeH,OAAO,CAACgB,eAAD,CAAP,CAAyBT,kBAAzB,CAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport {\n\tselectCollectionForPreview,\n\tselectSections\n} from '../../../redux/directory/selectors';\n\nimport CollectionItems from '../../../components/Collections/Preview/Items';\n\nconst Preview = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-bottom: 10px;\n\n\t.title {\n\t\tfont-size: 28px;\n\t\tmargin-bottom: 25px;\n\n\t\t&:hover {\n\t\t\ttext-decoration: underline;\n\t\t}\n\t}\n\n\t.preview {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t}\n`;\n\nconst CollectionOverview = ({ shopData, collection }) => {\n\treturn (\n\t\t<div>\n\t\t\t{shopData.map(items => {\n\t\t\t\tconsole.log(items.items);\n\t\t\t\tconst { title, routeName } = items;\n\t\t\t\treturn (\n\t\t\t\t\t<div />\n\t\t\t\t\t// <Preview key={title}>\n\t\t\t\t\t// \t<Link to={`/shop/${routeName}`}>\n\t\t\t\t\t// \t\t<h1 className=\"title\">{title.toUpperCase()}</h1>\n\t\t\t\t\t// \t</Link>\n\t\t\t\t\t// \t<div className=\"preview\">\n\t\t\t\t\t// \t\t{items.slice(0, 4).map(({ id, ...rest }) => (\n\t\t\t\t\t// \t\t\t<CollectionItems key={id} id={id} {...rest} />\n\t\t\t\t\t// \t\t))}\n\t\t\t\t\t// \t</div>\n\t\t\t\t\t// </Preview>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = createStructuredSelector({\n\tshopData: selectCollectionForPreview,\n\tcollection: selectSections\n});\n\nexport default connect(mapStateToProps)(CollectionOverview);\n"]},"metadata":{},"sourceType":"module"}