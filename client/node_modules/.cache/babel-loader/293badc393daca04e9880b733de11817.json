{"ast":null,"code":"import directoryTypes from './types';\nimport { firestore } from '../../firebase/utils';\nimport convertCollectionsToMap from '../../firebase/convertCollectionsToMap';\nexport const setCurrentData = data => ({\n  type: directoryTypes.GET_CURRENT_DATA,\n  payload: data\n});\nexport const fetchCollectionsStart = () => ({\n  type: directoryTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = data => ({\n  type: directoryTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: data\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      fetchCollectionsSuccess(convertCollectionsToMap(snapshot));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/nick.bansal/Desktop/dev/ecommerce-site/src/redux/directory/actions.js"],"names":["directoryTypes","firestore","convertCollectionsToMap","setCurrentData","data","type","GET_CURRENT_DATA","payload","fetchCollectionsStart","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","FETCH_COLLECTIONS_SUCCESS","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,SAA3B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAOC,uBAAP,MAAoC,wCAApC;AAEA,OAAO,MAAMC,cAAc,GAAGC,IAAI,KAAK;AACtCC,EAAAA,IAAI,EAAEL,cAAc,CAACM,gBADiB;AAEtCC,EAAAA,OAAO,EAAEH;AAF6B,CAAL,CAA3B;AAKP,OAAO,MAAMI,qBAAqB,GAAG,OAAO;AAC3CH,EAAAA,IAAI,EAAEL,cAAc,CAACS;AADsB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGN,IAAI,KAAK;AAC/CC,EAAAA,IAAI,EAAEL,cAAc,CAACW,yBAD0B;AAE/CJ,EAAAA,OAAO,EAAEH;AAFsC,CAAL,CAApC;AAKP,OAAO,MAAMQ,0BAA0B,GAAG,MAAM;AAC/C,SAAOC,QAAQ,IAAI;AAClB,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AAEAF,IAAAA,QAAQ,CAACL,qBAAqB,EAAtB,CAAR;AAEAM,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACpCR,MAAAA,uBAAuB,CAACR,uBAAuB,CAACgB,QAAD,CAAxB,CAAvB;AACA,KAFD;AAGA,GARD;AASA,CAVM","sourcesContent":["import directoryTypes from './types';\nimport { firestore } from '../../firebase/utils';\nimport convertCollectionsToMap from '../../firebase/convertCollectionsToMap';\n\nexport const setCurrentData = data => ({\n\ttype: directoryTypes.GET_CURRENT_DATA,\n\tpayload: data\n});\n\nexport const fetchCollectionsStart = () => ({\n\ttype: directoryTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsSuccess = data => ({\n\ttype: directoryTypes.FETCH_COLLECTIONS_SUCCESS,\n\tpayload: data\n});\n\nexport const fetchCollectionsStartAsync = () => {\n\treturn dispatch => {\n\t\tconst collectionRef = firestore.collection('collections');\n\n\t\tdispatch(fetchCollectionsStart());\n\n\t\tcollectionRef.get().then(snapshot => {\n\t\t\tfetchCollectionsSuccess(convertCollectionsToMap(snapshot));\n\t\t});\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}