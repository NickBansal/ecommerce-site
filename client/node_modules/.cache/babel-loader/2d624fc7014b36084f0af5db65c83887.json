{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userTypes from './types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from './actions';\nimport { auth, googleProvider } from '../../firebase/utils';\nimport createUserProfileDocument from '../../firebase/createUser';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const snapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: snapshot.id,\n      ...snapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(userTypes.SIGNOUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/Users/nick.bansal/Desktop/dev/ecommerce-site/src/redux/user/sagas.js"],"names":["takeLatest","put","all","call","userTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","auth","googleProvider","createUserProfileDocument","getSnapshotFromUserAuth","userAuth","userRef","snapshot","get","id","data","error","message","signInWithGoogle","user","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGNIN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGNIN_START","signOut","onSignOutStart","SIGNOUT_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,SAAP,MAAsB,SAAtB;AACA,SACCC,aADD,EAECC,aAFD,EAGCC,cAHD,EAICC,cAJD,QAKO,WALP;AAOA,SAASC,IAAT,EAAeC,cAAf,QAAqC,sBAArC;AACA,OAAOC,yBAAP,MAAsC,2BAAtC;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AAClD,MAAI;AACH,UAAMC,OAAO,GAAG,MAAMX,IAAI,CAACQ,yBAAD,EAA4BE,QAA5B,CAA1B;AACA,UAAME,QAAQ,GAAG,MAAMD,OAAO,CAACE,GAAR,EAAvB;AACA,UAAMf,GAAG,CAACI,aAAa,CAAC;AAAEY,MAAAA,EAAE,EAAEF,QAAQ,CAACE,EAAf;AAAmB,SAAGF,QAAQ,CAACG,IAAT;AAAtB,KAAD,CAAd,CAAT;AACA,GAJD,CAIE,OAAOC,KAAP,EAAc;AACf,UAAMlB,GAAG,CAACK,aAAa,CAACa,KAAK,CAACC,OAAP,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUC,gBAAV,GAA6B;AACnC,MAAI;AACH,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMb,IAAI,CAACc,eAAL,CAAqBb,cAArB,CAAvB;AACA,UAAME,uBAAuB,CAACU,IAAD,CAA7B;AACA,GAHD,CAGE,OAAOH,KAAP,EAAc;AACf,UAAMlB,GAAG,CAACK,aAAa,CAACa,KAAK,CAACC,OAAP,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUI,mBAAV,GAAgC;AACtC,QAAMxB,UAAU,CAACI,SAAS,CAACqB,mBAAX,EAAgCJ,gBAAhC,CAAhB;AACA;AAED,OAAO,UAAUK,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AAClE,MAAI;AACH,UAAM;AAAEP,MAAAA;AAAF,QAAW,MAAMb,IAAI,CAACqB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMjB,uBAAuB,CAACU,IAAD,CAA7B;AACA,GAHD,CAGE,OAAOH,KAAP,EAAc;AACf,UAAMlB,GAAG,CAACK,aAAa,CAACa,KAAD,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUY,kBAAV,GAA+B;AACrC,QAAM/B,UAAU,CAACI,SAAS,CAAC4B,kBAAX,EAA+BN,eAA/B,CAAhB;AACA;AAED,OAAO,UAAUO,OAAV,GAAoB;AAC1B,MAAI;AACH,UAAMxB,IAAI,CAACwB,OAAL,EAAN;AACA,UAAMhC,GAAG,CAACM,cAAc,EAAf,CAAT;AACA,GAHD,CAGE,OAAOY,KAAP,EAAc;AACf,UAAMlB,GAAG,CAACO,cAAc,CAACW,KAAD,CAAf,CAAT;AACA;AACD;AAED,OAAO,UAAUe,cAAV,GAA2B;AACjC,QAAMlC,UAAU,CAACI,SAAS,CAAC+B,aAAX,EAA0BF,OAA1B,CAAhB;AACA;AAED,OAAO,UAAUG,SAAV,GAAsB;AAC5B,QAAMlC,GAAG,CAAC,CACTC,IAAI,CAACqB,mBAAD,CADK,EAETrB,IAAI,CAAC4B,kBAAD,CAFK,EAGT5B,IAAI,CAAC+B,cAAD,CAHK,CAAD,CAAT;AAKA","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport userTypes from './types';\nimport {\n\tsignInSuccess,\n\tsignInFailure,\n\tsignOutSuccess,\n\tsignOutFailure\n} from './actions';\n\nimport { auth, googleProvider } from '../../firebase/utils';\nimport createUserProfileDocument from '../../firebase/createUser';\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n\ttry {\n\t\tconst userRef = yield call(createUserProfileDocument, userAuth);\n\t\tconst snapshot = yield userRef.get();\n\t\tyield put(signInSuccess({ id: snapshot.id, ...snapshot.data() }));\n\t} catch (error) {\n\t\tyield put(signInFailure(error.message));\n\t}\n}\n\nexport function* signInWithGoogle() {\n\ttry {\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\n\t\tyield getSnapshotFromUserAuth(user);\n\t} catch (error) {\n\t\tyield put(signInFailure(error.message));\n\t}\n}\n\nexport function* onGoogleSignInStart() {\n\tyield takeLatest(userTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n\ttry {\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\n\t\tyield getSnapshotFromUserAuth(user);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* onEmailSignInStart() {\n\tyield takeLatest(userTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\n\nexport function* signOut() {\n\ttry {\n\t\tyield auth.signOut();\n\t\tyield put(signOutSuccess());\n\t} catch (error) {\n\t\tyield put(signOutFailure(error));\n\t}\n}\n\nexport function* onSignOutStart() {\n\tyield takeLatest(userTypes.SIGNOUT_START, signOut);\n}\n\nexport function* userSagas() {\n\tyield all([\n\t\tcall(onGoogleSignInStart),\n\t\tcall(onEmailSignInStart),\n\t\tcall(onSignOutStart)\n\t]);\n}\n"]},"metadata":{},"sourceType":"module"}