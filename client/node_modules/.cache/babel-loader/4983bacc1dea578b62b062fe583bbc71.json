{"ast":null,"code":"var _jsxFileName = \"/Users/nick.bansal/Desktop/dev/ecommerce-site/client/src/components/StripeButton/index.js\";\nimport React, { useState } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { clearCart } from '../../redux/cart/actions';\n\nconst StripeButton = ({\n  price\n}) => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const priceForStripe = price * 100;\n  const publishableKey = 'pk_test_CXDPdTpBGh3d5iaS8yHnIdFG00Y0v2XEN0';\n\n  const onToken = token => {\n    axios({\n      url: 'payment',\n      method: 'POST',\n      data: {\n        amount: priceForStripe,\n        token\n      }\n    }).then(() => {\n      alert('Payment successful');\n      dispatch(clearCart());\n    }).catch(error => {\n      console.log('Payment error ', JSON.parse(error));\n      alert('There was an issue with your payment, please try again');\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(StripeCheckout, {\n    name: \"E-commerce\",\n    amount: priceForStripe,\n    label: \"Pay now\",\n    billingAddress: true,\n    shippingAddress: true,\n    currency: \"GBP\",\n    image: \"https://stripe.com/img/documentation/checkout/marketplace.png\",\n    description: `Your total is £${price}`,\n    panelLabel: \"Pay now\",\n    token: onToken,\n    stripeKey: publishableKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  });\n};\n\nexport default StripeButton;","map":{"version":3,"sources":["/Users/nick.bansal/Desktop/dev/ecommerce-site/client/src/components/StripeButton/index.js"],"names":["React","useState","StripeCheckout","useDispatch","axios","clearCart","StripeButton","price","dispatch","loading","setLoading","priceForStripe","publishableKey","onToken","token","url","method","data","amount","then","alert","catch","error","console","log","JSON","parse"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,0BAA1B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACnC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMU,cAAc,GAAGJ,KAAK,GAAG,GAA/B;AACA,QAAMK,cAAc,GAAG,4CAAvB;;AAEA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AAC1BV,IAAAA,KAAK,CAAC;AACLW,MAAAA,GAAG,EAAE,SADA;AAELC,MAAAA,MAAM,EAAE,MAFH;AAGLC,MAAAA,IAAI,EAAE;AACLC,QAAAA,MAAM,EAAEP,cADH;AAELG,QAAAA;AAFK;AAHD,KAAD,CAAL,CAOGK,IAPH,CAOQ,MAAM;AACbC,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACAZ,MAAAA,QAAQ,CAACH,SAAS,EAAV,CAAR;AACA,KAVD,EAUGgB,KAVH,CAUUC,KAAD,IAAW;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAA9B;AACAF,MAAAA,KAAK,CAAC,wDAAD,CAAL;AACA,KAbD;AAcA,GAfD;;AAiBA,sBACC,oBAAC,cAAD;AACC,IAAA,IAAI,EAAC,YADN;AAEC,IAAA,MAAM,EAAET,cAFT;AAGC,IAAA,KAAK,EAAC,SAHP;AAIC,IAAA,cAAc,MAJf;AAKC,IAAA,eAAe,MALhB;AAMC,IAAA,QAAQ,EAAC,KANV;AAOC,IAAA,KAAK,EAAC,+DAPP;AAQC,IAAA,WAAW,EAAG,kBAAiBJ,KAAM,EARtC;AASC,IAAA,UAAU,EAAC,SATZ;AAUC,IAAA,KAAK,EAAEM,OAVR;AAWC,IAAA,SAAS,EAAED,cAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AAeA,CAvCD;;AAyCA,eAAeN,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { clearCart } from '../../redux/cart/actions';\n\nconst StripeButton = ({ price }) => {\n\tconst dispatch = useDispatch();\n\tconst [loading, setLoading] = useState(false)\n\n\tconst priceForStripe = price * 100;\n\tconst publishableKey = 'pk_test_CXDPdTpBGh3d5iaS8yHnIdFG00Y0v2XEN0';\n\n\tconst onToken = (token) => {\n\t\taxios({\n\t\t\turl: 'payment',\n\t\t\tmethod: 'POST',\n\t\t\tdata: {\n\t\t\t\tamount: priceForStripe,\n\t\t\t\ttoken\n\t\t\t}\n\t\t}).then(() => {\n\t\t\talert('Payment successful');\n\t\t\tdispatch(clearCart());\n\t\t}).catch((error) => {\n\t\t\tconsole.log('Payment error ', JSON.parse(error));\n\t\t\talert('There was an issue with your payment, please try again')\n\t\t})\n\t};\n\n\treturn (\n\t\t<StripeCheckout\n\t\t\tname=\"E-commerce\"\n\t\t\tamount={priceForStripe}\n\t\t\tlabel=\"Pay now\"\n\t\t\tbillingAddress\n\t\t\tshippingAddress\n\t\t\tcurrency=\"GBP\"\n\t\t\timage=\"https://stripe.com/img/documentation/checkout/marketplace.png\"\n\t\t\tdescription={`Your total is £${price}`}\n\t\t\tpanelLabel=\"Pay now\"\n\t\t\ttoken={onToken}\n\t\t\tstripeKey={publishableKey}\n\t\t/>\n\t);\n};\n\nexport default StripeButton;\n"]},"metadata":{},"sourceType":"module"}