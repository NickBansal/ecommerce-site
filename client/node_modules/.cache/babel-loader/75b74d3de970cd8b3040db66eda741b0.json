{"ast":null,"code":"var _jsxFileName = \"/Users/nick.bansal/Desktop/dev/ecommerce-site/src/pages/Shop/index.js\";\nimport React, { useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/directory/actions';\nimport { selectIsCollectionLoaded } from '../../redux/directory/selectors';\nimport { OverViewContainer, CollectionContainer } from '../../components/Collections/CollectionContainer';\n\nconst ShopPage = ({\n  match,\n  fetchCollections,\n  isLoading\n}) => {\n  // eslint-disable-next-line\n  useEffect(() => fetchCollections(), []);\n  return /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: OverViewContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollections: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/nick.bansal/Desktop/dev/ecommerce-site/src/pages/Shop/index.js"],"names":["React","useEffect","Switch","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","selectIsCollectionLoaded","OverViewContainer","CollectionContainer","ShopPage","match","fetchCollections","isLoading","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,wBAAT,QAAyC,iCAAzC;AAEA,SACCC,iBADD,EAECC,mBAFD,QAGO,kDAHP;;AAKA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,gBAAT;AAA2BC,EAAAA;AAA3B,CAAD,KAA4C;AAC5D;AACAZ,EAAAA,SAAS,CAAC,MAAMW,gBAAgB,EAAvB,EAA2B,EAA3B,CAAT;AAEA,sBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAED,KAAK,CAACG,IAAK,EAAjC;AAAoC,IAAA,SAAS,EAAEN,iBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC,oBAAC,KAAD;AACC,IAAA,IAAI,EAAG,GAAEG,KAAK,CAACG,IAAK,gBADrB;AAEC,IAAA,SAAS,EAAEL,mBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD;AASA,CAbD;;AAeA,MAAMM,eAAe,GAAGV,wBAAwB,CAAC;AAChDQ,EAAAA,SAAS,EAAEN;AADqC,CAAD,CAAhD;;AAIA,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK;AACvCL,EAAAA,gBAAgB,EAAE,MAAMK,QAAQ,CAACX,0BAA0B,EAA3B;AADO,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CAACW,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CN,QAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { fetchCollectionsStartAsync } from '../../redux/directory/actions';\nimport { selectIsCollectionLoaded } from '../../redux/directory/selectors';\n\nimport {\n\tOverViewContainer,\n\tCollectionContainer\n} from '../../components/Collections/CollectionContainer';\n\nconst ShopPage = ({ match, fetchCollections, isLoading }) => {\n\t// eslint-disable-next-line\n\tuseEffect(() => fetchCollections(), []);\n\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path={`${match.path}`} component={OverViewContainer} />\n\t\t\t<Route\n\t\t\t\tpath={`${match.path}/:collectionId`}\n\t\t\t\tcomponent={CollectionContainer}\n\t\t\t/>\n\t\t</Switch>\n\t);\n};\n\nconst mapStateToProps = createStructuredSelector({\n\tisLoading: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n\tfetchCollections: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}