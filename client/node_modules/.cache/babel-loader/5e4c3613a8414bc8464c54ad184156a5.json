{"ast":null,"code":"!function (e, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? t(exports) : \"function\" == typeof define && define.amd ? define([\"exports\"], t) : t(((e = e || self).prettierPlugins = e.prettierPlugins || {}, e.prettierPlugins.markdown = {}));\n}(this, function (e) {\n  \"use strict\";\n\n  function t(e) {\n    return (t = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n      return typeof e;\n    } : function (e) {\n      return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n    })(e);\n  }\n\n  function r(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n\n  function n(e, t) {\n    for (var r = 0; r < t.length; r++) {\n      var n = t[r];\n      n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n    }\n  }\n\n  function i(e, t, r) {\n    return t && n(e.prototype, t), r && n(e, r), e;\n  }\n\n  function a(e, t) {\n    if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function\");\n    e.prototype = Object.create(t && t.prototype, {\n      constructor: {\n        value: e,\n        writable: !0,\n        configurable: !0\n      }\n    }), t && u(e, t);\n  }\n\n  function o(e) {\n    return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {\n      return e.__proto__ || Object.getPrototypeOf(e);\n    })(e);\n  }\n\n  function u(e, t) {\n    return (u = Object.setPrototypeOf || function (e, t) {\n      return e.__proto__ = t, e;\n    })(e, t);\n  }\n\n  function s(e, t) {\n    return !t || \"object\" != typeof t && \"function\" != typeof t ? function (e) {\n      if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      return e;\n    }(e) : t;\n  }\n\n  function c(e, t, r) {\n    return (c = \"undefined\" != typeof Reflect && Reflect.get ? Reflect.get : function (e, t, r) {\n      var n = function (e, t) {\n        for (; !Object.prototype.hasOwnProperty.call(e, t) && null !== (e = o(e)););\n\n        return e;\n      }(e, t);\n\n      if (n) {\n        var i = Object.getOwnPropertyDescriptor(n, t);\n        return i.get ? i.get.call(r) : i.value;\n      }\n    })(e, t, r || e);\n  }\n\n  function l(e, t) {\n    return function (e) {\n      if (Array.isArray(e)) return e;\n    }(e) || function (e, t) {\n      if (!(Symbol.iterator in Object(e) || \"[object Arguments]\" === Object.prototype.toString.call(e))) return;\n      var r = [],\n          n = !0,\n          i = !1,\n          a = void 0;\n\n      try {\n        for (var o, u = e[Symbol.iterator](); !(n = (o = u.next()).done) && (r.push(o.value), !t || r.length !== t); n = !0);\n      } catch (e) {\n        i = !0, a = e;\n      } finally {\n        try {\n          n || null == u.return || u.return();\n        } finally {\n          if (i) throw a;\n        }\n      }\n\n      return r;\n    }(e, t) || function () {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }();\n  }\n\n  var p = function () {\n    for (var e = {}, t = 0; t < arguments.length; t++) {\n      var r = arguments[t];\n\n      for (var n in r) f.call(r, n) && (e[n] = r[n]);\n    }\n\n    return e;\n  },\n      f = Object.prototype.hasOwnProperty;\n\n  function h(e) {\n    return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, \"default\") ? e.default : e;\n  }\n\n  function d(e, t) {\n    return e(t = {\n      exports: {}\n    }, t.exports), t.exports;\n  }\n\n  function D(e) {\n    return e && e.default || e;\n  }\n\n  var g = Object.freeze({\n    __proto__: null,\n    default: {}\n  }),\n      m = d(function (e) {\n    \"function\" == typeof Object.create ? e.exports = function (e, t) {\n      t && (e.super_ = t, e.prototype = Object.create(t.prototype, {\n        constructor: {\n          value: e,\n          enumerable: !1,\n          writable: !0,\n          configurable: !0\n        }\n      }));\n    } : e.exports = function (e, t) {\n      if (t) {\n        e.super_ = t;\n\n        var r = function () {};\n\n        r.prototype = t.prototype, e.prototype = new r(), e.prototype.constructor = e;\n      }\n    };\n  }),\n      v = D(g),\n      b = d(function (e) {\n    try {\n      var t = v;\n      if (\"function\" != typeof t.inherits) throw \"\";\n      e.exports = t.inherits;\n    } catch (t) {\n      e.exports = m;\n    }\n  }),\n      y = function (e) {\n    var r, n, i;\n\n    for (n in b(o, e), b(a, o), r = o.prototype) (i = r[n]) && \"object\" === t(i) && (r[n] = \"concat\" in i ? i.concat() : p(i));\n\n    return o;\n\n    function a(t) {\n      return e.apply(this, t);\n    }\n\n    function o() {\n      return this instanceof o ? e.apply(this, arguments) : new a(arguments);\n    }\n  }\n  /**\n     * @author Titus Wormer\n     * @copyright 2016 Titus Wormer\n     * @license MIT\n     * @module state-toggle\n     * @fileoverview Enter/exit a state.\n     */\n  ;\n\n  var E = function (e, t, r) {\n    return function () {\n      var n = r || this,\n          i = n[e];\n      return n[e] = !t, function () {\n        n[e] = i;\n      };\n    };\n  };\n\n  var C = function (e) {\n    var t = function (e) {\n      var t = [],\n          r = e.indexOf(\"\\n\");\n\n      for (; -1 !== r;) t.push(r + 1), r = e.indexOf(\"\\n\", r + 1);\n\n      return t.push(e.length + 1), t;\n    }(String(e));\n\n    return {\n      toPosition: A(t),\n      toOffset: w(t)\n    };\n  };\n\n  function A(e) {\n    return function (t) {\n      var r = -1,\n          n = e.length;\n      if (t < 0) return {};\n\n      for (; ++r < n;) if (e[r] > t) return {\n        line: r + 1,\n        column: t - (e[r - 1] || 0) + 1,\n        offset: t\n      };\n\n      return {};\n    };\n  }\n\n  function w(e) {\n    return function (t) {\n      var r = t && t.line,\n          n = t && t.column;\n      if (!isNaN(r) && !isNaN(n) && r - 1 in e) return (e[r - 2] || 0) + n - 1 || 0;\n      return -1;\n    };\n  }\n\n  var k = function (e, t) {\n    return function (r) {\n      var n,\n          i = 0,\n          a = r.indexOf(\"\\\\\"),\n          o = e[t],\n          u = [];\n\n      for (; -1 !== a;) u.push(r.slice(i, a)), i = a + 1, (n = r.charAt(i)) && -1 !== o.indexOf(n) || u.push(\"\\\\\"), a = r.indexOf(\"\\\\\", i);\n\n      return u.push(r.slice(i)), u.join(\"\");\n    };\n  };\n\n  var T = {\n    AEli: \"Æ\",\n    AElig: \"Æ\",\n    AM: \"&\",\n    AMP: \"&\",\n    Aacut: \"Á\",\n    Aacute: \"Á\",\n    Abreve: \"Ă\",\n    Acir: \"Â\",\n    Acirc: \"Â\",\n    Acy: \"А\",\n    Afr: \"𝔄\",\n    Agrav: \"À\",\n    Agrave: \"À\",\n    Alpha: \"Α\",\n    Amacr: \"Ā\",\n    And: \"⩓\",\n    Aogon: \"Ą\",\n    Aopf: \"𝔸\",\n    ApplyFunction: \"⁡\",\n    Arin: \"Å\",\n    Aring: \"Å\",\n    Ascr: \"𝒜\",\n    Assign: \"≔\",\n    Atild: \"Ã\",\n    Atilde: \"Ã\",\n    Aum: \"Ä\",\n    Auml: \"Ä\",\n    Backslash: \"∖\",\n    Barv: \"⫧\",\n    Barwed: \"⌆\",\n    Bcy: \"Б\",\n    Because: \"∵\",\n    Bernoullis: \"ℬ\",\n    Beta: \"Β\",\n    Bfr: \"𝔅\",\n    Bopf: \"𝔹\",\n    Breve: \"˘\",\n    Bscr: \"ℬ\",\n    Bumpeq: \"≎\",\n    CHcy: \"Ч\",\n    COP: \"©\",\n    COPY: \"©\",\n    Cacute: \"Ć\",\n    Cap: \"⋒\",\n    CapitalDifferentialD: \"ⅅ\",\n    Cayleys: \"ℭ\",\n    Ccaron: \"Č\",\n    Ccedi: \"Ç\",\n    Ccedil: \"Ç\",\n    Ccirc: \"Ĉ\",\n    Cconint: \"∰\",\n    Cdot: \"Ċ\",\n    Cedilla: \"¸\",\n    CenterDot: \"·\",\n    Cfr: \"ℭ\",\n    Chi: \"Χ\",\n    CircleDot: \"⊙\",\n    CircleMinus: \"⊖\",\n    CirclePlus: \"⊕\",\n    CircleTimes: \"⊗\",\n    ClockwiseContourIntegral: \"∲\",\n    CloseCurlyDoubleQuote: \"”\",\n    CloseCurlyQuote: \"’\",\n    Colon: \"∷\",\n    Colone: \"⩴\",\n    Congruent: \"≡\",\n    Conint: \"∯\",\n    ContourIntegral: \"∮\",\n    Copf: \"ℂ\",\n    Coproduct: \"∐\",\n    CounterClockwiseContourIntegral: \"∳\",\n    Cross: \"⨯\",\n    Cscr: \"𝒞\",\n    Cup: \"⋓\",\n    CupCap: \"≍\",\n    DD: \"ⅅ\",\n    DDotrahd: \"⤑\",\n    DJcy: \"Ђ\",\n    DScy: \"Ѕ\",\n    DZcy: \"Џ\",\n    Dagger: \"‡\",\n    Darr: \"↡\",\n    Dashv: \"⫤\",\n    Dcaron: \"Ď\",\n    Dcy: \"Д\",\n    Del: \"∇\",\n    Delta: \"Δ\",\n    Dfr: \"𝔇\",\n    DiacriticalAcute: \"´\",\n    DiacriticalDot: \"˙\",\n    DiacriticalDoubleAcute: \"˝\",\n    DiacriticalGrave: \"`\",\n    DiacriticalTilde: \"˜\",\n    Diamond: \"⋄\",\n    DifferentialD: \"ⅆ\",\n    Dopf: \"𝔻\",\n    Dot: \"¨\",\n    DotDot: \"⃜\",\n    DotEqual: \"≐\",\n    DoubleContourIntegral: \"∯\",\n    DoubleDot: \"¨\",\n    DoubleDownArrow: \"⇓\",\n    DoubleLeftArrow: \"⇐\",\n    DoubleLeftRightArrow: \"⇔\",\n    DoubleLeftTee: \"⫤\",\n    DoubleLongLeftArrow: \"⟸\",\n    DoubleLongLeftRightArrow: \"⟺\",\n    DoubleLongRightArrow: \"⟹\",\n    DoubleRightArrow: \"⇒\",\n    DoubleRightTee: \"⊨\",\n    DoubleUpArrow: \"⇑\",\n    DoubleUpDownArrow: \"⇕\",\n    DoubleVerticalBar: \"∥\",\n    DownArrow: \"↓\",\n    DownArrowBar: \"⤓\",\n    DownArrowUpArrow: \"⇵\",\n    DownBreve: \"̑\",\n    DownLeftRightVector: \"⥐\",\n    DownLeftTeeVector: \"⥞\",\n    DownLeftVector: \"↽\",\n    DownLeftVectorBar: \"⥖\",\n    DownRightTeeVector: \"⥟\",\n    DownRightVector: \"⇁\",\n    DownRightVectorBar: \"⥗\",\n    DownTee: \"⊤\",\n    DownTeeArrow: \"↧\",\n    Downarrow: \"⇓\",\n    Dscr: \"𝒟\",\n    Dstrok: \"Đ\",\n    ENG: \"Ŋ\",\n    ET: \"Ð\",\n    ETH: \"Ð\",\n    Eacut: \"É\",\n    Eacute: \"É\",\n    Ecaron: \"Ě\",\n    Ecir: \"Ê\",\n    Ecirc: \"Ê\",\n    Ecy: \"Э\",\n    Edot: \"Ė\",\n    Efr: \"𝔈\",\n    Egrav: \"È\",\n    Egrave: \"È\",\n    Element: \"∈\",\n    Emacr: \"Ē\",\n    EmptySmallSquare: \"◻\",\n    EmptyVerySmallSquare: \"▫\",\n    Eogon: \"Ę\",\n    Eopf: \"𝔼\",\n    Epsilon: \"Ε\",\n    Equal: \"⩵\",\n    EqualTilde: \"≂\",\n    Equilibrium: \"⇌\",\n    Escr: \"ℰ\",\n    Esim: \"⩳\",\n    Eta: \"Η\",\n    Eum: \"Ë\",\n    Euml: \"Ë\",\n    Exists: \"∃\",\n    ExponentialE: \"ⅇ\",\n    Fcy: \"Ф\",\n    Ffr: \"𝔉\",\n    FilledSmallSquare: \"◼\",\n    FilledVerySmallSquare: \"▪\",\n    Fopf: \"𝔽\",\n    ForAll: \"∀\",\n    Fouriertrf: \"ℱ\",\n    Fscr: \"ℱ\",\n    GJcy: \"Ѓ\",\n    G: \">\",\n    GT: \">\",\n    Gamma: \"Γ\",\n    Gammad: \"Ϝ\",\n    Gbreve: \"Ğ\",\n    Gcedil: \"Ģ\",\n    Gcirc: \"Ĝ\",\n    Gcy: \"Г\",\n    Gdot: \"Ġ\",\n    Gfr: \"𝔊\",\n    Gg: \"⋙\",\n    Gopf: \"𝔾\",\n    GreaterEqual: \"≥\",\n    GreaterEqualLess: \"⋛\",\n    GreaterFullEqual: \"≧\",\n    GreaterGreater: \"⪢\",\n    GreaterLess: \"≷\",\n    GreaterSlantEqual: \"⩾\",\n    GreaterTilde: \"≳\",\n    Gscr: \"𝒢\",\n    Gt: \"≫\",\n    HARDcy: \"Ъ\",\n    Hacek: \"ˇ\",\n    Hat: \"^\",\n    Hcirc: \"Ĥ\",\n    Hfr: \"ℌ\",\n    HilbertSpace: \"ℋ\",\n    Hopf: \"ℍ\",\n    HorizontalLine: \"─\",\n    Hscr: \"ℋ\",\n    Hstrok: \"Ħ\",\n    HumpDownHump: \"≎\",\n    HumpEqual: \"≏\",\n    IEcy: \"Е\",\n    IJlig: \"Ĳ\",\n    IOcy: \"Ё\",\n    Iacut: \"Í\",\n    Iacute: \"Í\",\n    Icir: \"Î\",\n    Icirc: \"Î\",\n    Icy: \"И\",\n    Idot: \"İ\",\n    Ifr: \"ℑ\",\n    Igrav: \"Ì\",\n    Igrave: \"Ì\",\n    Im: \"ℑ\",\n    Imacr: \"Ī\",\n    ImaginaryI: \"ⅈ\",\n    Implies: \"⇒\",\n    Int: \"∬\",\n    Integral: \"∫\",\n    Intersection: \"⋂\",\n    InvisibleComma: \"⁣\",\n    InvisibleTimes: \"⁢\",\n    Iogon: \"Į\",\n    Iopf: \"𝕀\",\n    Iota: \"Ι\",\n    Iscr: \"ℐ\",\n    Itilde: \"Ĩ\",\n    Iukcy: \"І\",\n    Ium: \"Ï\",\n    Iuml: \"Ï\",\n    Jcirc: \"Ĵ\",\n    Jcy: \"Й\",\n    Jfr: \"𝔍\",\n    Jopf: \"𝕁\",\n    Jscr: \"𝒥\",\n    Jsercy: \"Ј\",\n    Jukcy: \"Є\",\n    KHcy: \"Х\",\n    KJcy: \"Ќ\",\n    Kappa: \"Κ\",\n    Kcedil: \"Ķ\",\n    Kcy: \"К\",\n    Kfr: \"𝔎\",\n    Kopf: \"𝕂\",\n    Kscr: \"𝒦\",\n    LJcy: \"Љ\",\n    L: \"<\",\n    LT: \"<\",\n    Lacute: \"Ĺ\",\n    Lambda: \"Λ\",\n    Lang: \"⟪\",\n    Laplacetrf: \"ℒ\",\n    Larr: \"↞\",\n    Lcaron: \"Ľ\",\n    Lcedil: \"Ļ\",\n    Lcy: \"Л\",\n    LeftAngleBracket: \"⟨\",\n    LeftArrow: \"←\",\n    LeftArrowBar: \"⇤\",\n    LeftArrowRightArrow: \"⇆\",\n    LeftCeiling: \"⌈\",\n    LeftDoubleBracket: \"⟦\",\n    LeftDownTeeVector: \"⥡\",\n    LeftDownVector: \"⇃\",\n    LeftDownVectorBar: \"⥙\",\n    LeftFloor: \"⌊\",\n    LeftRightArrow: \"↔\",\n    LeftRightVector: \"⥎\",\n    LeftTee: \"⊣\",\n    LeftTeeArrow: \"↤\",\n    LeftTeeVector: \"⥚\",\n    LeftTriangle: \"⊲\",\n    LeftTriangleBar: \"⧏\",\n    LeftTriangleEqual: \"⊴\",\n    LeftUpDownVector: \"⥑\",\n    LeftUpTeeVector: \"⥠\",\n    LeftUpVector: \"↿\",\n    LeftUpVectorBar: \"⥘\",\n    LeftVector: \"↼\",\n    LeftVectorBar: \"⥒\",\n    Leftarrow: \"⇐\",\n    Leftrightarrow: \"⇔\",\n    LessEqualGreater: \"⋚\",\n    LessFullEqual: \"≦\",\n    LessGreater: \"≶\",\n    LessLess: \"⪡\",\n    LessSlantEqual: \"⩽\",\n    LessTilde: \"≲\",\n    Lfr: \"𝔏\",\n    Ll: \"⋘\",\n    Lleftarrow: \"⇚\",\n    Lmidot: \"Ŀ\",\n    LongLeftArrow: \"⟵\",\n    LongLeftRightArrow: \"⟷\",\n    LongRightArrow: \"⟶\",\n    Longleftarrow: \"⟸\",\n    Longleftrightarrow: \"⟺\",\n    Longrightarrow: \"⟹\",\n    Lopf: \"𝕃\",\n    LowerLeftArrow: \"↙\",\n    LowerRightArrow: \"↘\",\n    Lscr: \"ℒ\",\n    Lsh: \"↰\",\n    Lstrok: \"Ł\",\n    Lt: \"≪\",\n    Map: \"⤅\",\n    Mcy: \"М\",\n    MediumSpace: \" \",\n    Mellintrf: \"ℳ\",\n    Mfr: \"𝔐\",\n    MinusPlus: \"∓\",\n    Mopf: \"𝕄\",\n    Mscr: \"ℳ\",\n    Mu: \"Μ\",\n    NJcy: \"Њ\",\n    Nacute: \"Ń\",\n    Ncaron: \"Ň\",\n    Ncedil: \"Ņ\",\n    Ncy: \"Н\",\n    NegativeMediumSpace: \"​\",\n    NegativeThickSpace: \"​\",\n    NegativeThinSpace: \"​\",\n    NegativeVeryThinSpace: \"​\",\n    NestedGreaterGreater: \"≫\",\n    NestedLessLess: \"≪\",\n    NewLine: \"\\n\",\n    Nfr: \"𝔑\",\n    NoBreak: \"⁠\",\n    NonBreakingSpace: \" \",\n    Nopf: \"ℕ\",\n    Not: \"⫬\",\n    NotCongruent: \"≢\",\n    NotCupCap: \"≭\",\n    NotDoubleVerticalBar: \"∦\",\n    NotElement: \"∉\",\n    NotEqual: \"≠\",\n    NotEqualTilde: \"≂̸\",\n    NotExists: \"∄\",\n    NotGreater: \"≯\",\n    NotGreaterEqual: \"≱\",\n    NotGreaterFullEqual: \"≧̸\",\n    NotGreaterGreater: \"≫̸\",\n    NotGreaterLess: \"≹\",\n    NotGreaterSlantEqual: \"⩾̸\",\n    NotGreaterTilde: \"≵\",\n    NotHumpDownHump: \"≎̸\",\n    NotHumpEqual: \"≏̸\",\n    NotLeftTriangle: \"⋪\",\n    NotLeftTriangleBar: \"⧏̸\",\n    NotLeftTriangleEqual: \"⋬\",\n    NotLess: \"≮\",\n    NotLessEqual: \"≰\",\n    NotLessGreater: \"≸\",\n    NotLessLess: \"≪̸\",\n    NotLessSlantEqual: \"⩽̸\",\n    NotLessTilde: \"≴\",\n    NotNestedGreaterGreater: \"⪢̸\",\n    NotNestedLessLess: \"⪡̸\",\n    NotPrecedes: \"⊀\",\n    NotPrecedesEqual: \"⪯̸\",\n    NotPrecedesSlantEqual: \"⋠\",\n    NotReverseElement: \"∌\",\n    NotRightTriangle: \"⋫\",\n    NotRightTriangleBar: \"⧐̸\",\n    NotRightTriangleEqual: \"⋭\",\n    NotSquareSubset: \"⊏̸\",\n    NotSquareSubsetEqual: \"⋢\",\n    NotSquareSuperset: \"⊐̸\",\n    NotSquareSupersetEqual: \"⋣\",\n    NotSubset: \"⊂⃒\",\n    NotSubsetEqual: \"⊈\",\n    NotSucceeds: \"⊁\",\n    NotSucceedsEqual: \"⪰̸\",\n    NotSucceedsSlantEqual: \"⋡\",\n    NotSucceedsTilde: \"≿̸\",\n    NotSuperset: \"⊃⃒\",\n    NotSupersetEqual: \"⊉\",\n    NotTilde: \"≁\",\n    NotTildeEqual: \"≄\",\n    NotTildeFullEqual: \"≇\",\n    NotTildeTilde: \"≉\",\n    NotVerticalBar: \"∤\",\n    Nscr: \"𝒩\",\n    Ntild: \"Ñ\",\n    Ntilde: \"Ñ\",\n    Nu: \"Ν\",\n    OElig: \"Œ\",\n    Oacut: \"Ó\",\n    Oacute: \"Ó\",\n    Ocir: \"Ô\",\n    Ocirc: \"Ô\",\n    Ocy: \"О\",\n    Odblac: \"Ő\",\n    Ofr: \"𝔒\",\n    Ograv: \"Ò\",\n    Ograve: \"Ò\",\n    Omacr: \"Ō\",\n    Omega: \"Ω\",\n    Omicron: \"Ο\",\n    Oopf: \"𝕆\",\n    OpenCurlyDoubleQuote: \"“\",\n    OpenCurlyQuote: \"‘\",\n    Or: \"⩔\",\n    Oscr: \"𝒪\",\n    Oslas: \"Ø\",\n    Oslash: \"Ø\",\n    Otild: \"Õ\",\n    Otilde: \"Õ\",\n    Otimes: \"⨷\",\n    Oum: \"Ö\",\n    Ouml: \"Ö\",\n    OverBar: \"‾\",\n    OverBrace: \"⏞\",\n    OverBracket: \"⎴\",\n    OverParenthesis: \"⏜\",\n    PartialD: \"∂\",\n    Pcy: \"П\",\n    Pfr: \"𝔓\",\n    Phi: \"Φ\",\n    Pi: \"Π\",\n    PlusMinus: \"±\",\n    Poincareplane: \"ℌ\",\n    Popf: \"ℙ\",\n    Pr: \"⪻\",\n    Precedes: \"≺\",\n    PrecedesEqual: \"⪯\",\n    PrecedesSlantEqual: \"≼\",\n    PrecedesTilde: \"≾\",\n    Prime: \"″\",\n    Product: \"∏\",\n    Proportion: \"∷\",\n    Proportional: \"∝\",\n    Pscr: \"𝒫\",\n    Psi: \"Ψ\",\n    QUO: '\"',\n    QUOT: '\"',\n    Qfr: \"𝔔\",\n    Qopf: \"ℚ\",\n    Qscr: \"𝒬\",\n    RBarr: \"⤐\",\n    RE: \"®\",\n    REG: \"®\",\n    Racute: \"Ŕ\",\n    Rang: \"⟫\",\n    Rarr: \"↠\",\n    Rarrtl: \"⤖\",\n    Rcaron: \"Ř\",\n    Rcedil: \"Ŗ\",\n    Rcy: \"Р\",\n    Re: \"ℜ\",\n    ReverseElement: \"∋\",\n    ReverseEquilibrium: \"⇋\",\n    ReverseUpEquilibrium: \"⥯\",\n    Rfr: \"ℜ\",\n    Rho: \"Ρ\",\n    RightAngleBracket: \"⟩\",\n    RightArrow: \"→\",\n    RightArrowBar: \"⇥\",\n    RightArrowLeftArrow: \"⇄\",\n    RightCeiling: \"⌉\",\n    RightDoubleBracket: \"⟧\",\n    RightDownTeeVector: \"⥝\",\n    RightDownVector: \"⇂\",\n    RightDownVectorBar: \"⥕\",\n    RightFloor: \"⌋\",\n    RightTee: \"⊢\",\n    RightTeeArrow: \"↦\",\n    RightTeeVector: \"⥛\",\n    RightTriangle: \"⊳\",\n    RightTriangleBar: \"⧐\",\n    RightTriangleEqual: \"⊵\",\n    RightUpDownVector: \"⥏\",\n    RightUpTeeVector: \"⥜\",\n    RightUpVector: \"↾\",\n    RightUpVectorBar: \"⥔\",\n    RightVector: \"⇀\",\n    RightVectorBar: \"⥓\",\n    Rightarrow: \"⇒\",\n    Ropf: \"ℝ\",\n    RoundImplies: \"⥰\",\n    Rrightarrow: \"⇛\",\n    Rscr: \"ℛ\",\n    Rsh: \"↱\",\n    RuleDelayed: \"⧴\",\n    SHCHcy: \"Щ\",\n    SHcy: \"Ш\",\n    SOFTcy: \"Ь\",\n    Sacute: \"Ś\",\n    Sc: \"⪼\",\n    Scaron: \"Š\",\n    Scedil: \"Ş\",\n    Scirc: \"Ŝ\",\n    Scy: \"С\",\n    Sfr: \"𝔖\",\n    ShortDownArrow: \"↓\",\n    ShortLeftArrow: \"←\",\n    ShortRightArrow: \"→\",\n    ShortUpArrow: \"↑\",\n    Sigma: \"Σ\",\n    SmallCircle: \"∘\",\n    Sopf: \"𝕊\",\n    Sqrt: \"√\",\n    Square: \"□\",\n    SquareIntersection: \"⊓\",\n    SquareSubset: \"⊏\",\n    SquareSubsetEqual: \"⊑\",\n    SquareSuperset: \"⊐\",\n    SquareSupersetEqual: \"⊒\",\n    SquareUnion: \"⊔\",\n    Sscr: \"𝒮\",\n    Star: \"⋆\",\n    Sub: \"⋐\",\n    Subset: \"⋐\",\n    SubsetEqual: \"⊆\",\n    Succeeds: \"≻\",\n    SucceedsEqual: \"⪰\",\n    SucceedsSlantEqual: \"≽\",\n    SucceedsTilde: \"≿\",\n    SuchThat: \"∋\",\n    Sum: \"∑\",\n    Sup: \"⋑\",\n    Superset: \"⊃\",\n    SupersetEqual: \"⊇\",\n    Supset: \"⋑\",\n    THOR: \"Þ\",\n    THORN: \"Þ\",\n    TRADE: \"™\",\n    TSHcy: \"Ћ\",\n    TScy: \"Ц\",\n    Tab: \"\\t\",\n    Tau: \"Τ\",\n    Tcaron: \"Ť\",\n    Tcedil: \"Ţ\",\n    Tcy: \"Т\",\n    Tfr: \"𝔗\",\n    Therefore: \"∴\",\n    Theta: \"Θ\",\n    ThickSpace: \"  \",\n    ThinSpace: \" \",\n    Tilde: \"∼\",\n    TildeEqual: \"≃\",\n    TildeFullEqual: \"≅\",\n    TildeTilde: \"≈\",\n    Topf: \"𝕋\",\n    TripleDot: \"⃛\",\n    Tscr: \"𝒯\",\n    Tstrok: \"Ŧ\",\n    Uacut: \"Ú\",\n    Uacute: \"Ú\",\n    Uarr: \"↟\",\n    Uarrocir: \"⥉\",\n    Ubrcy: \"Ў\",\n    Ubreve: \"Ŭ\",\n    Ucir: \"Û\",\n    Ucirc: \"Û\",\n    Ucy: \"У\",\n    Udblac: \"Ű\",\n    Ufr: \"𝔘\",\n    Ugrav: \"Ù\",\n    Ugrave: \"Ù\",\n    Umacr: \"Ū\",\n    UnderBar: \"_\",\n    UnderBrace: \"⏟\",\n    UnderBracket: \"⎵\",\n    UnderParenthesis: \"⏝\",\n    Union: \"⋃\",\n    UnionPlus: \"⊎\",\n    Uogon: \"Ų\",\n    Uopf: \"𝕌\",\n    UpArrow: \"↑\",\n    UpArrowBar: \"⤒\",\n    UpArrowDownArrow: \"⇅\",\n    UpDownArrow: \"↕\",\n    UpEquilibrium: \"⥮\",\n    UpTee: \"⊥\",\n    UpTeeArrow: \"↥\",\n    Uparrow: \"⇑\",\n    Updownarrow: \"⇕\",\n    UpperLeftArrow: \"↖\",\n    UpperRightArrow: \"↗\",\n    Upsi: \"ϒ\",\n    Upsilon: \"Υ\",\n    Uring: \"Ů\",\n    Uscr: \"𝒰\",\n    Utilde: \"Ũ\",\n    Uum: \"Ü\",\n    Uuml: \"Ü\",\n    VDash: \"⊫\",\n    Vbar: \"⫫\",\n    Vcy: \"В\",\n    Vdash: \"⊩\",\n    Vdashl: \"⫦\",\n    Vee: \"⋁\",\n    Verbar: \"‖\",\n    Vert: \"‖\",\n    VerticalBar: \"∣\",\n    VerticalLine: \"|\",\n    VerticalSeparator: \"❘\",\n    VerticalTilde: \"≀\",\n    VeryThinSpace: \" \",\n    Vfr: \"𝔙\",\n    Vopf: \"𝕍\",\n    Vscr: \"𝒱\",\n    Vvdash: \"⊪\",\n    Wcirc: \"Ŵ\",\n    Wedge: \"⋀\",\n    Wfr: \"𝔚\",\n    Wopf: \"𝕎\",\n    Wscr: \"𝒲\",\n    Xfr: \"𝔛\",\n    Xi: \"Ξ\",\n    Xopf: \"𝕏\",\n    Xscr: \"𝒳\",\n    YAcy: \"Я\",\n    YIcy: \"Ї\",\n    YUcy: \"Ю\",\n    Yacut: \"Ý\",\n    Yacute: \"Ý\",\n    Ycirc: \"Ŷ\",\n    Ycy: \"Ы\",\n    Yfr: \"𝔜\",\n    Yopf: \"𝕐\",\n    Yscr: \"𝒴\",\n    Yuml: \"Ÿ\",\n    ZHcy: \"Ж\",\n    Zacute: \"Ź\",\n    Zcaron: \"Ž\",\n    Zcy: \"З\",\n    Zdot: \"Ż\",\n    ZeroWidthSpace: \"​\",\n    Zeta: \"Ζ\",\n    Zfr: \"ℨ\",\n    Zopf: \"ℤ\",\n    Zscr: \"𝒵\",\n    aacut: \"á\",\n    aacute: \"á\",\n    abreve: \"ă\",\n    ac: \"∾\",\n    acE: \"∾̳\",\n    acd: \"∿\",\n    acir: \"â\",\n    acirc: \"â\",\n    acut: \"´\",\n    acute: \"´\",\n    acy: \"а\",\n    aeli: \"æ\",\n    aelig: \"æ\",\n    af: \"⁡\",\n    afr: \"𝔞\",\n    agrav: \"à\",\n    agrave: \"à\",\n    alefsym: \"ℵ\",\n    aleph: \"ℵ\",\n    alpha: \"α\",\n    amacr: \"ā\",\n    amalg: \"⨿\",\n    am: \"&\",\n    amp: \"&\",\n    and: \"∧\",\n    andand: \"⩕\",\n    andd: \"⩜\",\n    andslope: \"⩘\",\n    andv: \"⩚\",\n    ang: \"∠\",\n    ange: \"⦤\",\n    angle: \"∠\",\n    angmsd: \"∡\",\n    angmsdaa: \"⦨\",\n    angmsdab: \"⦩\",\n    angmsdac: \"⦪\",\n    angmsdad: \"⦫\",\n    angmsdae: \"⦬\",\n    angmsdaf: \"⦭\",\n    angmsdag: \"⦮\",\n    angmsdah: \"⦯\",\n    angrt: \"∟\",\n    angrtvb: \"⊾\",\n    angrtvbd: \"⦝\",\n    angsph: \"∢\",\n    angst: \"Å\",\n    angzarr: \"⍼\",\n    aogon: \"ą\",\n    aopf: \"𝕒\",\n    ap: \"≈\",\n    apE: \"⩰\",\n    apacir: \"⩯\",\n    ape: \"≊\",\n    apid: \"≋\",\n    apos: \"'\",\n    approx: \"≈\",\n    approxeq: \"≊\",\n    arin: \"å\",\n    aring: \"å\",\n    ascr: \"𝒶\",\n    ast: \"*\",\n    asymp: \"≈\",\n    asympeq: \"≍\",\n    atild: \"ã\",\n    atilde: \"ã\",\n    aum: \"ä\",\n    auml: \"ä\",\n    awconint: \"∳\",\n    awint: \"⨑\",\n    bNot: \"⫭\",\n    backcong: \"≌\",\n    backepsilon: \"϶\",\n    backprime: \"‵\",\n    backsim: \"∽\",\n    backsimeq: \"⋍\",\n    barvee: \"⊽\",\n    barwed: \"⌅\",\n    barwedge: \"⌅\",\n    bbrk: \"⎵\",\n    bbrktbrk: \"⎶\",\n    bcong: \"≌\",\n    bcy: \"б\",\n    bdquo: \"„\",\n    becaus: \"∵\",\n    because: \"∵\",\n    bemptyv: \"⦰\",\n    bepsi: \"϶\",\n    bernou: \"ℬ\",\n    beta: \"β\",\n    beth: \"ℶ\",\n    between: \"≬\",\n    bfr: \"𝔟\",\n    bigcap: \"⋂\",\n    bigcirc: \"◯\",\n    bigcup: \"⋃\",\n    bigodot: \"⨀\",\n    bigoplus: \"⨁\",\n    bigotimes: \"⨂\",\n    bigsqcup: \"⨆\",\n    bigstar: \"★\",\n    bigtriangledown: \"▽\",\n    bigtriangleup: \"△\",\n    biguplus: \"⨄\",\n    bigvee: \"⋁\",\n    bigwedge: \"⋀\",\n    bkarow: \"⤍\",\n    blacklozenge: \"⧫\",\n    blacksquare: \"▪\",\n    blacktriangle: \"▴\",\n    blacktriangledown: \"▾\",\n    blacktriangleleft: \"◂\",\n    blacktriangleright: \"▸\",\n    blank: \"␣\",\n    blk12: \"▒\",\n    blk14: \"░\",\n    blk34: \"▓\",\n    block: \"█\",\n    bne: \"=⃥\",\n    bnequiv: \"≡⃥\",\n    bnot: \"⌐\",\n    bopf: \"𝕓\",\n    bot: \"⊥\",\n    bottom: \"⊥\",\n    bowtie: \"⋈\",\n    boxDL: \"╗\",\n    boxDR: \"╔\",\n    boxDl: \"╖\",\n    boxDr: \"╓\",\n    boxH: \"═\",\n    boxHD: \"╦\",\n    boxHU: \"╩\",\n    boxHd: \"╤\",\n    boxHu: \"╧\",\n    boxUL: \"╝\",\n    boxUR: \"╚\",\n    boxUl: \"╜\",\n    boxUr: \"╙\",\n    boxV: \"║\",\n    boxVH: \"╬\",\n    boxVL: \"╣\",\n    boxVR: \"╠\",\n    boxVh: \"╫\",\n    boxVl: \"╢\",\n    boxVr: \"╟\",\n    boxbox: \"⧉\",\n    boxdL: \"╕\",\n    boxdR: \"╒\",\n    boxdl: \"┐\",\n    boxdr: \"┌\",\n    boxh: \"─\",\n    boxhD: \"╥\",\n    boxhU: \"╨\",\n    boxhd: \"┬\",\n    boxhu: \"┴\",\n    boxminus: \"⊟\",\n    boxplus: \"⊞\",\n    boxtimes: \"⊠\",\n    boxuL: \"╛\",\n    boxuR: \"╘\",\n    boxul: \"┘\",\n    boxur: \"└\",\n    boxv: \"│\",\n    boxvH: \"╪\",\n    boxvL: \"╡\",\n    boxvR: \"╞\",\n    boxvh: \"┼\",\n    boxvl: \"┤\",\n    boxvr: \"├\",\n    bprime: \"‵\",\n    breve: \"˘\",\n    brvba: \"¦\",\n    brvbar: \"¦\",\n    bscr: \"𝒷\",\n    bsemi: \"⁏\",\n    bsim: \"∽\",\n    bsime: \"⋍\",\n    bsol: \"\\\\\",\n    bsolb: \"⧅\",\n    bsolhsub: \"⟈\",\n    bull: \"•\",\n    bullet: \"•\",\n    bump: \"≎\",\n    bumpE: \"⪮\",\n    bumpe: \"≏\",\n    bumpeq: \"≏\",\n    cacute: \"ć\",\n    cap: \"∩\",\n    capand: \"⩄\",\n    capbrcup: \"⩉\",\n    capcap: \"⩋\",\n    capcup: \"⩇\",\n    capdot: \"⩀\",\n    caps: \"∩︀\",\n    caret: \"⁁\",\n    caron: \"ˇ\",\n    ccaps: \"⩍\",\n    ccaron: \"č\",\n    ccedi: \"ç\",\n    ccedil: \"ç\",\n    ccirc: \"ĉ\",\n    ccups: \"⩌\",\n    ccupssm: \"⩐\",\n    cdot: \"ċ\",\n    cedi: \"¸\",\n    cedil: \"¸\",\n    cemptyv: \"⦲\",\n    cen: \"¢\",\n    cent: \"¢\",\n    centerdot: \"·\",\n    cfr: \"𝔠\",\n    chcy: \"ч\",\n    check: \"✓\",\n    checkmark: \"✓\",\n    chi: \"χ\",\n    cir: \"○\",\n    cirE: \"⧃\",\n    circ: \"ˆ\",\n    circeq: \"≗\",\n    circlearrowleft: \"↺\",\n    circlearrowright: \"↻\",\n    circledR: \"®\",\n    circledS: \"Ⓢ\",\n    circledast: \"⊛\",\n    circledcirc: \"⊚\",\n    circleddash: \"⊝\",\n    cire: \"≗\",\n    cirfnint: \"⨐\",\n    cirmid: \"⫯\",\n    cirscir: \"⧂\",\n    clubs: \"♣\",\n    clubsuit: \"♣\",\n    colon: \":\",\n    colone: \"≔\",\n    coloneq: \"≔\",\n    comma: \",\",\n    commat: \"@\",\n    comp: \"∁\",\n    compfn: \"∘\",\n    complement: \"∁\",\n    complexes: \"ℂ\",\n    cong: \"≅\",\n    congdot: \"⩭\",\n    conint: \"∮\",\n    copf: \"𝕔\",\n    coprod: \"∐\",\n    cop: \"©\",\n    copy: \"©\",\n    copysr: \"℗\",\n    crarr: \"↵\",\n    cross: \"✗\",\n    cscr: \"𝒸\",\n    csub: \"⫏\",\n    csube: \"⫑\",\n    csup: \"⫐\",\n    csupe: \"⫒\",\n    ctdot: \"⋯\",\n    cudarrl: \"⤸\",\n    cudarrr: \"⤵\",\n    cuepr: \"⋞\",\n    cuesc: \"⋟\",\n    cularr: \"↶\",\n    cularrp: \"⤽\",\n    cup: \"∪\",\n    cupbrcap: \"⩈\",\n    cupcap: \"⩆\",\n    cupcup: \"⩊\",\n    cupdot: \"⊍\",\n    cupor: \"⩅\",\n    cups: \"∪︀\",\n    curarr: \"↷\",\n    curarrm: \"⤼\",\n    curlyeqprec: \"⋞\",\n    curlyeqsucc: \"⋟\",\n    curlyvee: \"⋎\",\n    curlywedge: \"⋏\",\n    curre: \"¤\",\n    curren: \"¤\",\n    curvearrowleft: \"↶\",\n    curvearrowright: \"↷\",\n    cuvee: \"⋎\",\n    cuwed: \"⋏\",\n    cwconint: \"∲\",\n    cwint: \"∱\",\n    cylcty: \"⌭\",\n    dArr: \"⇓\",\n    dHar: \"⥥\",\n    dagger: \"†\",\n    daleth: \"ℸ\",\n    darr: \"↓\",\n    dash: \"‐\",\n    dashv: \"⊣\",\n    dbkarow: \"⤏\",\n    dblac: \"˝\",\n    dcaron: \"ď\",\n    dcy: \"д\",\n    dd: \"ⅆ\",\n    ddagger: \"‡\",\n    ddarr: \"⇊\",\n    ddotseq: \"⩷\",\n    de: \"°\",\n    deg: \"°\",\n    delta: \"δ\",\n    demptyv: \"⦱\",\n    dfisht: \"⥿\",\n    dfr: \"𝔡\",\n    dharl: \"⇃\",\n    dharr: \"⇂\",\n    diam: \"⋄\",\n    diamond: \"⋄\",\n    diamondsuit: \"♦\",\n    diams: \"♦\",\n    die: \"¨\",\n    digamma: \"ϝ\",\n    disin: \"⋲\",\n    div: \"÷\",\n    divid: \"÷\",\n    divide: \"÷\",\n    divideontimes: \"⋇\",\n    divonx: \"⋇\",\n    djcy: \"ђ\",\n    dlcorn: \"⌞\",\n    dlcrop: \"⌍\",\n    dollar: \"$\",\n    dopf: \"𝕕\",\n    dot: \"˙\",\n    doteq: \"≐\",\n    doteqdot: \"≑\",\n    dotminus: \"∸\",\n    dotplus: \"∔\",\n    dotsquare: \"⊡\",\n    doublebarwedge: \"⌆\",\n    downarrow: \"↓\",\n    downdownarrows: \"⇊\",\n    downharpoonleft: \"⇃\",\n    downharpoonright: \"⇂\",\n    drbkarow: \"⤐\",\n    drcorn: \"⌟\",\n    drcrop: \"⌌\",\n    dscr: \"𝒹\",\n    dscy: \"ѕ\",\n    dsol: \"⧶\",\n    dstrok: \"đ\",\n    dtdot: \"⋱\",\n    dtri: \"▿\",\n    dtrif: \"▾\",\n    duarr: \"⇵\",\n    duhar: \"⥯\",\n    dwangle: \"⦦\",\n    dzcy: \"џ\",\n    dzigrarr: \"⟿\",\n    eDDot: \"⩷\",\n    eDot: \"≑\",\n    eacut: \"é\",\n    eacute: \"é\",\n    easter: \"⩮\",\n    ecaron: \"ě\",\n    ecir: \"ê\",\n    ecirc: \"ê\",\n    ecolon: \"≕\",\n    ecy: \"э\",\n    edot: \"ė\",\n    ee: \"ⅇ\",\n    efDot: \"≒\",\n    efr: \"𝔢\",\n    eg: \"⪚\",\n    egrav: \"è\",\n    egrave: \"è\",\n    egs: \"⪖\",\n    egsdot: \"⪘\",\n    el: \"⪙\",\n    elinters: \"⏧\",\n    ell: \"ℓ\",\n    els: \"⪕\",\n    elsdot: \"⪗\",\n    emacr: \"ē\",\n    empty: \"∅\",\n    emptyset: \"∅\",\n    emptyv: \"∅\",\n    emsp13: \" \",\n    emsp14: \" \",\n    emsp: \" \",\n    eng: \"ŋ\",\n    ensp: \" \",\n    eogon: \"ę\",\n    eopf: \"𝕖\",\n    epar: \"⋕\",\n    eparsl: \"⧣\",\n    eplus: \"⩱\",\n    epsi: \"ε\",\n    epsilon: \"ε\",\n    epsiv: \"ϵ\",\n    eqcirc: \"≖\",\n    eqcolon: \"≕\",\n    eqsim: \"≂\",\n    eqslantgtr: \"⪖\",\n    eqslantless: \"⪕\",\n    equals: \"=\",\n    equest: \"≟\",\n    equiv: \"≡\",\n    equivDD: \"⩸\",\n    eqvparsl: \"⧥\",\n    erDot: \"≓\",\n    erarr: \"⥱\",\n    escr: \"ℯ\",\n    esdot: \"≐\",\n    esim: \"≂\",\n    eta: \"η\",\n    et: \"ð\",\n    eth: \"ð\",\n    eum: \"ë\",\n    euml: \"ë\",\n    euro: \"€\",\n    excl: \"!\",\n    exist: \"∃\",\n    expectation: \"ℰ\",\n    exponentiale: \"ⅇ\",\n    fallingdotseq: \"≒\",\n    fcy: \"ф\",\n    female: \"♀\",\n    ffilig: \"ﬃ\",\n    fflig: \"ﬀ\",\n    ffllig: \"ﬄ\",\n    ffr: \"𝔣\",\n    filig: \"ﬁ\",\n    fjlig: \"fj\",\n    flat: \"♭\",\n    fllig: \"ﬂ\",\n    fltns: \"▱\",\n    fnof: \"ƒ\",\n    fopf: \"𝕗\",\n    forall: \"∀\",\n    fork: \"⋔\",\n    forkv: \"⫙\",\n    fpartint: \"⨍\",\n    frac1: \"¼\",\n    frac12: \"½\",\n    frac13: \"⅓\",\n    frac14: \"¼\",\n    frac15: \"⅕\",\n    frac16: \"⅙\",\n    frac18: \"⅛\",\n    frac23: \"⅔\",\n    frac25: \"⅖\",\n    frac3: \"¾\",\n    frac34: \"¾\",\n    frac35: \"⅗\",\n    frac38: \"⅜\",\n    frac45: \"⅘\",\n    frac56: \"⅚\",\n    frac58: \"⅝\",\n    frac78: \"⅞\",\n    frasl: \"⁄\",\n    frown: \"⌢\",\n    fscr: \"𝒻\",\n    gE: \"≧\",\n    gEl: \"⪌\",\n    gacute: \"ǵ\",\n    gamma: \"γ\",\n    gammad: \"ϝ\",\n    gap: \"⪆\",\n    gbreve: \"ğ\",\n    gcirc: \"ĝ\",\n    gcy: \"г\",\n    gdot: \"ġ\",\n    ge: \"≥\",\n    gel: \"⋛\",\n    geq: \"≥\",\n    geqq: \"≧\",\n    geqslant: \"⩾\",\n    ges: \"⩾\",\n    gescc: \"⪩\",\n    gesdot: \"⪀\",\n    gesdoto: \"⪂\",\n    gesdotol: \"⪄\",\n    gesl: \"⋛︀\",\n    gesles: \"⪔\",\n    gfr: \"𝔤\",\n    gg: \"≫\",\n    ggg: \"⋙\",\n    gimel: \"ℷ\",\n    gjcy: \"ѓ\",\n    gl: \"≷\",\n    glE: \"⪒\",\n    gla: \"⪥\",\n    glj: \"⪤\",\n    gnE: \"≩\",\n    gnap: \"⪊\",\n    gnapprox: \"⪊\",\n    gne: \"⪈\",\n    gneq: \"⪈\",\n    gneqq: \"≩\",\n    gnsim: \"⋧\",\n    gopf: \"𝕘\",\n    grave: \"`\",\n    gscr: \"ℊ\",\n    gsim: \"≳\",\n    gsime: \"⪎\",\n    gsiml: \"⪐\",\n    g: \">\",\n    gt: \">\",\n    gtcc: \"⪧\",\n    gtcir: \"⩺\",\n    gtdot: \"⋗\",\n    gtlPar: \"⦕\",\n    gtquest: \"⩼\",\n    gtrapprox: \"⪆\",\n    gtrarr: \"⥸\",\n    gtrdot: \"⋗\",\n    gtreqless: \"⋛\",\n    gtreqqless: \"⪌\",\n    gtrless: \"≷\",\n    gtrsim: \"≳\",\n    gvertneqq: \"≩︀\",\n    gvnE: \"≩︀\",\n    hArr: \"⇔\",\n    hairsp: \" \",\n    half: \"½\",\n    hamilt: \"ℋ\",\n    hardcy: \"ъ\",\n    harr: \"↔\",\n    harrcir: \"⥈\",\n    harrw: \"↭\",\n    hbar: \"ℏ\",\n    hcirc: \"ĥ\",\n    hearts: \"♥\",\n    heartsuit: \"♥\",\n    hellip: \"…\",\n    hercon: \"⊹\",\n    hfr: \"𝔥\",\n    hksearow: \"⤥\",\n    hkswarow: \"⤦\",\n    hoarr: \"⇿\",\n    homtht: \"∻\",\n    hookleftarrow: \"↩\",\n    hookrightarrow: \"↪\",\n    hopf: \"𝕙\",\n    horbar: \"―\",\n    hscr: \"𝒽\",\n    hslash: \"ℏ\",\n    hstrok: \"ħ\",\n    hybull: \"⁃\",\n    hyphen: \"‐\",\n    iacut: \"í\",\n    iacute: \"í\",\n    ic: \"⁣\",\n    icir: \"î\",\n    icirc: \"î\",\n    icy: \"и\",\n    iecy: \"е\",\n    iexc: \"¡\",\n    iexcl: \"¡\",\n    iff: \"⇔\",\n    ifr: \"𝔦\",\n    igrav: \"ì\",\n    igrave: \"ì\",\n    ii: \"ⅈ\",\n    iiiint: \"⨌\",\n    iiint: \"∭\",\n    iinfin: \"⧜\",\n    iiota: \"℩\",\n    ijlig: \"ĳ\",\n    imacr: \"ī\",\n    image: \"ℑ\",\n    imagline: \"ℐ\",\n    imagpart: \"ℑ\",\n    imath: \"ı\",\n    imof: \"⊷\",\n    imped: \"Ƶ\",\n    in: \"∈\",\n    incare: \"℅\",\n    infin: \"∞\",\n    infintie: \"⧝\",\n    inodot: \"ı\",\n    int: \"∫\",\n    intcal: \"⊺\",\n    integers: \"ℤ\",\n    intercal: \"⊺\",\n    intlarhk: \"⨗\",\n    intprod: \"⨼\",\n    iocy: \"ё\",\n    iogon: \"į\",\n    iopf: \"𝕚\",\n    iota: \"ι\",\n    iprod: \"⨼\",\n    iques: \"¿\",\n    iquest: \"¿\",\n    iscr: \"𝒾\",\n    isin: \"∈\",\n    isinE: \"⋹\",\n    isindot: \"⋵\",\n    isins: \"⋴\",\n    isinsv: \"⋳\",\n    isinv: \"∈\",\n    it: \"⁢\",\n    itilde: \"ĩ\",\n    iukcy: \"і\",\n    ium: \"ï\",\n    iuml: \"ï\",\n    jcirc: \"ĵ\",\n    jcy: \"й\",\n    jfr: \"𝔧\",\n    jmath: \"ȷ\",\n    jopf: \"𝕛\",\n    jscr: \"𝒿\",\n    jsercy: \"ј\",\n    jukcy: \"є\",\n    kappa: \"κ\",\n    kappav: \"ϰ\",\n    kcedil: \"ķ\",\n    kcy: \"к\",\n    kfr: \"𝔨\",\n    kgreen: \"ĸ\",\n    khcy: \"х\",\n    kjcy: \"ќ\",\n    kopf: \"𝕜\",\n    kscr: \"𝓀\",\n    lAarr: \"⇚\",\n    lArr: \"⇐\",\n    lAtail: \"⤛\",\n    lBarr: \"⤎\",\n    lE: \"≦\",\n    lEg: \"⪋\",\n    lHar: \"⥢\",\n    lacute: \"ĺ\",\n    laemptyv: \"⦴\",\n    lagran: \"ℒ\",\n    lambda: \"λ\",\n    lang: \"⟨\",\n    langd: \"⦑\",\n    langle: \"⟨\",\n    lap: \"⪅\",\n    laqu: \"«\",\n    laquo: \"«\",\n    larr: \"←\",\n    larrb: \"⇤\",\n    larrbfs: \"⤟\",\n    larrfs: \"⤝\",\n    larrhk: \"↩\",\n    larrlp: \"↫\",\n    larrpl: \"⤹\",\n    larrsim: \"⥳\",\n    larrtl: \"↢\",\n    lat: \"⪫\",\n    latail: \"⤙\",\n    late: \"⪭\",\n    lates: \"⪭︀\",\n    lbarr: \"⤌\",\n    lbbrk: \"❲\",\n    lbrace: \"{\",\n    lbrack: \"[\",\n    lbrke: \"⦋\",\n    lbrksld: \"⦏\",\n    lbrkslu: \"⦍\",\n    lcaron: \"ľ\",\n    lcedil: \"ļ\",\n    lceil: \"⌈\",\n    lcub: \"{\",\n    lcy: \"л\",\n    ldca: \"⤶\",\n    ldquo: \"“\",\n    ldquor: \"„\",\n    ldrdhar: \"⥧\",\n    ldrushar: \"⥋\",\n    ldsh: \"↲\",\n    le: \"≤\",\n    leftarrow: \"←\",\n    leftarrowtail: \"↢\",\n    leftharpoondown: \"↽\",\n    leftharpoonup: \"↼\",\n    leftleftarrows: \"⇇\",\n    leftrightarrow: \"↔\",\n    leftrightarrows: \"⇆\",\n    leftrightharpoons: \"⇋\",\n    leftrightsquigarrow: \"↭\",\n    leftthreetimes: \"⋋\",\n    leg: \"⋚\",\n    leq: \"≤\",\n    leqq: \"≦\",\n    leqslant: \"⩽\",\n    les: \"⩽\",\n    lescc: \"⪨\",\n    lesdot: \"⩿\",\n    lesdoto: \"⪁\",\n    lesdotor: \"⪃\",\n    lesg: \"⋚︀\",\n    lesges: \"⪓\",\n    lessapprox: \"⪅\",\n    lessdot: \"⋖\",\n    lesseqgtr: \"⋚\",\n    lesseqqgtr: \"⪋\",\n    lessgtr: \"≶\",\n    lesssim: \"≲\",\n    lfisht: \"⥼\",\n    lfloor: \"⌊\",\n    lfr: \"𝔩\",\n    lg: \"≶\",\n    lgE: \"⪑\",\n    lhard: \"↽\",\n    lharu: \"↼\",\n    lharul: \"⥪\",\n    lhblk: \"▄\",\n    ljcy: \"љ\",\n    ll: \"≪\",\n    llarr: \"⇇\",\n    llcorner: \"⌞\",\n    llhard: \"⥫\",\n    lltri: \"◺\",\n    lmidot: \"ŀ\",\n    lmoust: \"⎰\",\n    lmoustache: \"⎰\",\n    lnE: \"≨\",\n    lnap: \"⪉\",\n    lnapprox: \"⪉\",\n    lne: \"⪇\",\n    lneq: \"⪇\",\n    lneqq: \"≨\",\n    lnsim: \"⋦\",\n    loang: \"⟬\",\n    loarr: \"⇽\",\n    lobrk: \"⟦\",\n    longleftarrow: \"⟵\",\n    longleftrightarrow: \"⟷\",\n    longmapsto: \"⟼\",\n    longrightarrow: \"⟶\",\n    looparrowleft: \"↫\",\n    looparrowright: \"↬\",\n    lopar: \"⦅\",\n    lopf: \"𝕝\",\n    loplus: \"⨭\",\n    lotimes: \"⨴\",\n    lowast: \"∗\",\n    lowbar: \"_\",\n    loz: \"◊\",\n    lozenge: \"◊\",\n    lozf: \"⧫\",\n    lpar: \"(\",\n    lparlt: \"⦓\",\n    lrarr: \"⇆\",\n    lrcorner: \"⌟\",\n    lrhar: \"⇋\",\n    lrhard: \"⥭\",\n    lrm: \"‎\",\n    lrtri: \"⊿\",\n    lsaquo: \"‹\",\n    lscr: \"𝓁\",\n    lsh: \"↰\",\n    lsim: \"≲\",\n    lsime: \"⪍\",\n    lsimg: \"⪏\",\n    lsqb: \"[\",\n    lsquo: \"‘\",\n    lsquor: \"‚\",\n    lstrok: \"ł\",\n    l: \"<\",\n    lt: \"<\",\n    ltcc: \"⪦\",\n    ltcir: \"⩹\",\n    ltdot: \"⋖\",\n    lthree: \"⋋\",\n    ltimes: \"⋉\",\n    ltlarr: \"⥶\",\n    ltquest: \"⩻\",\n    ltrPar: \"⦖\",\n    ltri: \"◃\",\n    ltrie: \"⊴\",\n    ltrif: \"◂\",\n    lurdshar: \"⥊\",\n    luruhar: \"⥦\",\n    lvertneqq: \"≨︀\",\n    lvnE: \"≨︀\",\n    mDDot: \"∺\",\n    mac: \"¯\",\n    macr: \"¯\",\n    male: \"♂\",\n    malt: \"✠\",\n    maltese: \"✠\",\n    map: \"↦\",\n    mapsto: \"↦\",\n    mapstodown: \"↧\",\n    mapstoleft: \"↤\",\n    mapstoup: \"↥\",\n    marker: \"▮\",\n    mcomma: \"⨩\",\n    mcy: \"м\",\n    mdash: \"—\",\n    measuredangle: \"∡\",\n    mfr: \"𝔪\",\n    mho: \"℧\",\n    micr: \"µ\",\n    micro: \"µ\",\n    mid: \"∣\",\n    midast: \"*\",\n    midcir: \"⫰\",\n    middo: \"·\",\n    middot: \"·\",\n    minus: \"−\",\n    minusb: \"⊟\",\n    minusd: \"∸\",\n    minusdu: \"⨪\",\n    mlcp: \"⫛\",\n    mldr: \"…\",\n    mnplus: \"∓\",\n    models: \"⊧\",\n    mopf: \"𝕞\",\n    mp: \"∓\",\n    mscr: \"𝓂\",\n    mstpos: \"∾\",\n    mu: \"μ\",\n    multimap: \"⊸\",\n    mumap: \"⊸\",\n    nGg: \"⋙̸\",\n    nGt: \"≫⃒\",\n    nGtv: \"≫̸\",\n    nLeftarrow: \"⇍\",\n    nLeftrightarrow: \"⇎\",\n    nLl: \"⋘̸\",\n    nLt: \"≪⃒\",\n    nLtv: \"≪̸\",\n    nRightarrow: \"⇏\",\n    nVDash: \"⊯\",\n    nVdash: \"⊮\",\n    nabla: \"∇\",\n    nacute: \"ń\",\n    nang: \"∠⃒\",\n    nap: \"≉\",\n    napE: \"⩰̸\",\n    napid: \"≋̸\",\n    napos: \"ŉ\",\n    napprox: \"≉\",\n    natur: \"♮\",\n    natural: \"♮\",\n    naturals: \"ℕ\",\n    nbs: \" \",\n    nbsp: \" \",\n    nbump: \"≎̸\",\n    nbumpe: \"≏̸\",\n    ncap: \"⩃\",\n    ncaron: \"ň\",\n    ncedil: \"ņ\",\n    ncong: \"≇\",\n    ncongdot: \"⩭̸\",\n    ncup: \"⩂\",\n    ncy: \"н\",\n    ndash: \"–\",\n    ne: \"≠\",\n    neArr: \"⇗\",\n    nearhk: \"⤤\",\n    nearr: \"↗\",\n    nearrow: \"↗\",\n    nedot: \"≐̸\",\n    nequiv: \"≢\",\n    nesear: \"⤨\",\n    nesim: \"≂̸\",\n    nexist: \"∄\",\n    nexists: \"∄\",\n    nfr: \"𝔫\",\n    ngE: \"≧̸\",\n    nge: \"≱\",\n    ngeq: \"≱\",\n    ngeqq: \"≧̸\",\n    ngeqslant: \"⩾̸\",\n    nges: \"⩾̸\",\n    ngsim: \"≵\",\n    ngt: \"≯\",\n    ngtr: \"≯\",\n    nhArr: \"⇎\",\n    nharr: \"↮\",\n    nhpar: \"⫲\",\n    ni: \"∋\",\n    nis: \"⋼\",\n    nisd: \"⋺\",\n    niv: \"∋\",\n    njcy: \"њ\",\n    nlArr: \"⇍\",\n    nlE: \"≦̸\",\n    nlarr: \"↚\",\n    nldr: \"‥\",\n    nle: \"≰\",\n    nleftarrow: \"↚\",\n    nleftrightarrow: \"↮\",\n    nleq: \"≰\",\n    nleqq: \"≦̸\",\n    nleqslant: \"⩽̸\",\n    nles: \"⩽̸\",\n    nless: \"≮\",\n    nlsim: \"≴\",\n    nlt: \"≮\",\n    nltri: \"⋪\",\n    nltrie: \"⋬\",\n    nmid: \"∤\",\n    nopf: \"𝕟\",\n    no: \"¬\",\n    not: \"¬\",\n    notin: \"∉\",\n    notinE: \"⋹̸\",\n    notindot: \"⋵̸\",\n    notinva: \"∉\",\n    notinvb: \"⋷\",\n    notinvc: \"⋶\",\n    notni: \"∌\",\n    notniva: \"∌\",\n    notnivb: \"⋾\",\n    notnivc: \"⋽\",\n    npar: \"∦\",\n    nparallel: \"∦\",\n    nparsl: \"⫽⃥\",\n    npart: \"∂̸\",\n    npolint: \"⨔\",\n    npr: \"⊀\",\n    nprcue: \"⋠\",\n    npre: \"⪯̸\",\n    nprec: \"⊀\",\n    npreceq: \"⪯̸\",\n    nrArr: \"⇏\",\n    nrarr: \"↛\",\n    nrarrc: \"⤳̸\",\n    nrarrw: \"↝̸\",\n    nrightarrow: \"↛\",\n    nrtri: \"⋫\",\n    nrtrie: \"⋭\",\n    nsc: \"⊁\",\n    nsccue: \"⋡\",\n    nsce: \"⪰̸\",\n    nscr: \"𝓃\",\n    nshortmid: \"∤\",\n    nshortparallel: \"∦\",\n    nsim: \"≁\",\n    nsime: \"≄\",\n    nsimeq: \"≄\",\n    nsmid: \"∤\",\n    nspar: \"∦\",\n    nsqsube: \"⋢\",\n    nsqsupe: \"⋣\",\n    nsub: \"⊄\",\n    nsubE: \"⫅̸\",\n    nsube: \"⊈\",\n    nsubset: \"⊂⃒\",\n    nsubseteq: \"⊈\",\n    nsubseteqq: \"⫅̸\",\n    nsucc: \"⊁\",\n    nsucceq: \"⪰̸\",\n    nsup: \"⊅\",\n    nsupE: \"⫆̸\",\n    nsupe: \"⊉\",\n    nsupset: \"⊃⃒\",\n    nsupseteq: \"⊉\",\n    nsupseteqq: \"⫆̸\",\n    ntgl: \"≹\",\n    ntild: \"ñ\",\n    ntilde: \"ñ\",\n    ntlg: \"≸\",\n    ntriangleleft: \"⋪\",\n    ntrianglelefteq: \"⋬\",\n    ntriangleright: \"⋫\",\n    ntrianglerighteq: \"⋭\",\n    nu: \"ν\",\n    num: \"#\",\n    numero: \"№\",\n    numsp: \" \",\n    nvDash: \"⊭\",\n    nvHarr: \"⤄\",\n    nvap: \"≍⃒\",\n    nvdash: \"⊬\",\n    nvge: \"≥⃒\",\n    nvgt: \">⃒\",\n    nvinfin: \"⧞\",\n    nvlArr: \"⤂\",\n    nvle: \"≤⃒\",\n    nvlt: \"<⃒\",\n    nvltrie: \"⊴⃒\",\n    nvrArr: \"⤃\",\n    nvrtrie: \"⊵⃒\",\n    nvsim: \"∼⃒\",\n    nwArr: \"⇖\",\n    nwarhk: \"⤣\",\n    nwarr: \"↖\",\n    nwarrow: \"↖\",\n    nwnear: \"⤧\",\n    oS: \"Ⓢ\",\n    oacut: \"ó\",\n    oacute: \"ó\",\n    oast: \"⊛\",\n    ocir: \"ô\",\n    ocirc: \"ô\",\n    ocy: \"о\",\n    odash: \"⊝\",\n    odblac: \"ő\",\n    odiv: \"⨸\",\n    odot: \"⊙\",\n    odsold: \"⦼\",\n    oelig: \"œ\",\n    ofcir: \"⦿\",\n    ofr: \"𝔬\",\n    ogon: \"˛\",\n    ograv: \"ò\",\n    ograve: \"ò\",\n    ogt: \"⧁\",\n    ohbar: \"⦵\",\n    ohm: \"Ω\",\n    oint: \"∮\",\n    olarr: \"↺\",\n    olcir: \"⦾\",\n    olcross: \"⦻\",\n    oline: \"‾\",\n    olt: \"⧀\",\n    omacr: \"ō\",\n    omega: \"ω\",\n    omicron: \"ο\",\n    omid: \"⦶\",\n    ominus: \"⊖\",\n    oopf: \"𝕠\",\n    opar: \"⦷\",\n    operp: \"⦹\",\n    oplus: \"⊕\",\n    or: \"∨\",\n    orarr: \"↻\",\n    ord: \"º\",\n    order: \"ℴ\",\n    orderof: \"ℴ\",\n    ordf: \"ª\",\n    ordm: \"º\",\n    origof: \"⊶\",\n    oror: \"⩖\",\n    orslope: \"⩗\",\n    orv: \"⩛\",\n    oscr: \"ℴ\",\n    oslas: \"ø\",\n    oslash: \"ø\",\n    osol: \"⊘\",\n    otild: \"õ\",\n    otilde: \"õ\",\n    otimes: \"⊗\",\n    otimesas: \"⨶\",\n    oum: \"ö\",\n    ouml: \"ö\",\n    ovbar: \"⌽\",\n    par: \"¶\",\n    para: \"¶\",\n    parallel: \"∥\",\n    parsim: \"⫳\",\n    parsl: \"⫽\",\n    part: \"∂\",\n    pcy: \"п\",\n    percnt: \"%\",\n    period: \".\",\n    permil: \"‰\",\n    perp: \"⊥\",\n    pertenk: \"‱\",\n    pfr: \"𝔭\",\n    phi: \"φ\",\n    phiv: \"ϕ\",\n    phmmat: \"ℳ\",\n    phone: \"☎\",\n    pi: \"π\",\n    pitchfork: \"⋔\",\n    piv: \"ϖ\",\n    planck: \"ℏ\",\n    planckh: \"ℎ\",\n    plankv: \"ℏ\",\n    plus: \"+\",\n    plusacir: \"⨣\",\n    plusb: \"⊞\",\n    pluscir: \"⨢\",\n    plusdo: \"∔\",\n    plusdu: \"⨥\",\n    pluse: \"⩲\",\n    plusm: \"±\",\n    plusmn: \"±\",\n    plussim: \"⨦\",\n    plustwo: \"⨧\",\n    pm: \"±\",\n    pointint: \"⨕\",\n    popf: \"𝕡\",\n    poun: \"£\",\n    pound: \"£\",\n    pr: \"≺\",\n    prE: \"⪳\",\n    prap: \"⪷\",\n    prcue: \"≼\",\n    pre: \"⪯\",\n    prec: \"≺\",\n    precapprox: \"⪷\",\n    preccurlyeq: \"≼\",\n    preceq: \"⪯\",\n    precnapprox: \"⪹\",\n    precneqq: \"⪵\",\n    precnsim: \"⋨\",\n    precsim: \"≾\",\n    prime: \"′\",\n    primes: \"ℙ\",\n    prnE: \"⪵\",\n    prnap: \"⪹\",\n    prnsim: \"⋨\",\n    prod: \"∏\",\n    profalar: \"⌮\",\n    profline: \"⌒\",\n    profsurf: \"⌓\",\n    prop: \"∝\",\n    propto: \"∝\",\n    prsim: \"≾\",\n    prurel: \"⊰\",\n    pscr: \"𝓅\",\n    psi: \"ψ\",\n    puncsp: \" \",\n    qfr: \"𝔮\",\n    qint: \"⨌\",\n    qopf: \"𝕢\",\n    qprime: \"⁗\",\n    qscr: \"𝓆\",\n    quaternions: \"ℍ\",\n    quatint: \"⨖\",\n    quest: \"?\",\n    questeq: \"≟\",\n    quo: '\"',\n    quot: '\"',\n    rAarr: \"⇛\",\n    rArr: \"⇒\",\n    rAtail: \"⤜\",\n    rBarr: \"⤏\",\n    rHar: \"⥤\",\n    race: \"∽̱\",\n    racute: \"ŕ\",\n    radic: \"√\",\n    raemptyv: \"⦳\",\n    rang: \"⟩\",\n    rangd: \"⦒\",\n    range: \"⦥\",\n    rangle: \"⟩\",\n    raqu: \"»\",\n    raquo: \"»\",\n    rarr: \"→\",\n    rarrap: \"⥵\",\n    rarrb: \"⇥\",\n    rarrbfs: \"⤠\",\n    rarrc: \"⤳\",\n    rarrfs: \"⤞\",\n    rarrhk: \"↪\",\n    rarrlp: \"↬\",\n    rarrpl: \"⥅\",\n    rarrsim: \"⥴\",\n    rarrtl: \"↣\",\n    rarrw: \"↝\",\n    ratail: \"⤚\",\n    ratio: \"∶\",\n    rationals: \"ℚ\",\n    rbarr: \"⤍\",\n    rbbrk: \"❳\",\n    rbrace: \"}\",\n    rbrack: \"]\",\n    rbrke: \"⦌\",\n    rbrksld: \"⦎\",\n    rbrkslu: \"⦐\",\n    rcaron: \"ř\",\n    rcedil: \"ŗ\",\n    rceil: \"⌉\",\n    rcub: \"}\",\n    rcy: \"р\",\n    rdca: \"⤷\",\n    rdldhar: \"⥩\",\n    rdquo: \"”\",\n    rdquor: \"”\",\n    rdsh: \"↳\",\n    real: \"ℜ\",\n    realine: \"ℛ\",\n    realpart: \"ℜ\",\n    reals: \"ℝ\",\n    rect: \"▭\",\n    re: \"®\",\n    reg: \"®\",\n    rfisht: \"⥽\",\n    rfloor: \"⌋\",\n    rfr: \"𝔯\",\n    rhard: \"⇁\",\n    rharu: \"⇀\",\n    rharul: \"⥬\",\n    rho: \"ρ\",\n    rhov: \"ϱ\",\n    rightarrow: \"→\",\n    rightarrowtail: \"↣\",\n    rightharpoondown: \"⇁\",\n    rightharpoonup: \"⇀\",\n    rightleftarrows: \"⇄\",\n    rightleftharpoons: \"⇌\",\n    rightrightarrows: \"⇉\",\n    rightsquigarrow: \"↝\",\n    rightthreetimes: \"⋌\",\n    ring: \"˚\",\n    risingdotseq: \"≓\",\n    rlarr: \"⇄\",\n    rlhar: \"⇌\",\n    rlm: \"‏\",\n    rmoust: \"⎱\",\n    rmoustache: \"⎱\",\n    rnmid: \"⫮\",\n    roang: \"⟭\",\n    roarr: \"⇾\",\n    robrk: \"⟧\",\n    ropar: \"⦆\",\n    ropf: \"𝕣\",\n    roplus: \"⨮\",\n    rotimes: \"⨵\",\n    rpar: \")\",\n    rpargt: \"⦔\",\n    rppolint: \"⨒\",\n    rrarr: \"⇉\",\n    rsaquo: \"›\",\n    rscr: \"𝓇\",\n    rsh: \"↱\",\n    rsqb: \"]\",\n    rsquo: \"’\",\n    rsquor: \"’\",\n    rthree: \"⋌\",\n    rtimes: \"⋊\",\n    rtri: \"▹\",\n    rtrie: \"⊵\",\n    rtrif: \"▸\",\n    rtriltri: \"⧎\",\n    ruluhar: \"⥨\",\n    rx: \"℞\",\n    sacute: \"ś\",\n    sbquo: \"‚\",\n    sc: \"≻\",\n    scE: \"⪴\",\n    scap: \"⪸\",\n    scaron: \"š\",\n    sccue: \"≽\",\n    sce: \"⪰\",\n    scedil: \"ş\",\n    scirc: \"ŝ\",\n    scnE: \"⪶\",\n    scnap: \"⪺\",\n    scnsim: \"⋩\",\n    scpolint: \"⨓\",\n    scsim: \"≿\",\n    scy: \"с\",\n    sdot: \"⋅\",\n    sdotb: \"⊡\",\n    sdote: \"⩦\",\n    seArr: \"⇘\",\n    searhk: \"⤥\",\n    searr: \"↘\",\n    searrow: \"↘\",\n    sec: \"§\",\n    sect: \"§\",\n    semi: \";\",\n    seswar: \"⤩\",\n    setminus: \"∖\",\n    setmn: \"∖\",\n    sext: \"✶\",\n    sfr: \"𝔰\",\n    sfrown: \"⌢\",\n    sharp: \"♯\",\n    shchcy: \"щ\",\n    shcy: \"ш\",\n    shortmid: \"∣\",\n    shortparallel: \"∥\",\n    sh: \"­\",\n    shy: \"­\",\n    sigma: \"σ\",\n    sigmaf: \"ς\",\n    sigmav: \"ς\",\n    sim: \"∼\",\n    simdot: \"⩪\",\n    sime: \"≃\",\n    simeq: \"≃\",\n    simg: \"⪞\",\n    simgE: \"⪠\",\n    siml: \"⪝\",\n    simlE: \"⪟\",\n    simne: \"≆\",\n    simplus: \"⨤\",\n    simrarr: \"⥲\",\n    slarr: \"←\",\n    smallsetminus: \"∖\",\n    smashp: \"⨳\",\n    smeparsl: \"⧤\",\n    smid: \"∣\",\n    smile: \"⌣\",\n    smt: \"⪪\",\n    smte: \"⪬\",\n    smtes: \"⪬︀\",\n    softcy: \"ь\",\n    sol: \"/\",\n    solb: \"⧄\",\n    solbar: \"⌿\",\n    sopf: \"𝕤\",\n    spades: \"♠\",\n    spadesuit: \"♠\",\n    spar: \"∥\",\n    sqcap: \"⊓\",\n    sqcaps: \"⊓︀\",\n    sqcup: \"⊔\",\n    sqcups: \"⊔︀\",\n    sqsub: \"⊏\",\n    sqsube: \"⊑\",\n    sqsubset: \"⊏\",\n    sqsubseteq: \"⊑\",\n    sqsup: \"⊐\",\n    sqsupe: \"⊒\",\n    sqsupset: \"⊐\",\n    sqsupseteq: \"⊒\",\n    squ: \"□\",\n    square: \"□\",\n    squarf: \"▪\",\n    squf: \"▪\",\n    srarr: \"→\",\n    sscr: \"𝓈\",\n    ssetmn: \"∖\",\n    ssmile: \"⌣\",\n    sstarf: \"⋆\",\n    star: \"☆\",\n    starf: \"★\",\n    straightepsilon: \"ϵ\",\n    straightphi: \"ϕ\",\n    strns: \"¯\",\n    sub: \"⊂\",\n    subE: \"⫅\",\n    subdot: \"⪽\",\n    sube: \"⊆\",\n    subedot: \"⫃\",\n    submult: \"⫁\",\n    subnE: \"⫋\",\n    subne: \"⊊\",\n    subplus: \"⪿\",\n    subrarr: \"⥹\",\n    subset: \"⊂\",\n    subseteq: \"⊆\",\n    subseteqq: \"⫅\",\n    subsetneq: \"⊊\",\n    subsetneqq: \"⫋\",\n    subsim: \"⫇\",\n    subsub: \"⫕\",\n    subsup: \"⫓\",\n    succ: \"≻\",\n    succapprox: \"⪸\",\n    succcurlyeq: \"≽\",\n    succeq: \"⪰\",\n    succnapprox: \"⪺\",\n    succneqq: \"⪶\",\n    succnsim: \"⋩\",\n    succsim: \"≿\",\n    sum: \"∑\",\n    sung: \"♪\",\n    sup: \"⊃\",\n    sup1: \"¹\",\n    sup2: \"²\",\n    sup3: \"³\",\n    supE: \"⫆\",\n    supdot: \"⪾\",\n    supdsub: \"⫘\",\n    supe: \"⊇\",\n    supedot: \"⫄\",\n    suphsol: \"⟉\",\n    suphsub: \"⫗\",\n    suplarr: \"⥻\",\n    supmult: \"⫂\",\n    supnE: \"⫌\",\n    supne: \"⊋\",\n    supplus: \"⫀\",\n    supset: \"⊃\",\n    supseteq: \"⊇\",\n    supseteqq: \"⫆\",\n    supsetneq: \"⊋\",\n    supsetneqq: \"⫌\",\n    supsim: \"⫈\",\n    supsub: \"⫔\",\n    supsup: \"⫖\",\n    swArr: \"⇙\",\n    swarhk: \"⤦\",\n    swarr: \"↙\",\n    swarrow: \"↙\",\n    swnwar: \"⤪\",\n    szli: \"ß\",\n    szlig: \"ß\",\n    target: \"⌖\",\n    tau: \"τ\",\n    tbrk: \"⎴\",\n    tcaron: \"ť\",\n    tcedil: \"ţ\",\n    tcy: \"т\",\n    tdot: \"⃛\",\n    telrec: \"⌕\",\n    tfr: \"𝔱\",\n    there4: \"∴\",\n    therefore: \"∴\",\n    theta: \"θ\",\n    thetasym: \"ϑ\",\n    thetav: \"ϑ\",\n    thickapprox: \"≈\",\n    thicksim: \"∼\",\n    thinsp: \" \",\n    thkap: \"≈\",\n    thksim: \"∼\",\n    thor: \"þ\",\n    thorn: \"þ\",\n    tilde: \"˜\",\n    time: \"×\",\n    times: \"×\",\n    timesb: \"⊠\",\n    timesbar: \"⨱\",\n    timesd: \"⨰\",\n    tint: \"∭\",\n    toea: \"⤨\",\n    top: \"⊤\",\n    topbot: \"⌶\",\n    topcir: \"⫱\",\n    topf: \"𝕥\",\n    topfork: \"⫚\",\n    tosa: \"⤩\",\n    tprime: \"‴\",\n    trade: \"™\",\n    triangle: \"▵\",\n    triangledown: \"▿\",\n    triangleleft: \"◃\",\n    trianglelefteq: \"⊴\",\n    triangleq: \"≜\",\n    triangleright: \"▹\",\n    trianglerighteq: \"⊵\",\n    tridot: \"◬\",\n    trie: \"≜\",\n    triminus: \"⨺\",\n    triplus: \"⨹\",\n    trisb: \"⧍\",\n    tritime: \"⨻\",\n    trpezium: \"⏢\",\n    tscr: \"𝓉\",\n    tscy: \"ц\",\n    tshcy: \"ћ\",\n    tstrok: \"ŧ\",\n    twixt: \"≬\",\n    twoheadleftarrow: \"↞\",\n    twoheadrightarrow: \"↠\",\n    uArr: \"⇑\",\n    uHar: \"⥣\",\n    uacut: \"ú\",\n    uacute: \"ú\",\n    uarr: \"↑\",\n    ubrcy: \"ў\",\n    ubreve: \"ŭ\",\n    ucir: \"û\",\n    ucirc: \"û\",\n    ucy: \"у\",\n    udarr: \"⇅\",\n    udblac: \"ű\",\n    udhar: \"⥮\",\n    ufisht: \"⥾\",\n    ufr: \"𝔲\",\n    ugrav: \"ù\",\n    ugrave: \"ù\",\n    uharl: \"↿\",\n    uharr: \"↾\",\n    uhblk: \"▀\",\n    ulcorn: \"⌜\",\n    ulcorner: \"⌜\",\n    ulcrop: \"⌏\",\n    ultri: \"◸\",\n    umacr: \"ū\",\n    um: \"¨\",\n    uml: \"¨\",\n    uogon: \"ų\",\n    uopf: \"𝕦\",\n    uparrow: \"↑\",\n    updownarrow: \"↕\",\n    upharpoonleft: \"↿\",\n    upharpoonright: \"↾\",\n    uplus: \"⊎\",\n    upsi: \"υ\",\n    upsih: \"ϒ\",\n    upsilon: \"υ\",\n    upuparrows: \"⇈\",\n    urcorn: \"⌝\",\n    urcorner: \"⌝\",\n    urcrop: \"⌎\",\n    uring: \"ů\",\n    urtri: \"◹\",\n    uscr: \"𝓊\",\n    utdot: \"⋰\",\n    utilde: \"ũ\",\n    utri: \"▵\",\n    utrif: \"▴\",\n    uuarr: \"⇈\",\n    uum: \"ü\",\n    uuml: \"ü\",\n    uwangle: \"⦧\",\n    vArr: \"⇕\",\n    vBar: \"⫨\",\n    vBarv: \"⫩\",\n    vDash: \"⊨\",\n    vangrt: \"⦜\",\n    varepsilon: \"ϵ\",\n    varkappa: \"ϰ\",\n    varnothing: \"∅\",\n    varphi: \"ϕ\",\n    varpi: \"ϖ\",\n    varpropto: \"∝\",\n    varr: \"↕\",\n    varrho: \"ϱ\",\n    varsigma: \"ς\",\n    varsubsetneq: \"⊊︀\",\n    varsubsetneqq: \"⫋︀\",\n    varsupsetneq: \"⊋︀\",\n    varsupsetneqq: \"⫌︀\",\n    vartheta: \"ϑ\",\n    vartriangleleft: \"⊲\",\n    vartriangleright: \"⊳\",\n    vcy: \"в\",\n    vdash: \"⊢\",\n    vee: \"∨\",\n    veebar: \"⊻\",\n    veeeq: \"≚\",\n    vellip: \"⋮\",\n    verbar: \"|\",\n    vert: \"|\",\n    vfr: \"𝔳\",\n    vltri: \"⊲\",\n    vnsub: \"⊂⃒\",\n    vnsup: \"⊃⃒\",\n    vopf: \"𝕧\",\n    vprop: \"∝\",\n    vrtri: \"⊳\",\n    vscr: \"𝓋\",\n    vsubnE: \"⫋︀\",\n    vsubne: \"⊊︀\",\n    vsupnE: \"⫌︀\",\n    vsupne: \"⊋︀\",\n    vzigzag: \"⦚\",\n    wcirc: \"ŵ\",\n    wedbar: \"⩟\",\n    wedge: \"∧\",\n    wedgeq: \"≙\",\n    weierp: \"℘\",\n    wfr: \"𝔴\",\n    wopf: \"𝕨\",\n    wp: \"℘\",\n    wr: \"≀\",\n    wreath: \"≀\",\n    wscr: \"𝓌\",\n    xcap: \"⋂\",\n    xcirc: \"◯\",\n    xcup: \"⋃\",\n    xdtri: \"▽\",\n    xfr: \"𝔵\",\n    xhArr: \"⟺\",\n    xharr: \"⟷\",\n    xi: \"ξ\",\n    xlArr: \"⟸\",\n    xlarr: \"⟵\",\n    xmap: \"⟼\",\n    xnis: \"⋻\",\n    xodot: \"⨀\",\n    xopf: \"𝕩\",\n    xoplus: \"⨁\",\n    xotime: \"⨂\",\n    xrArr: \"⟹\",\n    xrarr: \"⟶\",\n    xscr: \"𝓍\",\n    xsqcup: \"⨆\",\n    xuplus: \"⨄\",\n    xutri: \"△\",\n    xvee: \"⋁\",\n    xwedge: \"⋀\",\n    yacut: \"ý\",\n    yacute: \"ý\",\n    yacy: \"я\",\n    ycirc: \"ŷ\",\n    ycy: \"ы\",\n    ye: \"¥\",\n    yen: \"¥\",\n    yfr: \"𝔶\",\n    yicy: \"ї\",\n    yopf: \"𝕪\",\n    yscr: \"𝓎\",\n    yucy: \"ю\",\n    yum: \"ÿ\",\n    yuml: \"ÿ\",\n    zacute: \"ź\",\n    zcaron: \"ž\",\n    zcy: \"з\",\n    zdot: \"ż\",\n    zeetrf: \"ℨ\",\n    zeta: \"ζ\",\n    zfr: \"𝔷\",\n    zhcy: \"ж\",\n    zigrarr: \"⇝\",\n    zopf: \"𝕫\",\n    zscr: \"𝓏\",\n    zwj: \"‍\",\n    zwnj: \"‌\"\n  },\n      _ = Object.freeze({\n    __proto__: null,\n    AEli: \"Æ\",\n    AElig: \"Æ\",\n    AM: \"&\",\n    AMP: \"&\",\n    Aacut: \"Á\",\n    Aacute: \"Á\",\n    Abreve: \"Ă\",\n    Acir: \"Â\",\n    Acirc: \"Â\",\n    Acy: \"А\",\n    Afr: \"𝔄\",\n    Agrav: \"À\",\n    Agrave: \"À\",\n    Alpha: \"Α\",\n    Amacr: \"Ā\",\n    And: \"⩓\",\n    Aogon: \"Ą\",\n    Aopf: \"𝔸\",\n    ApplyFunction: \"⁡\",\n    Arin: \"Å\",\n    Aring: \"Å\",\n    Ascr: \"𝒜\",\n    Assign: \"≔\",\n    Atild: \"Ã\",\n    Atilde: \"Ã\",\n    Aum: \"Ä\",\n    Auml: \"Ä\",\n    Backslash: \"∖\",\n    Barv: \"⫧\",\n    Barwed: \"⌆\",\n    Bcy: \"Б\",\n    Because: \"∵\",\n    Bernoullis: \"ℬ\",\n    Beta: \"Β\",\n    Bfr: \"𝔅\",\n    Bopf: \"𝔹\",\n    Breve: \"˘\",\n    Bscr: \"ℬ\",\n    Bumpeq: \"≎\",\n    CHcy: \"Ч\",\n    COP: \"©\",\n    COPY: \"©\",\n    Cacute: \"Ć\",\n    Cap: \"⋒\",\n    CapitalDifferentialD: \"ⅅ\",\n    Cayleys: \"ℭ\",\n    Ccaron: \"Č\",\n    Ccedi: \"Ç\",\n    Ccedil: \"Ç\",\n    Ccirc: \"Ĉ\",\n    Cconint: \"∰\",\n    Cdot: \"Ċ\",\n    Cedilla: \"¸\",\n    CenterDot: \"·\",\n    Cfr: \"ℭ\",\n    Chi: \"Χ\",\n    CircleDot: \"⊙\",\n    CircleMinus: \"⊖\",\n    CirclePlus: \"⊕\",\n    CircleTimes: \"⊗\",\n    ClockwiseContourIntegral: \"∲\",\n    CloseCurlyDoubleQuote: \"”\",\n    CloseCurlyQuote: \"’\",\n    Colon: \"∷\",\n    Colone: \"⩴\",\n    Congruent: \"≡\",\n    Conint: \"∯\",\n    ContourIntegral: \"∮\",\n    Copf: \"ℂ\",\n    Coproduct: \"∐\",\n    CounterClockwiseContourIntegral: \"∳\",\n    Cross: \"⨯\",\n    Cscr: \"𝒞\",\n    Cup: \"⋓\",\n    CupCap: \"≍\",\n    DD: \"ⅅ\",\n    DDotrahd: \"⤑\",\n    DJcy: \"Ђ\",\n    DScy: \"Ѕ\",\n    DZcy: \"Џ\",\n    Dagger: \"‡\",\n    Darr: \"↡\",\n    Dashv: \"⫤\",\n    Dcaron: \"Ď\",\n    Dcy: \"Д\",\n    Del: \"∇\",\n    Delta: \"Δ\",\n    Dfr: \"𝔇\",\n    DiacriticalAcute: \"´\",\n    DiacriticalDot: \"˙\",\n    DiacriticalDoubleAcute: \"˝\",\n    DiacriticalGrave: \"`\",\n    DiacriticalTilde: \"˜\",\n    Diamond: \"⋄\",\n    DifferentialD: \"ⅆ\",\n    Dopf: \"𝔻\",\n    Dot: \"¨\",\n    DotDot: \"⃜\",\n    DotEqual: \"≐\",\n    DoubleContourIntegral: \"∯\",\n    DoubleDot: \"¨\",\n    DoubleDownArrow: \"⇓\",\n    DoubleLeftArrow: \"⇐\",\n    DoubleLeftRightArrow: \"⇔\",\n    DoubleLeftTee: \"⫤\",\n    DoubleLongLeftArrow: \"⟸\",\n    DoubleLongLeftRightArrow: \"⟺\",\n    DoubleLongRightArrow: \"⟹\",\n    DoubleRightArrow: \"⇒\",\n    DoubleRightTee: \"⊨\",\n    DoubleUpArrow: \"⇑\",\n    DoubleUpDownArrow: \"⇕\",\n    DoubleVerticalBar: \"∥\",\n    DownArrow: \"↓\",\n    DownArrowBar: \"⤓\",\n    DownArrowUpArrow: \"⇵\",\n    DownBreve: \"̑\",\n    DownLeftRightVector: \"⥐\",\n    DownLeftTeeVector: \"⥞\",\n    DownLeftVector: \"↽\",\n    DownLeftVectorBar: \"⥖\",\n    DownRightTeeVector: \"⥟\",\n    DownRightVector: \"⇁\",\n    DownRightVectorBar: \"⥗\",\n    DownTee: \"⊤\",\n    DownTeeArrow: \"↧\",\n    Downarrow: \"⇓\",\n    Dscr: \"𝒟\",\n    Dstrok: \"Đ\",\n    ENG: \"Ŋ\",\n    ET: \"Ð\",\n    ETH: \"Ð\",\n    Eacut: \"É\",\n    Eacute: \"É\",\n    Ecaron: \"Ě\",\n    Ecir: \"Ê\",\n    Ecirc: \"Ê\",\n    Ecy: \"Э\",\n    Edot: \"Ė\",\n    Efr: \"𝔈\",\n    Egrav: \"È\",\n    Egrave: \"È\",\n    Element: \"∈\",\n    Emacr: \"Ē\",\n    EmptySmallSquare: \"◻\",\n    EmptyVerySmallSquare: \"▫\",\n    Eogon: \"Ę\",\n    Eopf: \"𝔼\",\n    Epsilon: \"Ε\",\n    Equal: \"⩵\",\n    EqualTilde: \"≂\",\n    Equilibrium: \"⇌\",\n    Escr: \"ℰ\",\n    Esim: \"⩳\",\n    Eta: \"Η\",\n    Eum: \"Ë\",\n    Euml: \"Ë\",\n    Exists: \"∃\",\n    ExponentialE: \"ⅇ\",\n    Fcy: \"Ф\",\n    Ffr: \"𝔉\",\n    FilledSmallSquare: \"◼\",\n    FilledVerySmallSquare: \"▪\",\n    Fopf: \"𝔽\",\n    ForAll: \"∀\",\n    Fouriertrf: \"ℱ\",\n    Fscr: \"ℱ\",\n    GJcy: \"Ѓ\",\n    G: \">\",\n    GT: \">\",\n    Gamma: \"Γ\",\n    Gammad: \"Ϝ\",\n    Gbreve: \"Ğ\",\n    Gcedil: \"Ģ\",\n    Gcirc: \"Ĝ\",\n    Gcy: \"Г\",\n    Gdot: \"Ġ\",\n    Gfr: \"𝔊\",\n    Gg: \"⋙\",\n    Gopf: \"𝔾\",\n    GreaterEqual: \"≥\",\n    GreaterEqualLess: \"⋛\",\n    GreaterFullEqual: \"≧\",\n    GreaterGreater: \"⪢\",\n    GreaterLess: \"≷\",\n    GreaterSlantEqual: \"⩾\",\n    GreaterTilde: \"≳\",\n    Gscr: \"𝒢\",\n    Gt: \"≫\",\n    HARDcy: \"Ъ\",\n    Hacek: \"ˇ\",\n    Hat: \"^\",\n    Hcirc: \"Ĥ\",\n    Hfr: \"ℌ\",\n    HilbertSpace: \"ℋ\",\n    Hopf: \"ℍ\",\n    HorizontalLine: \"─\",\n    Hscr: \"ℋ\",\n    Hstrok: \"Ħ\",\n    HumpDownHump: \"≎\",\n    HumpEqual: \"≏\",\n    IEcy: \"Е\",\n    IJlig: \"Ĳ\",\n    IOcy: \"Ё\",\n    Iacut: \"Í\",\n    Iacute: \"Í\",\n    Icir: \"Î\",\n    Icirc: \"Î\",\n    Icy: \"И\",\n    Idot: \"İ\",\n    Ifr: \"ℑ\",\n    Igrav: \"Ì\",\n    Igrave: \"Ì\",\n    Im: \"ℑ\",\n    Imacr: \"Ī\",\n    ImaginaryI: \"ⅈ\",\n    Implies: \"⇒\",\n    Int: \"∬\",\n    Integral: \"∫\",\n    Intersection: \"⋂\",\n    InvisibleComma: \"⁣\",\n    InvisibleTimes: \"⁢\",\n    Iogon: \"Į\",\n    Iopf: \"𝕀\",\n    Iota: \"Ι\",\n    Iscr: \"ℐ\",\n    Itilde: \"Ĩ\",\n    Iukcy: \"І\",\n    Ium: \"Ï\",\n    Iuml: \"Ï\",\n    Jcirc: \"Ĵ\",\n    Jcy: \"Й\",\n    Jfr: \"𝔍\",\n    Jopf: \"𝕁\",\n    Jscr: \"𝒥\",\n    Jsercy: \"Ј\",\n    Jukcy: \"Є\",\n    KHcy: \"Х\",\n    KJcy: \"Ќ\",\n    Kappa: \"Κ\",\n    Kcedil: \"Ķ\",\n    Kcy: \"К\",\n    Kfr: \"𝔎\",\n    Kopf: \"𝕂\",\n    Kscr: \"𝒦\",\n    LJcy: \"Љ\",\n    L: \"<\",\n    LT: \"<\",\n    Lacute: \"Ĺ\",\n    Lambda: \"Λ\",\n    Lang: \"⟪\",\n    Laplacetrf: \"ℒ\",\n    Larr: \"↞\",\n    Lcaron: \"Ľ\",\n    Lcedil: \"Ļ\",\n    Lcy: \"Л\",\n    LeftAngleBracket: \"⟨\",\n    LeftArrow: \"←\",\n    LeftArrowBar: \"⇤\",\n    LeftArrowRightArrow: \"⇆\",\n    LeftCeiling: \"⌈\",\n    LeftDoubleBracket: \"⟦\",\n    LeftDownTeeVector: \"⥡\",\n    LeftDownVector: \"⇃\",\n    LeftDownVectorBar: \"⥙\",\n    LeftFloor: \"⌊\",\n    LeftRightArrow: \"↔\",\n    LeftRightVector: \"⥎\",\n    LeftTee: \"⊣\",\n    LeftTeeArrow: \"↤\",\n    LeftTeeVector: \"⥚\",\n    LeftTriangle: \"⊲\",\n    LeftTriangleBar: \"⧏\",\n    LeftTriangleEqual: \"⊴\",\n    LeftUpDownVector: \"⥑\",\n    LeftUpTeeVector: \"⥠\",\n    LeftUpVector: \"↿\",\n    LeftUpVectorBar: \"⥘\",\n    LeftVector: \"↼\",\n    LeftVectorBar: \"⥒\",\n    Leftarrow: \"⇐\",\n    Leftrightarrow: \"⇔\",\n    LessEqualGreater: \"⋚\",\n    LessFullEqual: \"≦\",\n    LessGreater: \"≶\",\n    LessLess: \"⪡\",\n    LessSlantEqual: \"⩽\",\n    LessTilde: \"≲\",\n    Lfr: \"𝔏\",\n    Ll: \"⋘\",\n    Lleftarrow: \"⇚\",\n    Lmidot: \"Ŀ\",\n    LongLeftArrow: \"⟵\",\n    LongLeftRightArrow: \"⟷\",\n    LongRightArrow: \"⟶\",\n    Longleftarrow: \"⟸\",\n    Longleftrightarrow: \"⟺\",\n    Longrightarrow: \"⟹\",\n    Lopf: \"𝕃\",\n    LowerLeftArrow: \"↙\",\n    LowerRightArrow: \"↘\",\n    Lscr: \"ℒ\",\n    Lsh: \"↰\",\n    Lstrok: \"Ł\",\n    Lt: \"≪\",\n    Mcy: \"М\",\n    MediumSpace: \" \",\n    Mellintrf: \"ℳ\",\n    Mfr: \"𝔐\",\n    MinusPlus: \"∓\",\n    Mopf: \"𝕄\",\n    Mscr: \"ℳ\",\n    Mu: \"Μ\",\n    NJcy: \"Њ\",\n    Nacute: \"Ń\",\n    Ncaron: \"Ň\",\n    Ncedil: \"Ņ\",\n    Ncy: \"Н\",\n    NegativeMediumSpace: \"​\",\n    NegativeThickSpace: \"​\",\n    NegativeThinSpace: \"​\",\n    NegativeVeryThinSpace: \"​\",\n    NestedGreaterGreater: \"≫\",\n    NestedLessLess: \"≪\",\n    NewLine: \"\\n\",\n    Nfr: \"𝔑\",\n    NoBreak: \"⁠\",\n    NonBreakingSpace: \" \",\n    Nopf: \"ℕ\",\n    Not: \"⫬\",\n    NotCongruent: \"≢\",\n    NotCupCap: \"≭\",\n    NotDoubleVerticalBar: \"∦\",\n    NotElement: \"∉\",\n    NotEqual: \"≠\",\n    NotEqualTilde: \"≂̸\",\n    NotExists: \"∄\",\n    NotGreater: \"≯\",\n    NotGreaterEqual: \"≱\",\n    NotGreaterFullEqual: \"≧̸\",\n    NotGreaterGreater: \"≫̸\",\n    NotGreaterLess: \"≹\",\n    NotGreaterSlantEqual: \"⩾̸\",\n    NotGreaterTilde: \"≵\",\n    NotHumpDownHump: \"≎̸\",\n    NotHumpEqual: \"≏̸\",\n    NotLeftTriangle: \"⋪\",\n    NotLeftTriangleBar: \"⧏̸\",\n    NotLeftTriangleEqual: \"⋬\",\n    NotLess: \"≮\",\n    NotLessEqual: \"≰\",\n    NotLessGreater: \"≸\",\n    NotLessLess: \"≪̸\",\n    NotLessSlantEqual: \"⩽̸\",\n    NotLessTilde: \"≴\",\n    NotNestedGreaterGreater: \"⪢̸\",\n    NotNestedLessLess: \"⪡̸\",\n    NotPrecedes: \"⊀\",\n    NotPrecedesEqual: \"⪯̸\",\n    NotPrecedesSlantEqual: \"⋠\",\n    NotReverseElement: \"∌\",\n    NotRightTriangle: \"⋫\",\n    NotRightTriangleBar: \"⧐̸\",\n    NotRightTriangleEqual: \"⋭\",\n    NotSquareSubset: \"⊏̸\",\n    NotSquareSubsetEqual: \"⋢\",\n    NotSquareSuperset: \"⊐̸\",\n    NotSquareSupersetEqual: \"⋣\",\n    NotSubset: \"⊂⃒\",\n    NotSubsetEqual: \"⊈\",\n    NotSucceeds: \"⊁\",\n    NotSucceedsEqual: \"⪰̸\",\n    NotSucceedsSlantEqual: \"⋡\",\n    NotSucceedsTilde: \"≿̸\",\n    NotSuperset: \"⊃⃒\",\n    NotSupersetEqual: \"⊉\",\n    NotTilde: \"≁\",\n    NotTildeEqual: \"≄\",\n    NotTildeFullEqual: \"≇\",\n    NotTildeTilde: \"≉\",\n    NotVerticalBar: \"∤\",\n    Nscr: \"𝒩\",\n    Ntild: \"Ñ\",\n    Ntilde: \"Ñ\",\n    Nu: \"Ν\",\n    OElig: \"Œ\",\n    Oacut: \"Ó\",\n    Oacute: \"Ó\",\n    Ocir: \"Ô\",\n    Ocirc: \"Ô\",\n    Ocy: \"О\",\n    Odblac: \"Ő\",\n    Ofr: \"𝔒\",\n    Ograv: \"Ò\",\n    Ograve: \"Ò\",\n    Omacr: \"Ō\",\n    Omega: \"Ω\",\n    Omicron: \"Ο\",\n    Oopf: \"𝕆\",\n    OpenCurlyDoubleQuote: \"“\",\n    OpenCurlyQuote: \"‘\",\n    Or: \"⩔\",\n    Oscr: \"𝒪\",\n    Oslas: \"Ø\",\n    Oslash: \"Ø\",\n    Otild: \"Õ\",\n    Otilde: \"Õ\",\n    Otimes: \"⨷\",\n    Oum: \"Ö\",\n    Ouml: \"Ö\",\n    OverBar: \"‾\",\n    OverBrace: \"⏞\",\n    OverBracket: \"⎴\",\n    OverParenthesis: \"⏜\",\n    PartialD: \"∂\",\n    Pcy: \"П\",\n    Pfr: \"𝔓\",\n    Phi: \"Φ\",\n    Pi: \"Π\",\n    PlusMinus: \"±\",\n    Poincareplane: \"ℌ\",\n    Popf: \"ℙ\",\n    Pr: \"⪻\",\n    Precedes: \"≺\",\n    PrecedesEqual: \"⪯\",\n    PrecedesSlantEqual: \"≼\",\n    PrecedesTilde: \"≾\",\n    Prime: \"″\",\n    Product: \"∏\",\n    Proportion: \"∷\",\n    Proportional: \"∝\",\n    Pscr: \"𝒫\",\n    Psi: \"Ψ\",\n    QUO: '\"',\n    QUOT: '\"',\n    Qfr: \"𝔔\",\n    Qopf: \"ℚ\",\n    Qscr: \"𝒬\",\n    RBarr: \"⤐\",\n    RE: \"®\",\n    REG: \"®\",\n    Racute: \"Ŕ\",\n    Rang: \"⟫\",\n    Rarr: \"↠\",\n    Rarrtl: \"⤖\",\n    Rcaron: \"Ř\",\n    Rcedil: \"Ŗ\",\n    Rcy: \"Р\",\n    Re: \"ℜ\",\n    ReverseElement: \"∋\",\n    ReverseEquilibrium: \"⇋\",\n    ReverseUpEquilibrium: \"⥯\",\n    Rfr: \"ℜ\",\n    Rho: \"Ρ\",\n    RightAngleBracket: \"⟩\",\n    RightArrow: \"→\",\n    RightArrowBar: \"⇥\",\n    RightArrowLeftArrow: \"⇄\",\n    RightCeiling: \"⌉\",\n    RightDoubleBracket: \"⟧\",\n    RightDownTeeVector: \"⥝\",\n    RightDownVector: \"⇂\",\n    RightDownVectorBar: \"⥕\",\n    RightFloor: \"⌋\",\n    RightTee: \"⊢\",\n    RightTeeArrow: \"↦\",\n    RightTeeVector: \"⥛\",\n    RightTriangle: \"⊳\",\n    RightTriangleBar: \"⧐\",\n    RightTriangleEqual: \"⊵\",\n    RightUpDownVector: \"⥏\",\n    RightUpTeeVector: \"⥜\",\n    RightUpVector: \"↾\",\n    RightUpVectorBar: \"⥔\",\n    RightVector: \"⇀\",\n    RightVectorBar: \"⥓\",\n    Rightarrow: \"⇒\",\n    Ropf: \"ℝ\",\n    RoundImplies: \"⥰\",\n    Rrightarrow: \"⇛\",\n    Rscr: \"ℛ\",\n    Rsh: \"↱\",\n    RuleDelayed: \"⧴\",\n    SHCHcy: \"Щ\",\n    SHcy: \"Ш\",\n    SOFTcy: \"Ь\",\n    Sacute: \"Ś\",\n    Sc: \"⪼\",\n    Scaron: \"Š\",\n    Scedil: \"Ş\",\n    Scirc: \"Ŝ\",\n    Scy: \"С\",\n    Sfr: \"𝔖\",\n    ShortDownArrow: \"↓\",\n    ShortLeftArrow: \"←\",\n    ShortRightArrow: \"→\",\n    ShortUpArrow: \"↑\",\n    Sigma: \"Σ\",\n    SmallCircle: \"∘\",\n    Sopf: \"𝕊\",\n    Sqrt: \"√\",\n    Square: \"□\",\n    SquareIntersection: \"⊓\",\n    SquareSubset: \"⊏\",\n    SquareSubsetEqual: \"⊑\",\n    SquareSuperset: \"⊐\",\n    SquareSupersetEqual: \"⊒\",\n    SquareUnion: \"⊔\",\n    Sscr: \"𝒮\",\n    Star: \"⋆\",\n    Sub: \"⋐\",\n    Subset: \"⋐\",\n    SubsetEqual: \"⊆\",\n    Succeeds: \"≻\",\n    SucceedsEqual: \"⪰\",\n    SucceedsSlantEqual: \"≽\",\n    SucceedsTilde: \"≿\",\n    SuchThat: \"∋\",\n    Sum: \"∑\",\n    Sup: \"⋑\",\n    Superset: \"⊃\",\n    SupersetEqual: \"⊇\",\n    Supset: \"⋑\",\n    THOR: \"Þ\",\n    THORN: \"Þ\",\n    TRADE: \"™\",\n    TSHcy: \"Ћ\",\n    TScy: \"Ц\",\n    Tab: \"\\t\",\n    Tau: \"Τ\",\n    Tcaron: \"Ť\",\n    Tcedil: \"Ţ\",\n    Tcy: \"Т\",\n    Tfr: \"𝔗\",\n    Therefore: \"∴\",\n    Theta: \"Θ\",\n    ThickSpace: \"  \",\n    ThinSpace: \" \",\n    Tilde: \"∼\",\n    TildeEqual: \"≃\",\n    TildeFullEqual: \"≅\",\n    TildeTilde: \"≈\",\n    Topf: \"𝕋\",\n    TripleDot: \"⃛\",\n    Tscr: \"𝒯\",\n    Tstrok: \"Ŧ\",\n    Uacut: \"Ú\",\n    Uacute: \"Ú\",\n    Uarr: \"↟\",\n    Uarrocir: \"⥉\",\n    Ubrcy: \"Ў\",\n    Ubreve: \"Ŭ\",\n    Ucir: \"Û\",\n    Ucirc: \"Û\",\n    Ucy: \"У\",\n    Udblac: \"Ű\",\n    Ufr: \"𝔘\",\n    Ugrav: \"Ù\",\n    Ugrave: \"Ù\",\n    Umacr: \"Ū\",\n    UnderBar: \"_\",\n    UnderBrace: \"⏟\",\n    UnderBracket: \"⎵\",\n    UnderParenthesis: \"⏝\",\n    Union: \"⋃\",\n    UnionPlus: \"⊎\",\n    Uogon: \"Ų\",\n    Uopf: \"𝕌\",\n    UpArrow: \"↑\",\n    UpArrowBar: \"⤒\",\n    UpArrowDownArrow: \"⇅\",\n    UpDownArrow: \"↕\",\n    UpEquilibrium: \"⥮\",\n    UpTee: \"⊥\",\n    UpTeeArrow: \"↥\",\n    Uparrow: \"⇑\",\n    Updownarrow: \"⇕\",\n    UpperLeftArrow: \"↖\",\n    UpperRightArrow: \"↗\",\n    Upsi: \"ϒ\",\n    Upsilon: \"Υ\",\n    Uring: \"Ů\",\n    Uscr: \"𝒰\",\n    Utilde: \"Ũ\",\n    Uum: \"Ü\",\n    Uuml: \"Ü\",\n    VDash: \"⊫\",\n    Vbar: \"⫫\",\n    Vcy: \"В\",\n    Vdash: \"⊩\",\n    Vdashl: \"⫦\",\n    Vee: \"⋁\",\n    Verbar: \"‖\",\n    Vert: \"‖\",\n    VerticalBar: \"∣\",\n    VerticalLine: \"|\",\n    VerticalSeparator: \"❘\",\n    VerticalTilde: \"≀\",\n    VeryThinSpace: \" \",\n    Vfr: \"𝔙\",\n    Vopf: \"𝕍\",\n    Vscr: \"𝒱\",\n    Vvdash: \"⊪\",\n    Wcirc: \"Ŵ\",\n    Wedge: \"⋀\",\n    Wfr: \"𝔚\",\n    Wopf: \"𝕎\",\n    Wscr: \"𝒲\",\n    Xfr: \"𝔛\",\n    Xi: \"Ξ\",\n    Xopf: \"𝕏\",\n    Xscr: \"𝒳\",\n    YAcy: \"Я\",\n    YIcy: \"Ї\",\n    YUcy: \"Ю\",\n    Yacut: \"Ý\",\n    Yacute: \"Ý\",\n    Ycirc: \"Ŷ\",\n    Ycy: \"Ы\",\n    Yfr: \"𝔜\",\n    Yopf: \"𝕐\",\n    Yscr: \"𝒴\",\n    Yuml: \"Ÿ\",\n    ZHcy: \"Ж\",\n    Zacute: \"Ź\",\n    Zcaron: \"Ž\",\n    Zcy: \"З\",\n    Zdot: \"Ż\",\n    ZeroWidthSpace: \"​\",\n    Zeta: \"Ζ\",\n    Zfr: \"ℨ\",\n    Zopf: \"ℤ\",\n    Zscr: \"𝒵\",\n    aacut: \"á\",\n    aacute: \"á\",\n    abreve: \"ă\",\n    ac: \"∾\",\n    acE: \"∾̳\",\n    acd: \"∿\",\n    acir: \"â\",\n    acirc: \"â\",\n    acut: \"´\",\n    acute: \"´\",\n    acy: \"а\",\n    aeli: \"æ\",\n    aelig: \"æ\",\n    af: \"⁡\",\n    afr: \"𝔞\",\n    agrav: \"à\",\n    agrave: \"à\",\n    alefsym: \"ℵ\",\n    aleph: \"ℵ\",\n    alpha: \"α\",\n    amacr: \"ā\",\n    amalg: \"⨿\",\n    am: \"&\",\n    amp: \"&\",\n    and: \"∧\",\n    andand: \"⩕\",\n    andd: \"⩜\",\n    andslope: \"⩘\",\n    andv: \"⩚\",\n    ang: \"∠\",\n    ange: \"⦤\",\n    angle: \"∠\",\n    angmsd: \"∡\",\n    angmsdaa: \"⦨\",\n    angmsdab: \"⦩\",\n    angmsdac: \"⦪\",\n    angmsdad: \"⦫\",\n    angmsdae: \"⦬\",\n    angmsdaf: \"⦭\",\n    angmsdag: \"⦮\",\n    angmsdah: \"⦯\",\n    angrt: \"∟\",\n    angrtvb: \"⊾\",\n    angrtvbd: \"⦝\",\n    angsph: \"∢\",\n    angst: \"Å\",\n    angzarr: \"⍼\",\n    aogon: \"ą\",\n    aopf: \"𝕒\",\n    ap: \"≈\",\n    apE: \"⩰\",\n    apacir: \"⩯\",\n    ape: \"≊\",\n    apid: \"≋\",\n    apos: \"'\",\n    approx: \"≈\",\n    approxeq: \"≊\",\n    arin: \"å\",\n    aring: \"å\",\n    ascr: \"𝒶\",\n    ast: \"*\",\n    asymp: \"≈\",\n    asympeq: \"≍\",\n    atild: \"ã\",\n    atilde: \"ã\",\n    aum: \"ä\",\n    auml: \"ä\",\n    awconint: \"∳\",\n    awint: \"⨑\",\n    bNot: \"⫭\",\n    backcong: \"≌\",\n    backepsilon: \"϶\",\n    backprime: \"‵\",\n    backsim: \"∽\",\n    backsimeq: \"⋍\",\n    barvee: \"⊽\",\n    barwed: \"⌅\",\n    barwedge: \"⌅\",\n    bbrk: \"⎵\",\n    bbrktbrk: \"⎶\",\n    bcong: \"≌\",\n    bcy: \"б\",\n    bdquo: \"„\",\n    becaus: \"∵\",\n    because: \"∵\",\n    bemptyv: \"⦰\",\n    bepsi: \"϶\",\n    bernou: \"ℬ\",\n    beta: \"β\",\n    beth: \"ℶ\",\n    between: \"≬\",\n    bfr: \"𝔟\",\n    bigcap: \"⋂\",\n    bigcirc: \"◯\",\n    bigcup: \"⋃\",\n    bigodot: \"⨀\",\n    bigoplus: \"⨁\",\n    bigotimes: \"⨂\",\n    bigsqcup: \"⨆\",\n    bigstar: \"★\",\n    bigtriangledown: \"▽\",\n    bigtriangleup: \"△\",\n    biguplus: \"⨄\",\n    bigvee: \"⋁\",\n    bigwedge: \"⋀\",\n    bkarow: \"⤍\",\n    blacklozenge: \"⧫\",\n    blacksquare: \"▪\",\n    blacktriangle: \"▴\",\n    blacktriangledown: \"▾\",\n    blacktriangleleft: \"◂\",\n    blacktriangleright: \"▸\",\n    blank: \"␣\",\n    blk12: \"▒\",\n    blk14: \"░\",\n    blk34: \"▓\",\n    block: \"█\",\n    bne: \"=⃥\",\n    bnequiv: \"≡⃥\",\n    bnot: \"⌐\",\n    bopf: \"𝕓\",\n    bot: \"⊥\",\n    bottom: \"⊥\",\n    bowtie: \"⋈\",\n    boxDL: \"╗\",\n    boxDR: \"╔\",\n    boxDl: \"╖\",\n    boxDr: \"╓\",\n    boxH: \"═\",\n    boxHD: \"╦\",\n    boxHU: \"╩\",\n    boxHd: \"╤\",\n    boxHu: \"╧\",\n    boxUL: \"╝\",\n    boxUR: \"╚\",\n    boxUl: \"╜\",\n    boxUr: \"╙\",\n    boxV: \"║\",\n    boxVH: \"╬\",\n    boxVL: \"╣\",\n    boxVR: \"╠\",\n    boxVh: \"╫\",\n    boxVl: \"╢\",\n    boxVr: \"╟\",\n    boxbox: \"⧉\",\n    boxdL: \"╕\",\n    boxdR: \"╒\",\n    boxdl: \"┐\",\n    boxdr: \"┌\",\n    boxh: \"─\",\n    boxhD: \"╥\",\n    boxhU: \"╨\",\n    boxhd: \"┬\",\n    boxhu: \"┴\",\n    boxminus: \"⊟\",\n    boxplus: \"⊞\",\n    boxtimes: \"⊠\",\n    boxuL: \"╛\",\n    boxuR: \"╘\",\n    boxul: \"┘\",\n    boxur: \"└\",\n    boxv: \"│\",\n    boxvH: \"╪\",\n    boxvL: \"╡\",\n    boxvR: \"╞\",\n    boxvh: \"┼\",\n    boxvl: \"┤\",\n    boxvr: \"├\",\n    bprime: \"‵\",\n    breve: \"˘\",\n    brvba: \"¦\",\n    brvbar: \"¦\",\n    bscr: \"𝒷\",\n    bsemi: \"⁏\",\n    bsim: \"∽\",\n    bsime: \"⋍\",\n    bsol: \"\\\\\",\n    bsolb: \"⧅\",\n    bsolhsub: \"⟈\",\n    bull: \"•\",\n    bullet: \"•\",\n    bump: \"≎\",\n    bumpE: \"⪮\",\n    bumpe: \"≏\",\n    bumpeq: \"≏\",\n    cacute: \"ć\",\n    cap: \"∩\",\n    capand: \"⩄\",\n    capbrcup: \"⩉\",\n    capcap: \"⩋\",\n    capcup: \"⩇\",\n    capdot: \"⩀\",\n    caps: \"∩︀\",\n    caret: \"⁁\",\n    caron: \"ˇ\",\n    ccaps: \"⩍\",\n    ccaron: \"č\",\n    ccedi: \"ç\",\n    ccedil: \"ç\",\n    ccirc: \"ĉ\",\n    ccups: \"⩌\",\n    ccupssm: \"⩐\",\n    cdot: \"ċ\",\n    cedi: \"¸\",\n    cedil: \"¸\",\n    cemptyv: \"⦲\",\n    cen: \"¢\",\n    cent: \"¢\",\n    centerdot: \"·\",\n    cfr: \"𝔠\",\n    chcy: \"ч\",\n    check: \"✓\",\n    checkmark: \"✓\",\n    chi: \"χ\",\n    cir: \"○\",\n    cirE: \"⧃\",\n    circ: \"ˆ\",\n    circeq: \"≗\",\n    circlearrowleft: \"↺\",\n    circlearrowright: \"↻\",\n    circledR: \"®\",\n    circledS: \"Ⓢ\",\n    circledast: \"⊛\",\n    circledcirc: \"⊚\",\n    circleddash: \"⊝\",\n    cire: \"≗\",\n    cirfnint: \"⨐\",\n    cirmid: \"⫯\",\n    cirscir: \"⧂\",\n    clubs: \"♣\",\n    clubsuit: \"♣\",\n    colon: \":\",\n    colone: \"≔\",\n    coloneq: \"≔\",\n    comma: \",\",\n    commat: \"@\",\n    comp: \"∁\",\n    compfn: \"∘\",\n    complement: \"∁\",\n    complexes: \"ℂ\",\n    cong: \"≅\",\n    congdot: \"⩭\",\n    conint: \"∮\",\n    copf: \"𝕔\",\n    coprod: \"∐\",\n    cop: \"©\",\n    copy: \"©\",\n    copysr: \"℗\",\n    crarr: \"↵\",\n    cross: \"✗\",\n    cscr: \"𝒸\",\n    csub: \"⫏\",\n    csube: \"⫑\",\n    csup: \"⫐\",\n    csupe: \"⫒\",\n    ctdot: \"⋯\",\n    cudarrl: \"⤸\",\n    cudarrr: \"⤵\",\n    cuepr: \"⋞\",\n    cuesc: \"⋟\",\n    cularr: \"↶\",\n    cularrp: \"⤽\",\n    cup: \"∪\",\n    cupbrcap: \"⩈\",\n    cupcap: \"⩆\",\n    cupcup: \"⩊\",\n    cupdot: \"⊍\",\n    cupor: \"⩅\",\n    cups: \"∪︀\",\n    curarr: \"↷\",\n    curarrm: \"⤼\",\n    curlyeqprec: \"⋞\",\n    curlyeqsucc: \"⋟\",\n    curlyvee: \"⋎\",\n    curlywedge: \"⋏\",\n    curre: \"¤\",\n    curren: \"¤\",\n    curvearrowleft: \"↶\",\n    curvearrowright: \"↷\",\n    cuvee: \"⋎\",\n    cuwed: \"⋏\",\n    cwconint: \"∲\",\n    cwint: \"∱\",\n    cylcty: \"⌭\",\n    dArr: \"⇓\",\n    dHar: \"⥥\",\n    dagger: \"†\",\n    daleth: \"ℸ\",\n    darr: \"↓\",\n    dash: \"‐\",\n    dashv: \"⊣\",\n    dbkarow: \"⤏\",\n    dblac: \"˝\",\n    dcaron: \"ď\",\n    dcy: \"д\",\n    dd: \"ⅆ\",\n    ddagger: \"‡\",\n    ddarr: \"⇊\",\n    ddotseq: \"⩷\",\n    de: \"°\",\n    deg: \"°\",\n    delta: \"δ\",\n    demptyv: \"⦱\",\n    dfisht: \"⥿\",\n    dfr: \"𝔡\",\n    dharl: \"⇃\",\n    dharr: \"⇂\",\n    diam: \"⋄\",\n    diamond: \"⋄\",\n    diamondsuit: \"♦\",\n    diams: \"♦\",\n    die: \"¨\",\n    digamma: \"ϝ\",\n    disin: \"⋲\",\n    div: \"÷\",\n    divid: \"÷\",\n    divide: \"÷\",\n    divideontimes: \"⋇\",\n    divonx: \"⋇\",\n    djcy: \"ђ\",\n    dlcorn: \"⌞\",\n    dlcrop: \"⌍\",\n    dollar: \"$\",\n    dopf: \"𝕕\",\n    dot: \"˙\",\n    doteq: \"≐\",\n    doteqdot: \"≑\",\n    dotminus: \"∸\",\n    dotplus: \"∔\",\n    dotsquare: \"⊡\",\n    doublebarwedge: \"⌆\",\n    downarrow: \"↓\",\n    downdownarrows: \"⇊\",\n    downharpoonleft: \"⇃\",\n    downharpoonright: \"⇂\",\n    drbkarow: \"⤐\",\n    drcorn: \"⌟\",\n    drcrop: \"⌌\",\n    dscr: \"𝒹\",\n    dscy: \"ѕ\",\n    dsol: \"⧶\",\n    dstrok: \"đ\",\n    dtdot: \"⋱\",\n    dtri: \"▿\",\n    dtrif: \"▾\",\n    duarr: \"⇵\",\n    duhar: \"⥯\",\n    dwangle: \"⦦\",\n    dzcy: \"џ\",\n    dzigrarr: \"⟿\",\n    eDDot: \"⩷\",\n    eDot: \"≑\",\n    eacut: \"é\",\n    eacute: \"é\",\n    easter: \"⩮\",\n    ecaron: \"ě\",\n    ecir: \"ê\",\n    ecirc: \"ê\",\n    ecolon: \"≕\",\n    ecy: \"э\",\n    edot: \"ė\",\n    ee: \"ⅇ\",\n    efDot: \"≒\",\n    efr: \"𝔢\",\n    eg: \"⪚\",\n    egrav: \"è\",\n    egrave: \"è\",\n    egs: \"⪖\",\n    egsdot: \"⪘\",\n    el: \"⪙\",\n    elinters: \"⏧\",\n    ell: \"ℓ\",\n    els: \"⪕\",\n    elsdot: \"⪗\",\n    emacr: \"ē\",\n    empty: \"∅\",\n    emptyset: \"∅\",\n    emptyv: \"∅\",\n    emsp13: \" \",\n    emsp14: \" \",\n    emsp: \" \",\n    eng: \"ŋ\",\n    ensp: \" \",\n    eogon: \"ę\",\n    eopf: \"𝕖\",\n    epar: \"⋕\",\n    eparsl: \"⧣\",\n    eplus: \"⩱\",\n    epsi: \"ε\",\n    epsilon: \"ε\",\n    epsiv: \"ϵ\",\n    eqcirc: \"≖\",\n    eqcolon: \"≕\",\n    eqsim: \"≂\",\n    eqslantgtr: \"⪖\",\n    eqslantless: \"⪕\",\n    equals: \"=\",\n    equest: \"≟\",\n    equiv: \"≡\",\n    equivDD: \"⩸\",\n    eqvparsl: \"⧥\",\n    erDot: \"≓\",\n    erarr: \"⥱\",\n    escr: \"ℯ\",\n    esdot: \"≐\",\n    esim: \"≂\",\n    eta: \"η\",\n    et: \"ð\",\n    eth: \"ð\",\n    eum: \"ë\",\n    euml: \"ë\",\n    euro: \"€\",\n    excl: \"!\",\n    exist: \"∃\",\n    expectation: \"ℰ\",\n    exponentiale: \"ⅇ\",\n    fallingdotseq: \"≒\",\n    fcy: \"ф\",\n    female: \"♀\",\n    ffilig: \"ﬃ\",\n    fflig: \"ﬀ\",\n    ffllig: \"ﬄ\",\n    ffr: \"𝔣\",\n    filig: \"ﬁ\",\n    fjlig: \"fj\",\n    flat: \"♭\",\n    fllig: \"ﬂ\",\n    fltns: \"▱\",\n    fnof: \"ƒ\",\n    fopf: \"𝕗\",\n    forall: \"∀\",\n    fork: \"⋔\",\n    forkv: \"⫙\",\n    fpartint: \"⨍\",\n    frac1: \"¼\",\n    frac12: \"½\",\n    frac13: \"⅓\",\n    frac14: \"¼\",\n    frac15: \"⅕\",\n    frac16: \"⅙\",\n    frac18: \"⅛\",\n    frac23: \"⅔\",\n    frac25: \"⅖\",\n    frac3: \"¾\",\n    frac34: \"¾\",\n    frac35: \"⅗\",\n    frac38: \"⅜\",\n    frac45: \"⅘\",\n    frac56: \"⅚\",\n    frac58: \"⅝\",\n    frac78: \"⅞\",\n    frasl: \"⁄\",\n    frown: \"⌢\",\n    fscr: \"𝒻\",\n    gE: \"≧\",\n    gEl: \"⪌\",\n    gacute: \"ǵ\",\n    gamma: \"γ\",\n    gammad: \"ϝ\",\n    gap: \"⪆\",\n    gbreve: \"ğ\",\n    gcirc: \"ĝ\",\n    gcy: \"г\",\n    gdot: \"ġ\",\n    ge: \"≥\",\n    gel: \"⋛\",\n    geq: \"≥\",\n    geqq: \"≧\",\n    geqslant: \"⩾\",\n    ges: \"⩾\",\n    gescc: \"⪩\",\n    gesdot: \"⪀\",\n    gesdoto: \"⪂\",\n    gesdotol: \"⪄\",\n    gesl: \"⋛︀\",\n    gesles: \"⪔\",\n    gfr: \"𝔤\",\n    gg: \"≫\",\n    ggg: \"⋙\",\n    gimel: \"ℷ\",\n    gjcy: \"ѓ\",\n    gl: \"≷\",\n    glE: \"⪒\",\n    gla: \"⪥\",\n    glj: \"⪤\",\n    gnE: \"≩\",\n    gnap: \"⪊\",\n    gnapprox: \"⪊\",\n    gne: \"⪈\",\n    gneq: \"⪈\",\n    gneqq: \"≩\",\n    gnsim: \"⋧\",\n    gopf: \"𝕘\",\n    grave: \"`\",\n    gscr: \"ℊ\",\n    gsim: \"≳\",\n    gsime: \"⪎\",\n    gsiml: \"⪐\",\n    g: \">\",\n    gt: \">\",\n    gtcc: \"⪧\",\n    gtcir: \"⩺\",\n    gtdot: \"⋗\",\n    gtlPar: \"⦕\",\n    gtquest: \"⩼\",\n    gtrapprox: \"⪆\",\n    gtrarr: \"⥸\",\n    gtrdot: \"⋗\",\n    gtreqless: \"⋛\",\n    gtreqqless: \"⪌\",\n    gtrless: \"≷\",\n    gtrsim: \"≳\",\n    gvertneqq: \"≩︀\",\n    gvnE: \"≩︀\",\n    hArr: \"⇔\",\n    hairsp: \" \",\n    half: \"½\",\n    hamilt: \"ℋ\",\n    hardcy: \"ъ\",\n    harr: \"↔\",\n    harrcir: \"⥈\",\n    harrw: \"↭\",\n    hbar: \"ℏ\",\n    hcirc: \"ĥ\",\n    hearts: \"♥\",\n    heartsuit: \"♥\",\n    hellip: \"…\",\n    hercon: \"⊹\",\n    hfr: \"𝔥\",\n    hksearow: \"⤥\",\n    hkswarow: \"⤦\",\n    hoarr: \"⇿\",\n    homtht: \"∻\",\n    hookleftarrow: \"↩\",\n    hookrightarrow: \"↪\",\n    hopf: \"𝕙\",\n    horbar: \"―\",\n    hscr: \"𝒽\",\n    hslash: \"ℏ\",\n    hstrok: \"ħ\",\n    hybull: \"⁃\",\n    hyphen: \"‐\",\n    iacut: \"í\",\n    iacute: \"í\",\n    ic: \"⁣\",\n    icir: \"î\",\n    icirc: \"î\",\n    icy: \"и\",\n    iecy: \"е\",\n    iexc: \"¡\",\n    iexcl: \"¡\",\n    iff: \"⇔\",\n    ifr: \"𝔦\",\n    igrav: \"ì\",\n    igrave: \"ì\",\n    ii: \"ⅈ\",\n    iiiint: \"⨌\",\n    iiint: \"∭\",\n    iinfin: \"⧜\",\n    iiota: \"℩\",\n    ijlig: \"ĳ\",\n    imacr: \"ī\",\n    image: \"ℑ\",\n    imagline: \"ℐ\",\n    imagpart: \"ℑ\",\n    imath: \"ı\",\n    imof: \"⊷\",\n    imped: \"Ƶ\",\n    incare: \"℅\",\n    infin: \"∞\",\n    infintie: \"⧝\",\n    inodot: \"ı\",\n    int: \"∫\",\n    intcal: \"⊺\",\n    integers: \"ℤ\",\n    intercal: \"⊺\",\n    intlarhk: \"⨗\",\n    intprod: \"⨼\",\n    iocy: \"ё\",\n    iogon: \"į\",\n    iopf: \"𝕚\",\n    iota: \"ι\",\n    iprod: \"⨼\",\n    iques: \"¿\",\n    iquest: \"¿\",\n    iscr: \"𝒾\",\n    isin: \"∈\",\n    isinE: \"⋹\",\n    isindot: \"⋵\",\n    isins: \"⋴\",\n    isinsv: \"⋳\",\n    isinv: \"∈\",\n    it: \"⁢\",\n    itilde: \"ĩ\",\n    iukcy: \"і\",\n    ium: \"ï\",\n    iuml: \"ï\",\n    jcirc: \"ĵ\",\n    jcy: \"й\",\n    jfr: \"𝔧\",\n    jmath: \"ȷ\",\n    jopf: \"𝕛\",\n    jscr: \"𝒿\",\n    jsercy: \"ј\",\n    jukcy: \"є\",\n    kappa: \"κ\",\n    kappav: \"ϰ\",\n    kcedil: \"ķ\",\n    kcy: \"к\",\n    kfr: \"𝔨\",\n    kgreen: \"ĸ\",\n    khcy: \"х\",\n    kjcy: \"ќ\",\n    kopf: \"𝕜\",\n    kscr: \"𝓀\",\n    lAarr: \"⇚\",\n    lArr: \"⇐\",\n    lAtail: \"⤛\",\n    lBarr: \"⤎\",\n    lE: \"≦\",\n    lEg: \"⪋\",\n    lHar: \"⥢\",\n    lacute: \"ĺ\",\n    laemptyv: \"⦴\",\n    lagran: \"ℒ\",\n    lambda: \"λ\",\n    lang: \"⟨\",\n    langd: \"⦑\",\n    langle: \"⟨\",\n    lap: \"⪅\",\n    laqu: \"«\",\n    laquo: \"«\",\n    larr: \"←\",\n    larrb: \"⇤\",\n    larrbfs: \"⤟\",\n    larrfs: \"⤝\",\n    larrhk: \"↩\",\n    larrlp: \"↫\",\n    larrpl: \"⤹\",\n    larrsim: \"⥳\",\n    larrtl: \"↢\",\n    lat: \"⪫\",\n    latail: \"⤙\",\n    late: \"⪭\",\n    lates: \"⪭︀\",\n    lbarr: \"⤌\",\n    lbbrk: \"❲\",\n    lbrace: \"{\",\n    lbrack: \"[\",\n    lbrke: \"⦋\",\n    lbrksld: \"⦏\",\n    lbrkslu: \"⦍\",\n    lcaron: \"ľ\",\n    lcedil: \"ļ\",\n    lceil: \"⌈\",\n    lcub: \"{\",\n    lcy: \"л\",\n    ldca: \"⤶\",\n    ldquo: \"“\",\n    ldquor: \"„\",\n    ldrdhar: \"⥧\",\n    ldrushar: \"⥋\",\n    ldsh: \"↲\",\n    le: \"≤\",\n    leftarrow: \"←\",\n    leftarrowtail: \"↢\",\n    leftharpoondown: \"↽\",\n    leftharpoonup: \"↼\",\n    leftleftarrows: \"⇇\",\n    leftrightarrow: \"↔\",\n    leftrightarrows: \"⇆\",\n    leftrightharpoons: \"⇋\",\n    leftrightsquigarrow: \"↭\",\n    leftthreetimes: \"⋋\",\n    leg: \"⋚\",\n    leq: \"≤\",\n    leqq: \"≦\",\n    leqslant: \"⩽\",\n    les: \"⩽\",\n    lescc: \"⪨\",\n    lesdot: \"⩿\",\n    lesdoto: \"⪁\",\n    lesdotor: \"⪃\",\n    lesg: \"⋚︀\",\n    lesges: \"⪓\",\n    lessapprox: \"⪅\",\n    lessdot: \"⋖\",\n    lesseqgtr: \"⋚\",\n    lesseqqgtr: \"⪋\",\n    lessgtr: \"≶\",\n    lesssim: \"≲\",\n    lfisht: \"⥼\",\n    lfloor: \"⌊\",\n    lfr: \"𝔩\",\n    lg: \"≶\",\n    lgE: \"⪑\",\n    lhard: \"↽\",\n    lharu: \"↼\",\n    lharul: \"⥪\",\n    lhblk: \"▄\",\n    ljcy: \"љ\",\n    ll: \"≪\",\n    llarr: \"⇇\",\n    llcorner: \"⌞\",\n    llhard: \"⥫\",\n    lltri: \"◺\",\n    lmidot: \"ŀ\",\n    lmoust: \"⎰\",\n    lmoustache: \"⎰\",\n    lnE: \"≨\",\n    lnap: \"⪉\",\n    lnapprox: \"⪉\",\n    lne: \"⪇\",\n    lneq: \"⪇\",\n    lneqq: \"≨\",\n    lnsim: \"⋦\",\n    loang: \"⟬\",\n    loarr: \"⇽\",\n    lobrk: \"⟦\",\n    longleftarrow: \"⟵\",\n    longleftrightarrow: \"⟷\",\n    longmapsto: \"⟼\",\n    longrightarrow: \"⟶\",\n    looparrowleft: \"↫\",\n    looparrowright: \"↬\",\n    lopar: \"⦅\",\n    lopf: \"𝕝\",\n    loplus: \"⨭\",\n    lotimes: \"⨴\",\n    lowast: \"∗\",\n    lowbar: \"_\",\n    loz: \"◊\",\n    lozenge: \"◊\",\n    lozf: \"⧫\",\n    lpar: \"(\",\n    lparlt: \"⦓\",\n    lrarr: \"⇆\",\n    lrcorner: \"⌟\",\n    lrhar: \"⇋\",\n    lrhard: \"⥭\",\n    lrm: \"‎\",\n    lrtri: \"⊿\",\n    lsaquo: \"‹\",\n    lscr: \"𝓁\",\n    lsh: \"↰\",\n    lsim: \"≲\",\n    lsime: \"⪍\",\n    lsimg: \"⪏\",\n    lsqb: \"[\",\n    lsquo: \"‘\",\n    lsquor: \"‚\",\n    lstrok: \"ł\",\n    l: \"<\",\n    lt: \"<\",\n    ltcc: \"⪦\",\n    ltcir: \"⩹\",\n    ltdot: \"⋖\",\n    lthree: \"⋋\",\n    ltimes: \"⋉\",\n    ltlarr: \"⥶\",\n    ltquest: \"⩻\",\n    ltrPar: \"⦖\",\n    ltri: \"◃\",\n    ltrie: \"⊴\",\n    ltrif: \"◂\",\n    lurdshar: \"⥊\",\n    luruhar: \"⥦\",\n    lvertneqq: \"≨︀\",\n    lvnE: \"≨︀\",\n    mDDot: \"∺\",\n    mac: \"¯\",\n    macr: \"¯\",\n    male: \"♂\",\n    malt: \"✠\",\n    maltese: \"✠\",\n    map: \"↦\",\n    mapsto: \"↦\",\n    mapstodown: \"↧\",\n    mapstoleft: \"↤\",\n    mapstoup: \"↥\",\n    marker: \"▮\",\n    mcomma: \"⨩\",\n    mcy: \"м\",\n    mdash: \"—\",\n    measuredangle: \"∡\",\n    mfr: \"𝔪\",\n    mho: \"℧\",\n    micr: \"µ\",\n    micro: \"µ\",\n    mid: \"∣\",\n    midast: \"*\",\n    midcir: \"⫰\",\n    middo: \"·\",\n    middot: \"·\",\n    minus: \"−\",\n    minusb: \"⊟\",\n    minusd: \"∸\",\n    minusdu: \"⨪\",\n    mlcp: \"⫛\",\n    mldr: \"…\",\n    mnplus: \"∓\",\n    models: \"⊧\",\n    mopf: \"𝕞\",\n    mp: \"∓\",\n    mscr: \"𝓂\",\n    mstpos: \"∾\",\n    mu: \"μ\",\n    multimap: \"⊸\",\n    mumap: \"⊸\",\n    nGg: \"⋙̸\",\n    nGt: \"≫⃒\",\n    nGtv: \"≫̸\",\n    nLeftarrow: \"⇍\",\n    nLeftrightarrow: \"⇎\",\n    nLl: \"⋘̸\",\n    nLt: \"≪⃒\",\n    nLtv: \"≪̸\",\n    nRightarrow: \"⇏\",\n    nVDash: \"⊯\",\n    nVdash: \"⊮\",\n    nabla: \"∇\",\n    nacute: \"ń\",\n    nang: \"∠⃒\",\n    nap: \"≉\",\n    napE: \"⩰̸\",\n    napid: \"≋̸\",\n    napos: \"ŉ\",\n    napprox: \"≉\",\n    natur: \"♮\",\n    natural: \"♮\",\n    naturals: \"ℕ\",\n    nbs: \" \",\n    nbsp: \" \",\n    nbump: \"≎̸\",\n    nbumpe: \"≏̸\",\n    ncap: \"⩃\",\n    ncaron: \"ň\",\n    ncedil: \"ņ\",\n    ncong: \"≇\",\n    ncongdot: \"⩭̸\",\n    ncup: \"⩂\",\n    ncy: \"н\",\n    ndash: \"–\",\n    ne: \"≠\",\n    neArr: \"⇗\",\n    nearhk: \"⤤\",\n    nearr: \"↗\",\n    nearrow: \"↗\",\n    nedot: \"≐̸\",\n    nequiv: \"≢\",\n    nesear: \"⤨\",\n    nesim: \"≂̸\",\n    nexist: \"∄\",\n    nexists: \"∄\",\n    nfr: \"𝔫\",\n    ngE: \"≧̸\",\n    nge: \"≱\",\n    ngeq: \"≱\",\n    ngeqq: \"≧̸\",\n    ngeqslant: \"⩾̸\",\n    nges: \"⩾̸\",\n    ngsim: \"≵\",\n    ngt: \"≯\",\n    ngtr: \"≯\",\n    nhArr: \"⇎\",\n    nharr: \"↮\",\n    nhpar: \"⫲\",\n    ni: \"∋\",\n    nis: \"⋼\",\n    nisd: \"⋺\",\n    niv: \"∋\",\n    njcy: \"њ\",\n    nlArr: \"⇍\",\n    nlE: \"≦̸\",\n    nlarr: \"↚\",\n    nldr: \"‥\",\n    nle: \"≰\",\n    nleftarrow: \"↚\",\n    nleftrightarrow: \"↮\",\n    nleq: \"≰\",\n    nleqq: \"≦̸\",\n    nleqslant: \"⩽̸\",\n    nles: \"⩽̸\",\n    nless: \"≮\",\n    nlsim: \"≴\",\n    nlt: \"≮\",\n    nltri: \"⋪\",\n    nltrie: \"⋬\",\n    nmid: \"∤\",\n    nopf: \"𝕟\",\n    no: \"¬\",\n    not: \"¬\",\n    notin: \"∉\",\n    notinE: \"⋹̸\",\n    notindot: \"⋵̸\",\n    notinva: \"∉\",\n    notinvb: \"⋷\",\n    notinvc: \"⋶\",\n    notni: \"∌\",\n    notniva: \"∌\",\n    notnivb: \"⋾\",\n    notnivc: \"⋽\",\n    npar: \"∦\",\n    nparallel: \"∦\",\n    nparsl: \"⫽⃥\",\n    npart: \"∂̸\",\n    npolint: \"⨔\",\n    npr: \"⊀\",\n    nprcue: \"⋠\",\n    npre: \"⪯̸\",\n    nprec: \"⊀\",\n    npreceq: \"⪯̸\",\n    nrArr: \"⇏\",\n    nrarr: \"↛\",\n    nrarrc: \"⤳̸\",\n    nrarrw: \"↝̸\",\n    nrightarrow: \"↛\",\n    nrtri: \"⋫\",\n    nrtrie: \"⋭\",\n    nsc: \"⊁\",\n    nsccue: \"⋡\",\n    nsce: \"⪰̸\",\n    nscr: \"𝓃\",\n    nshortmid: \"∤\",\n    nshortparallel: \"∦\",\n    nsim: \"≁\",\n    nsime: \"≄\",\n    nsimeq: \"≄\",\n    nsmid: \"∤\",\n    nspar: \"∦\",\n    nsqsube: \"⋢\",\n    nsqsupe: \"⋣\",\n    nsub: \"⊄\",\n    nsubE: \"⫅̸\",\n    nsube: \"⊈\",\n    nsubset: \"⊂⃒\",\n    nsubseteq: \"⊈\",\n    nsubseteqq: \"⫅̸\",\n    nsucc: \"⊁\",\n    nsucceq: \"⪰̸\",\n    nsup: \"⊅\",\n    nsupE: \"⫆̸\",\n    nsupe: \"⊉\",\n    nsupset: \"⊃⃒\",\n    nsupseteq: \"⊉\",\n    nsupseteqq: \"⫆̸\",\n    ntgl: \"≹\",\n    ntild: \"ñ\",\n    ntilde: \"ñ\",\n    ntlg: \"≸\",\n    ntriangleleft: \"⋪\",\n    ntrianglelefteq: \"⋬\",\n    ntriangleright: \"⋫\",\n    ntrianglerighteq: \"⋭\",\n    nu: \"ν\",\n    num: \"#\",\n    numero: \"№\",\n    numsp: \" \",\n    nvDash: \"⊭\",\n    nvHarr: \"⤄\",\n    nvap: \"≍⃒\",\n    nvdash: \"⊬\",\n    nvge: \"≥⃒\",\n    nvgt: \">⃒\",\n    nvinfin: \"⧞\",\n    nvlArr: \"⤂\",\n    nvle: \"≤⃒\",\n    nvlt: \"<⃒\",\n    nvltrie: \"⊴⃒\",\n    nvrArr: \"⤃\",\n    nvrtrie: \"⊵⃒\",\n    nvsim: \"∼⃒\",\n    nwArr: \"⇖\",\n    nwarhk: \"⤣\",\n    nwarr: \"↖\",\n    nwarrow: \"↖\",\n    nwnear: \"⤧\",\n    oS: \"Ⓢ\",\n    oacut: \"ó\",\n    oacute: \"ó\",\n    oast: \"⊛\",\n    ocir: \"ô\",\n    ocirc: \"ô\",\n    ocy: \"о\",\n    odash: \"⊝\",\n    odblac: \"ő\",\n    odiv: \"⨸\",\n    odot: \"⊙\",\n    odsold: \"⦼\",\n    oelig: \"œ\",\n    ofcir: \"⦿\",\n    ofr: \"𝔬\",\n    ogon: \"˛\",\n    ograv: \"ò\",\n    ograve: \"ò\",\n    ogt: \"⧁\",\n    ohbar: \"⦵\",\n    ohm: \"Ω\",\n    oint: \"∮\",\n    olarr: \"↺\",\n    olcir: \"⦾\",\n    olcross: \"⦻\",\n    oline: \"‾\",\n    olt: \"⧀\",\n    omacr: \"ō\",\n    omega: \"ω\",\n    omicron: \"ο\",\n    omid: \"⦶\",\n    ominus: \"⊖\",\n    oopf: \"𝕠\",\n    opar: \"⦷\",\n    operp: \"⦹\",\n    oplus: \"⊕\",\n    or: \"∨\",\n    orarr: \"↻\",\n    ord: \"º\",\n    order: \"ℴ\",\n    orderof: \"ℴ\",\n    ordf: \"ª\",\n    ordm: \"º\",\n    origof: \"⊶\",\n    oror: \"⩖\",\n    orslope: \"⩗\",\n    orv: \"⩛\",\n    oscr: \"ℴ\",\n    oslas: \"ø\",\n    oslash: \"ø\",\n    osol: \"⊘\",\n    otild: \"õ\",\n    otilde: \"õ\",\n    otimes: \"⊗\",\n    otimesas: \"⨶\",\n    oum: \"ö\",\n    ouml: \"ö\",\n    ovbar: \"⌽\",\n    par: \"¶\",\n    para: \"¶\",\n    parallel: \"∥\",\n    parsim: \"⫳\",\n    parsl: \"⫽\",\n    part: \"∂\",\n    pcy: \"п\",\n    percnt: \"%\",\n    period: \".\",\n    permil: \"‰\",\n    perp: \"⊥\",\n    pertenk: \"‱\",\n    pfr: \"𝔭\",\n    phi: \"φ\",\n    phiv: \"ϕ\",\n    phmmat: \"ℳ\",\n    phone: \"☎\",\n    pi: \"π\",\n    pitchfork: \"⋔\",\n    piv: \"ϖ\",\n    planck: \"ℏ\",\n    planckh: \"ℎ\",\n    plankv: \"ℏ\",\n    plus: \"+\",\n    plusacir: \"⨣\",\n    plusb: \"⊞\",\n    pluscir: \"⨢\",\n    plusdo: \"∔\",\n    plusdu: \"⨥\",\n    pluse: \"⩲\",\n    plusm: \"±\",\n    plusmn: \"±\",\n    plussim: \"⨦\",\n    plustwo: \"⨧\",\n    pm: \"±\",\n    pointint: \"⨕\",\n    popf: \"𝕡\",\n    poun: \"£\",\n    pound: \"£\",\n    pr: \"≺\",\n    prE: \"⪳\",\n    prap: \"⪷\",\n    prcue: \"≼\",\n    pre: \"⪯\",\n    prec: \"≺\",\n    precapprox: \"⪷\",\n    preccurlyeq: \"≼\",\n    preceq: \"⪯\",\n    precnapprox: \"⪹\",\n    precneqq: \"⪵\",\n    precnsim: \"⋨\",\n    precsim: \"≾\",\n    prime: \"′\",\n    primes: \"ℙ\",\n    prnE: \"⪵\",\n    prnap: \"⪹\",\n    prnsim: \"⋨\",\n    prod: \"∏\",\n    profalar: \"⌮\",\n    profline: \"⌒\",\n    profsurf: \"⌓\",\n    prop: \"∝\",\n    propto: \"∝\",\n    prsim: \"≾\",\n    prurel: \"⊰\",\n    pscr: \"𝓅\",\n    psi: \"ψ\",\n    puncsp: \" \",\n    qfr: \"𝔮\",\n    qint: \"⨌\",\n    qopf: \"𝕢\",\n    qprime: \"⁗\",\n    qscr: \"𝓆\",\n    quaternions: \"ℍ\",\n    quatint: \"⨖\",\n    quest: \"?\",\n    questeq: \"≟\",\n    quo: '\"',\n    quot: '\"',\n    rAarr: \"⇛\",\n    rArr: \"⇒\",\n    rAtail: \"⤜\",\n    rBarr: \"⤏\",\n    rHar: \"⥤\",\n    race: \"∽̱\",\n    racute: \"ŕ\",\n    radic: \"√\",\n    raemptyv: \"⦳\",\n    rang: \"⟩\",\n    rangd: \"⦒\",\n    range: \"⦥\",\n    rangle: \"⟩\",\n    raqu: \"»\",\n    raquo: \"»\",\n    rarr: \"→\",\n    rarrap: \"⥵\",\n    rarrb: \"⇥\",\n    rarrbfs: \"⤠\",\n    rarrc: \"⤳\",\n    rarrfs: \"⤞\",\n    rarrhk: \"↪\",\n    rarrlp: \"↬\",\n    rarrpl: \"⥅\",\n    rarrsim: \"⥴\",\n    rarrtl: \"↣\",\n    rarrw: \"↝\",\n    ratail: \"⤚\",\n    ratio: \"∶\",\n    rationals: \"ℚ\",\n    rbarr: \"⤍\",\n    rbbrk: \"❳\",\n    rbrace: \"}\",\n    rbrack: \"]\",\n    rbrke: \"⦌\",\n    rbrksld: \"⦎\",\n    rbrkslu: \"⦐\",\n    rcaron: \"ř\",\n    rcedil: \"ŗ\",\n    rceil: \"⌉\",\n    rcub: \"}\",\n    rcy: \"р\",\n    rdca: \"⤷\",\n    rdldhar: \"⥩\",\n    rdquo: \"”\",\n    rdquor: \"”\",\n    rdsh: \"↳\",\n    real: \"ℜ\",\n    realine: \"ℛ\",\n    realpart: \"ℜ\",\n    reals: \"ℝ\",\n    rect: \"▭\",\n    re: \"®\",\n    reg: \"®\",\n    rfisht: \"⥽\",\n    rfloor: \"⌋\",\n    rfr: \"𝔯\",\n    rhard: \"⇁\",\n    rharu: \"⇀\",\n    rharul: \"⥬\",\n    rho: \"ρ\",\n    rhov: \"ϱ\",\n    rightarrow: \"→\",\n    rightarrowtail: \"↣\",\n    rightharpoondown: \"⇁\",\n    rightharpoonup: \"⇀\",\n    rightleftarrows: \"⇄\",\n    rightleftharpoons: \"⇌\",\n    rightrightarrows: \"⇉\",\n    rightsquigarrow: \"↝\",\n    rightthreetimes: \"⋌\",\n    ring: \"˚\",\n    risingdotseq: \"≓\",\n    rlarr: \"⇄\",\n    rlhar: \"⇌\",\n    rlm: \"‏\",\n    rmoust: \"⎱\",\n    rmoustache: \"⎱\",\n    rnmid: \"⫮\",\n    roang: \"⟭\",\n    roarr: \"⇾\",\n    robrk: \"⟧\",\n    ropar: \"⦆\",\n    ropf: \"𝕣\",\n    roplus: \"⨮\",\n    rotimes: \"⨵\",\n    rpar: \")\",\n    rpargt: \"⦔\",\n    rppolint: \"⨒\",\n    rrarr: \"⇉\",\n    rsaquo: \"›\",\n    rscr: \"𝓇\",\n    rsh: \"↱\",\n    rsqb: \"]\",\n    rsquo: \"’\",\n    rsquor: \"’\",\n    rthree: \"⋌\",\n    rtimes: \"⋊\",\n    rtri: \"▹\",\n    rtrie: \"⊵\",\n    rtrif: \"▸\",\n    rtriltri: \"⧎\",\n    ruluhar: \"⥨\",\n    rx: \"℞\",\n    sacute: \"ś\",\n    sbquo: \"‚\",\n    sc: \"≻\",\n    scE: \"⪴\",\n    scap: \"⪸\",\n    scaron: \"š\",\n    sccue: \"≽\",\n    sce: \"⪰\",\n    scedil: \"ş\",\n    scirc: \"ŝ\",\n    scnE: \"⪶\",\n    scnap: \"⪺\",\n    scnsim: \"⋩\",\n    scpolint: \"⨓\",\n    scsim: \"≿\",\n    scy: \"с\",\n    sdot: \"⋅\",\n    sdotb: \"⊡\",\n    sdote: \"⩦\",\n    seArr: \"⇘\",\n    searhk: \"⤥\",\n    searr: \"↘\",\n    searrow: \"↘\",\n    sec: \"§\",\n    sect: \"§\",\n    semi: \";\",\n    seswar: \"⤩\",\n    setminus: \"∖\",\n    setmn: \"∖\",\n    sext: \"✶\",\n    sfr: \"𝔰\",\n    sfrown: \"⌢\",\n    sharp: \"♯\",\n    shchcy: \"щ\",\n    shcy: \"ш\",\n    shortmid: \"∣\",\n    shortparallel: \"∥\",\n    sh: \"­\",\n    shy: \"­\",\n    sigma: \"σ\",\n    sigmaf: \"ς\",\n    sigmav: \"ς\",\n    sim: \"∼\",\n    simdot: \"⩪\",\n    sime: \"≃\",\n    simeq: \"≃\",\n    simg: \"⪞\",\n    simgE: \"⪠\",\n    siml: \"⪝\",\n    simlE: \"⪟\",\n    simne: \"≆\",\n    simplus: \"⨤\",\n    simrarr: \"⥲\",\n    slarr: \"←\",\n    smallsetminus: \"∖\",\n    smashp: \"⨳\",\n    smeparsl: \"⧤\",\n    smid: \"∣\",\n    smile: \"⌣\",\n    smt: \"⪪\",\n    smte: \"⪬\",\n    smtes: \"⪬︀\",\n    softcy: \"ь\",\n    sol: \"/\",\n    solb: \"⧄\",\n    solbar: \"⌿\",\n    sopf: \"𝕤\",\n    spades: \"♠\",\n    spadesuit: \"♠\",\n    spar: \"∥\",\n    sqcap: \"⊓\",\n    sqcaps: \"⊓︀\",\n    sqcup: \"⊔\",\n    sqcups: \"⊔︀\",\n    sqsub: \"⊏\",\n    sqsube: \"⊑\",\n    sqsubset: \"⊏\",\n    sqsubseteq: \"⊑\",\n    sqsup: \"⊐\",\n    sqsupe: \"⊒\",\n    sqsupset: \"⊐\",\n    sqsupseteq: \"⊒\",\n    squ: \"□\",\n    square: \"□\",\n    squarf: \"▪\",\n    squf: \"▪\",\n    srarr: \"→\",\n    sscr: \"𝓈\",\n    ssetmn: \"∖\",\n    ssmile: \"⌣\",\n    sstarf: \"⋆\",\n    star: \"☆\",\n    starf: \"★\",\n    straightepsilon: \"ϵ\",\n    straightphi: \"ϕ\",\n    strns: \"¯\",\n    sub: \"⊂\",\n    subE: \"⫅\",\n    subdot: \"⪽\",\n    sube: \"⊆\",\n    subedot: \"⫃\",\n    submult: \"⫁\",\n    subnE: \"⫋\",\n    subne: \"⊊\",\n    subplus: \"⪿\",\n    subrarr: \"⥹\",\n    subset: \"⊂\",\n    subseteq: \"⊆\",\n    subseteqq: \"⫅\",\n    subsetneq: \"⊊\",\n    subsetneqq: \"⫋\",\n    subsim: \"⫇\",\n    subsub: \"⫕\",\n    subsup: \"⫓\",\n    succ: \"≻\",\n    succapprox: \"⪸\",\n    succcurlyeq: \"≽\",\n    succeq: \"⪰\",\n    succnapprox: \"⪺\",\n    succneqq: \"⪶\",\n    succnsim: \"⋩\",\n    succsim: \"≿\",\n    sum: \"∑\",\n    sung: \"♪\",\n    sup: \"⊃\",\n    sup1: \"¹\",\n    sup2: \"²\",\n    sup3: \"³\",\n    supE: \"⫆\",\n    supdot: \"⪾\",\n    supdsub: \"⫘\",\n    supe: \"⊇\",\n    supedot: \"⫄\",\n    suphsol: \"⟉\",\n    suphsub: \"⫗\",\n    suplarr: \"⥻\",\n    supmult: \"⫂\",\n    supnE: \"⫌\",\n    supne: \"⊋\",\n    supplus: \"⫀\",\n    supset: \"⊃\",\n    supseteq: \"⊇\",\n    supseteqq: \"⫆\",\n    supsetneq: \"⊋\",\n    supsetneqq: \"⫌\",\n    supsim: \"⫈\",\n    supsub: \"⫔\",\n    supsup: \"⫖\",\n    swArr: \"⇙\",\n    swarhk: \"⤦\",\n    swarr: \"↙\",\n    swarrow: \"↙\",\n    swnwar: \"⤪\",\n    szli: \"ß\",\n    szlig: \"ß\",\n    target: \"⌖\",\n    tau: \"τ\",\n    tbrk: \"⎴\",\n    tcaron: \"ť\",\n    tcedil: \"ţ\",\n    tcy: \"т\",\n    tdot: \"⃛\",\n    telrec: \"⌕\",\n    tfr: \"𝔱\",\n    there4: \"∴\",\n    therefore: \"∴\",\n    theta: \"θ\",\n    thetasym: \"ϑ\",\n    thetav: \"ϑ\",\n    thickapprox: \"≈\",\n    thicksim: \"∼\",\n    thinsp: \" \",\n    thkap: \"≈\",\n    thksim: \"∼\",\n    thor: \"þ\",\n    thorn: \"þ\",\n    tilde: \"˜\",\n    time: \"×\",\n    times: \"×\",\n    timesb: \"⊠\",\n    timesbar: \"⨱\",\n    timesd: \"⨰\",\n    tint: \"∭\",\n    toea: \"⤨\",\n    top: \"⊤\",\n    topbot: \"⌶\",\n    topcir: \"⫱\",\n    topf: \"𝕥\",\n    topfork: \"⫚\",\n    tosa: \"⤩\",\n    tprime: \"‴\",\n    trade: \"™\",\n    triangle: \"▵\",\n    triangledown: \"▿\",\n    triangleleft: \"◃\",\n    trianglelefteq: \"⊴\",\n    triangleq: \"≜\",\n    triangleright: \"▹\",\n    trianglerighteq: \"⊵\",\n    tridot: \"◬\",\n    trie: \"≜\",\n    triminus: \"⨺\",\n    triplus: \"⨹\",\n    trisb: \"⧍\",\n    tritime: \"⨻\",\n    trpezium: \"⏢\",\n    tscr: \"𝓉\",\n    tscy: \"ц\",\n    tshcy: \"ћ\",\n    tstrok: \"ŧ\",\n    twixt: \"≬\",\n    twoheadleftarrow: \"↞\",\n    twoheadrightarrow: \"↠\",\n    uArr: \"⇑\",\n    uHar: \"⥣\",\n    uacut: \"ú\",\n    uacute: \"ú\",\n    uarr: \"↑\",\n    ubrcy: \"ў\",\n    ubreve: \"ŭ\",\n    ucir: \"û\",\n    ucirc: \"û\",\n    ucy: \"у\",\n    udarr: \"⇅\",\n    udblac: \"ű\",\n    udhar: \"⥮\",\n    ufisht: \"⥾\",\n    ufr: \"𝔲\",\n    ugrav: \"ù\",\n    ugrave: \"ù\",\n    uharl: \"↿\",\n    uharr: \"↾\",\n    uhblk: \"▀\",\n    ulcorn: \"⌜\",\n    ulcorner: \"⌜\",\n    ulcrop: \"⌏\",\n    ultri: \"◸\",\n    umacr: \"ū\",\n    um: \"¨\",\n    uml: \"¨\",\n    uogon: \"ų\",\n    uopf: \"𝕦\",\n    uparrow: \"↑\",\n    updownarrow: \"↕\",\n    upharpoonleft: \"↿\",\n    upharpoonright: \"↾\",\n    uplus: \"⊎\",\n    upsi: \"υ\",\n    upsih: \"ϒ\",\n    upsilon: \"υ\",\n    upuparrows: \"⇈\",\n    urcorn: \"⌝\",\n    urcorner: \"⌝\",\n    urcrop: \"⌎\",\n    uring: \"ů\",\n    urtri: \"◹\",\n    uscr: \"𝓊\",\n    utdot: \"⋰\",\n    utilde: \"ũ\",\n    utri: \"▵\",\n    utrif: \"▴\",\n    uuarr: \"⇈\",\n    uum: \"ü\",\n    uuml: \"ü\",\n    uwangle: \"⦧\",\n    vArr: \"⇕\",\n    vBar: \"⫨\",\n    vBarv: \"⫩\",\n    vDash: \"⊨\",\n    vangrt: \"⦜\",\n    varepsilon: \"ϵ\",\n    varkappa: \"ϰ\",\n    varnothing: \"∅\",\n    varphi: \"ϕ\",\n    varpi: \"ϖ\",\n    varpropto: \"∝\",\n    varr: \"↕\",\n    varrho: \"ϱ\",\n    varsigma: \"ς\",\n    varsubsetneq: \"⊊︀\",\n    varsubsetneqq: \"⫋︀\",\n    varsupsetneq: \"⊋︀\",\n    varsupsetneqq: \"⫌︀\",\n    vartheta: \"ϑ\",\n    vartriangleleft: \"⊲\",\n    vartriangleright: \"⊳\",\n    vcy: \"в\",\n    vdash: \"⊢\",\n    vee: \"∨\",\n    veebar: \"⊻\",\n    veeeq: \"≚\",\n    vellip: \"⋮\",\n    verbar: \"|\",\n    vert: \"|\",\n    vfr: \"𝔳\",\n    vltri: \"⊲\",\n    vnsub: \"⊂⃒\",\n    vnsup: \"⊃⃒\",\n    vopf: \"𝕧\",\n    vprop: \"∝\",\n    vrtri: \"⊳\",\n    vscr: \"𝓋\",\n    vsubnE: \"⫋︀\",\n    vsubne: \"⊊︀\",\n    vsupnE: \"⫌︀\",\n    vsupne: \"⊋︀\",\n    vzigzag: \"⦚\",\n    wcirc: \"ŵ\",\n    wedbar: \"⩟\",\n    wedge: \"∧\",\n    wedgeq: \"≙\",\n    weierp: \"℘\",\n    wfr: \"𝔴\",\n    wopf: \"𝕨\",\n    wp: \"℘\",\n    wr: \"≀\",\n    wreath: \"≀\",\n    wscr: \"𝓌\",\n    xcap: \"⋂\",\n    xcirc: \"◯\",\n    xcup: \"⋃\",\n    xdtri: \"▽\",\n    xfr: \"𝔵\",\n    xhArr: \"⟺\",\n    xharr: \"⟷\",\n    xi: \"ξ\",\n    xlArr: \"⟸\",\n    xlarr: \"⟵\",\n    xmap: \"⟼\",\n    xnis: \"⋻\",\n    xodot: \"⨀\",\n    xopf: \"𝕩\",\n    xoplus: \"⨁\",\n    xotime: \"⨂\",\n    xrArr: \"⟹\",\n    xrarr: \"⟶\",\n    xscr: \"𝓍\",\n    xsqcup: \"⨆\",\n    xuplus: \"⨄\",\n    xutri: \"△\",\n    xvee: \"⋁\",\n    xwedge: \"⋀\",\n    yacut: \"ý\",\n    yacute: \"ý\",\n    yacy: \"я\",\n    ycirc: \"ŷ\",\n    ycy: \"ы\",\n    ye: \"¥\",\n    yen: \"¥\",\n    yfr: \"𝔶\",\n    yicy: \"ї\",\n    yopf: \"𝕪\",\n    yscr: \"𝓎\",\n    yucy: \"ю\",\n    yum: \"ÿ\",\n    yuml: \"ÿ\",\n    zacute: \"ź\",\n    zcaron: \"ž\",\n    zcy: \"з\",\n    zdot: \"ż\",\n    zeetrf: \"ℨ\",\n    zeta: \"ζ\",\n    zfr: \"𝔷\",\n    zhcy: \"ж\",\n    zigrarr: \"⇝\",\n    zopf: \"𝕫\",\n    zscr: \"𝓏\",\n    zwj: \"‍\",\n    zwnj: \"‌\",\n    default: T\n  }),\n      S = {\n    AElig: \"Æ\",\n    AMP: \"&\",\n    Aacute: \"Á\",\n    Acirc: \"Â\",\n    Agrave: \"À\",\n    Aring: \"Å\",\n    Atilde: \"Ã\",\n    Auml: \"Ä\",\n    COPY: \"©\",\n    Ccedil: \"Ç\",\n    ETH: \"Ð\",\n    Eacute: \"É\",\n    Ecirc: \"Ê\",\n    Egrave: \"È\",\n    Euml: \"Ë\",\n    GT: \">\",\n    Iacute: \"Í\",\n    Icirc: \"Î\",\n    Igrave: \"Ì\",\n    Iuml: \"Ï\",\n    LT: \"<\",\n    Ntilde: \"Ñ\",\n    Oacute: \"Ó\",\n    Ocirc: \"Ô\",\n    Ograve: \"Ò\",\n    Oslash: \"Ø\",\n    Otilde: \"Õ\",\n    Ouml: \"Ö\",\n    QUOT: '\"',\n    REG: \"®\",\n    THORN: \"Þ\",\n    Uacute: \"Ú\",\n    Ucirc: \"Û\",\n    Ugrave: \"Ù\",\n    Uuml: \"Ü\",\n    Yacute: \"Ý\",\n    aacute: \"á\",\n    acirc: \"â\",\n    acute: \"´\",\n    aelig: \"æ\",\n    agrave: \"à\",\n    amp: \"&\",\n    aring: \"å\",\n    atilde: \"ã\",\n    auml: \"ä\",\n    brvbar: \"¦\",\n    ccedil: \"ç\",\n    cedil: \"¸\",\n    cent: \"¢\",\n    copy: \"©\",\n    curren: \"¤\",\n    deg: \"°\",\n    divide: \"÷\",\n    eacute: \"é\",\n    ecirc: \"ê\",\n    egrave: \"è\",\n    eth: \"ð\",\n    euml: \"ë\",\n    frac12: \"½\",\n    frac14: \"¼\",\n    frac34: \"¾\",\n    gt: \">\",\n    iacute: \"í\",\n    icirc: \"î\",\n    iexcl: \"¡\",\n    igrave: \"ì\",\n    iquest: \"¿\",\n    iuml: \"ï\",\n    laquo: \"«\",\n    lt: \"<\",\n    macr: \"¯\",\n    micro: \"µ\",\n    middot: \"·\",\n    nbsp: \" \",\n    not: \"¬\",\n    ntilde: \"ñ\",\n    oacute: \"ó\",\n    ocirc: \"ô\",\n    ograve: \"ò\",\n    ordf: \"ª\",\n    ordm: \"º\",\n    oslash: \"ø\",\n    otilde: \"õ\",\n    ouml: \"ö\",\n    para: \"¶\",\n    plusmn: \"±\",\n    pound: \"£\",\n    quot: '\"',\n    raquo: \"»\",\n    reg: \"®\",\n    sect: \"§\",\n    shy: \"­\",\n    sup1: \"¹\",\n    sup2: \"²\",\n    sup3: \"³\",\n    szlig: \"ß\",\n    thorn: \"þ\",\n    times: \"×\",\n    uacute: \"ú\",\n    ucirc: \"û\",\n    ugrave: \"ù\",\n    uml: \"¨\",\n    uuml: \"ü\",\n    yacute: \"ý\",\n    yen: \"¥\",\n    yuml: \"ÿ\"\n  },\n      F = Object.freeze({\n    __proto__: null,\n    AElig: \"Æ\",\n    AMP: \"&\",\n    Aacute: \"Á\",\n    Acirc: \"Â\",\n    Agrave: \"À\",\n    Aring: \"Å\",\n    Atilde: \"Ã\",\n    Auml: \"Ä\",\n    COPY: \"©\",\n    Ccedil: \"Ç\",\n    ETH: \"Ð\",\n    Eacute: \"É\",\n    Ecirc: \"Ê\",\n    Egrave: \"È\",\n    Euml: \"Ë\",\n    GT: \">\",\n    Iacute: \"Í\",\n    Icirc: \"Î\",\n    Igrave: \"Ì\",\n    Iuml: \"Ï\",\n    LT: \"<\",\n    Ntilde: \"Ñ\",\n    Oacute: \"Ó\",\n    Ocirc: \"Ô\",\n    Ograve: \"Ò\",\n    Oslash: \"Ø\",\n    Otilde: \"Õ\",\n    Ouml: \"Ö\",\n    QUOT: '\"',\n    REG: \"®\",\n    THORN: \"Þ\",\n    Uacute: \"Ú\",\n    Ucirc: \"Û\",\n    Ugrave: \"Ù\",\n    Uuml: \"Ü\",\n    Yacute: \"Ý\",\n    aacute: \"á\",\n    acirc: \"â\",\n    acute: \"´\",\n    aelig: \"æ\",\n    agrave: \"à\",\n    amp: \"&\",\n    aring: \"å\",\n    atilde: \"ã\",\n    auml: \"ä\",\n    brvbar: \"¦\",\n    ccedil: \"ç\",\n    cedil: \"¸\",\n    cent: \"¢\",\n    copy: \"©\",\n    curren: \"¤\",\n    deg: \"°\",\n    divide: \"÷\",\n    eacute: \"é\",\n    ecirc: \"ê\",\n    egrave: \"è\",\n    eth: \"ð\",\n    euml: \"ë\",\n    frac12: \"½\",\n    frac14: \"¼\",\n    frac34: \"¾\",\n    gt: \">\",\n    iacute: \"í\",\n    icirc: \"î\",\n    iexcl: \"¡\",\n    igrave: \"ì\",\n    iquest: \"¿\",\n    iuml: \"ï\",\n    laquo: \"«\",\n    lt: \"<\",\n    macr: \"¯\",\n    micro: \"µ\",\n    middot: \"·\",\n    nbsp: \" \",\n    not: \"¬\",\n    ntilde: \"ñ\",\n    oacute: \"ó\",\n    ocirc: \"ô\",\n    ograve: \"ò\",\n    ordf: \"ª\",\n    ordm: \"º\",\n    oslash: \"ø\",\n    otilde: \"õ\",\n    ouml: \"ö\",\n    para: \"¶\",\n    plusmn: \"±\",\n    pound: \"£\",\n    quot: '\"',\n    raquo: \"»\",\n    reg: \"®\",\n    sect: \"§\",\n    shy: \"­\",\n    sup1: \"¹\",\n    sup2: \"²\",\n    sup3: \"³\",\n    szlig: \"ß\",\n    thorn: \"þ\",\n    times: \"×\",\n    uacute: \"ú\",\n    ucirc: \"û\",\n    ugrave: \"ù\",\n    uml: \"¨\",\n    uuml: \"ü\",\n    yacute: \"ý\",\n    yen: \"¥\",\n    yuml: \"ÿ\",\n    default: S\n  }),\n      x = Object.freeze({\n    __proto__: null,\n    default: {\n      0: \"�\",\n      128: \"€\",\n      130: \"‚\",\n      131: \"ƒ\",\n      132: \"„\",\n      133: \"…\",\n      134: \"†\",\n      135: \"‡\",\n      136: \"ˆ\",\n      137: \"‰\",\n      138: \"Š\",\n      139: \"‹\",\n      140: \"Œ\",\n      142: \"Ž\",\n      145: \"‘\",\n      146: \"’\",\n      147: \"“\",\n      148: \"”\",\n      149: \"•\",\n      150: \"–\",\n      151: \"—\",\n      152: \"˜\",\n      153: \"™\",\n      154: \"š\",\n      155: \"›\",\n      156: \"œ\",\n      158: \"ž\",\n      159: \"Ÿ\"\n    }\n  }),\n      q = function (e) {\n    var t = \"string\" == typeof e ? e.charCodeAt(0) : e;\n    return t >= 48 && t <= 57;\n  };\n\n  var N = function (e) {\n    var t = \"string\" == typeof e ? e.charCodeAt(0) : e;\n    return t >= 97 && t <= 102 || t >= 65 && t <= 70 || t >= 48 && t <= 57;\n  };\n\n  var L = function (e) {\n    var t = \"string\" == typeof e ? e.charCodeAt(0) : e;\n    return t >= 97 && t <= 122 || t >= 65 && t <= 90;\n  };\n\n  var B = function (e) {\n    return L(e) || q(e);\n  };\n\n  var P = D(_),\n      O = D(F),\n      R = D(x),\n      I = function (e, t) {\n    var r,\n        n,\n        i = {};\n    t || (t = {});\n\n    for (n in te) r = t[n], i[n] = null == r ? te[n] : r;\n\n    (i.position.indent || i.position.start) && (i.indent = i.position.indent || [], i.position = i.position.start);\n    return function (e, t) {\n      var r,\n          n,\n          i,\n          a,\n          o,\n          u,\n          s,\n          c,\n          l,\n          p,\n          f,\n          h,\n          d,\n          D,\n          g,\n          m,\n          v,\n          b,\n          y = t.additional,\n          E = t.nonTerminated,\n          C = t.text,\n          A = t.reference,\n          w = t.warning,\n          k = t.textContext,\n          T = t.referenceContext,\n          _ = t.warningContext,\n          S = t.position,\n          F = t.indent || [],\n          x = e.length,\n          q = 0,\n          N = -1,\n          L = S.column || 1,\n          I = S.line || 1,\n          te = K,\n          de = [];\n      g = ge(), s = w ? function (e, t) {\n        var r = ge();\n        r.column += t, r.offset += t, w.call(_, me[e], r, e);\n      } : V, q--, x++;\n\n      for (; ++q < x;) if (a === X && (L = F[N] || 1), (a = be(q)) !== z) a === X && (I++, N++, L = 0), a ? (te += a, L++) : ye();else {\n        if ((u = be(q + 1)) === ee || u === X || u === j || u === Y || u === Z || u === z || u === K || y && u === y) {\n          te += a, L++;\n          continue;\n        }\n\n        for (f = h = q + 1, b = h, u !== G ? d = re : (b = ++f, (u = be(b)) === W || u === Q ? (d = ne, b = ++f) : d = ie), r = K, p = K, i = K, D = oe[d], b--; ++b < x && (u = be(b), D(u));) i += u, d === re && U.call(O, i) && (r = i, p = O[i]);\n\n        (n = be(b) === H) && (b++, d === re && U.call(P, i) && (r = i, p = P[i])), v = 1 + b - h, (n || E) && (i ? d === re ? (n && !p ? s(pe, 1) : (r !== i && (b = f + r.length, v = 1 + b - f, n = !1), n || (c = r ? ue : ce, t.attribute ? (u = be(b)) === J ? (s(c, v), p = null) : B(u) ? p = null : s(c, v) : s(c, v))), o = p) : (n || s(se, v), o = parseInt(i, ae[d]), (De = o) >= 55296 && De <= 57343 || De > 1114111 ? (s(he, v), o = M) : o in R ? (s(fe, v), o = R[o]) : (l = K, ve(o) && s(fe, v), o > 65535 && (l += $((o -= 65536) >>> 10 | 55296), o = 56320 | 1023 & o), o = l + $(o))) : d !== re && s(le, v)), o ? (ye(), g = ge(), q = b - 1, L += b - h + 1, de.push(o), (m = ge()).offset++, A && A.call(T, o, {\n          start: g,\n          end: m\n        }, e.slice(h - 1, b)), g = m) : (i = e.slice(h - 1, b), te += i, L += i.length, q = b - 1);\n      }\n\n      var De;\n      return de.join(K);\n\n      function ge() {\n        return {\n          line: I,\n          column: L,\n          offset: q + (S.offset || 0)\n        };\n      }\n\n      function be(t) {\n        return e.charAt(t);\n      }\n\n      function ye() {\n        te && (de.push(te), C && C.call(k, te, {\n          start: g,\n          end: ge()\n        }), te = K);\n      }\n    }(e, i);\n  },\n      U = {}.hasOwnProperty,\n      $ = String.fromCharCode,\n      V = Function.prototype,\n      M = \"�\",\n      j = \"\\f\",\n      z = \"&\",\n      G = \"#\",\n      H = \";\",\n      X = \"\\n\",\n      W = \"x\",\n      Q = \"X\",\n      Y = \" \",\n      Z = \"<\",\n      J = \"=\",\n      K = \"\",\n      ee = \"\\t\",\n      te = {\n    warning: null,\n    reference: null,\n    text: null,\n    warningContext: null,\n    referenceContext: null,\n    textContext: null,\n    position: {},\n    additional: null,\n    attribute: !1,\n    nonTerminated: !0\n  },\n      re = \"named\",\n      ne = \"hexadecimal\",\n      ie = \"decimal\",\n      ae = {};\n\n  ae[ne] = 16, ae[ie] = 10;\n  var oe = {};\n  oe[re] = B, oe[ie] = q, oe[ne] = N;\n  var ue = 1,\n      se = 2,\n      ce = 3,\n      le = 4,\n      pe = 5,\n      fe = 6,\n      he = 7,\n      de = \"Numeric character references\",\n      De = \" must be terminated by a semicolon\",\n      ge = \" cannot be empty\",\n      me = {};\n\n  function ve(e) {\n    return e >= 1 && e <= 8 || 11 === e || e >= 13 && e <= 31 || e >= 127 && e <= 159 || e >= 64976 && e <= 65007 || 65535 == (65535 & e) || 65534 == (65535 & e);\n  }\n\n  me[ue] = \"Named character references\" + De, me[se] = de + De, me[ce] = \"Named character references\" + ge, me[le] = de + ge, me[pe] = \"Named character references must be known\", me[fe] = de + \" cannot be disallowed\", me[he] = de + \" cannot be outside the permissible Unicode range\";\n\n  var be = function (e) {\n    return n.raw = function (e, n, i) {\n      return I(e, p(i, {\n        position: t(n),\n        warning: r\n      }));\n    }, n;\n\n    function t(t) {\n      for (var r = e.offset, n = t.line, i = []; ++n && n in r;) i.push((r[n] || 0) + 1);\n\n      return {\n        start: t,\n        indent: i\n      };\n    }\n\n    function r(t, r, n) {\n      3 !== n && e.file.message(t, r);\n    }\n\n    function n(n, i, a) {\n      I(n, {\n        position: t(i),\n        warning: r,\n        text: a,\n        reference: a,\n        textContext: e,\n        referenceContext: e\n      });\n    }\n  };\n\n  var ye = function (e) {\n    return function (t, r) {\n      var n,\n          i,\n          a,\n          o,\n          u,\n          s,\n          c = this,\n          l = c.offset,\n          p = [],\n          f = c[e + \"Methods\"],\n          h = c[e + \"Tokenizers\"],\n          d = r.line,\n          D = r.column;\n      if (!t) return p;\n      b.now = m, b.file = c.file, g(\"\");\n\n      for (; t;) {\n        for (n = -1, i = f.length, u = !1; ++n < i && (o = f[n], !(a = h[o]) || a.onlyAtStart && !c.atStart || a.notInList && c.inList || a.notInBlock && c.inBlock || a.notInLink && c.inLink || (s = t.length, a.apply(c, [b, t]), !(u = s !== t.length))););\n\n        u || c.file.fail(new Error(\"Infinite loop\"), b.now());\n      }\n\n      return c.eof = m(), p;\n\n      function g(e) {\n        for (var t = -1, r = e.indexOf(\"\\n\"); -1 !== r;) d++, t = r, r = e.indexOf(\"\\n\", r + 1);\n\n        -1 === t ? D += e.length : D = e.length - t, d in l && (-1 !== t ? D += l[d] : D <= l[d] && (D = l[d] + 1));\n      }\n\n      function m() {\n        var e = {\n          line: d,\n          column: D\n        };\n        return e.offset = c.toOffset(e), e;\n      }\n\n      function v(e) {\n        this.start = e, this.end = m();\n      }\n\n      function b(e) {\n        var r,\n            n = function () {\n          var e = [],\n              t = d + 1;\n          return function () {\n            for (var r = d + 1; t < r;) e.push((l[t] || 0) + 1), t++;\n\n            return e;\n          };\n        }(),\n            i = (r = m(), function (e, t) {\n          var n = e.position,\n              i = n ? n.start : r,\n              a = [],\n              o = n && n.end.line,\n              u = r.line;\n\n          if (e.position = new v(i), n && t && n.indent) {\n            if (a = n.indent, o < u) {\n              for (; ++o < u;) a.push((l[o] || 0) + 1);\n\n              a.push(r.column);\n            }\n\n            t = a.concat(t);\n          }\n\n          return e.position.indent = t || [], e;\n        }),\n            a = m();\n\n        return function (e) {\n          t.substring(0, e.length) !== e && c.file.fail(new Error(\"Incorrectly eaten value: please report this warning on http://git.io/vg5Ft\"), m());\n        }(e), o.reset = u, u.test = s, o.test = s, t = t.substring(e.length), g(e), n = n(), o;\n\n        function o(e, t) {\n          return i(function (e, t) {\n            var r = t ? t.children : p,\n                n = r[r.length - 1];\n            return n && e.type === n.type && e.type in Ee && Ce(n) && Ce(e) && (e = Ee[e.type].call(c, n, e)), e !== n && r.push(e), c.atStart && 0 !== p.length && c.exitStart(), e;\n          }(i(e), t), n);\n        }\n\n        function u() {\n          var r = o.apply(null, arguments);\n          return d = a.line, D = a.column, t = e + t, r;\n        }\n\n        function s() {\n          var r = i({});\n          return d = a.line, D = a.column, t = e + t, r.position;\n        }\n      }\n    };\n  },\n      Ee = {\n    text: function (e, t) {\n      return e.value += t.value, e;\n    },\n    blockquote: function (e, t) {\n      if (this.options.commonmark) return t;\n      return e.children = e.children.concat(t.children), e;\n    }\n  };\n\n  function Ce(e) {\n    var t, r;\n    return \"text\" !== e.type || !e.position || (t = e.position.start, r = e.position.end, t.line !== r.line || r.column - t.column === e.value.length);\n  }\n\n  var Ae = _e,\n      we = [\"\\\\\", \"`\", \"*\", \"{\", \"}\", \"[\", \"]\", \"(\", \")\", \"#\", \"+\", \"-\", \".\", \"!\", \"_\", \">\"],\n      ke = we.concat([\"~\", \"|\"]),\n      Te = ke.concat([\"\\n\", '\"', \"$\", \"%\", \"&\", \"'\", \",\", \"/\", \":\", \";\", \"<\", \"=\", \"?\", \"@\", \"^\"]);\n\n  function _e(e) {\n    var t = e || {};\n    return t.commonmark ? Te : t.gfm ? ke : we;\n  }\n\n  _e.default = we, _e.gfm = ke, _e.commonmark = Te;\n\n  var Se = {\n    position: !0,\n    gfm: !0,\n    commonmark: !1,\n    footnotes: !1,\n    pedantic: !1,\n    blocks: D(Object.freeze({\n      __proto__: null,\n      default: [\"address\", \"article\", \"aside\", \"base\", \"basefont\", \"blockquote\", \"body\", \"caption\", \"center\", \"col\", \"colgroup\", \"dd\", \"details\", \"dialog\", \"dir\", \"div\", \"dl\", \"dt\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"form\", \"frame\", \"frameset\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"iframe\", \"legend\", \"li\", \"link\", \"main\", \"menu\", \"menuitem\", \"meta\", \"nav\", \"noframes\", \"ol\", \"optgroup\", \"option\", \"p\", \"param\", \"pre\", \"section\", \"source\", \"title\", \"summary\", \"table\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"title\", \"tr\", \"track\", \"ul\"]\n    }))\n  },\n      Fe = function (e) {\n    var r,\n        n,\n        i = this.options;\n    if (null == e) e = {};else {\n      if (\"object\" !== t(e)) throw new Error(\"Invalid value `\" + e + \"` for setting `options`\");\n      e = p(e);\n    }\n\n    for (r in Se) {\n      if (null == (n = e[r]) && (n = i[r]), \"blocks\" !== r && \"boolean\" != typeof n || \"blocks\" === r && \"object\" !== t(n)) throw new Error(\"Invalid value `\" + n + \"` for setting `options.\" + r + \"`\");\n      e[r] = n;\n    }\n\n    return this.options = e, this.escape = Ae(e), this;\n  };\n\n  var xe = function (e, t, r, n) {\n    \"function\" == typeof t && (n = r, r = t, t = null);\n\n    function i(e, a, o) {\n      var u;\n      return a = a || (o ? 0 : null), t && e.type !== t || (u = r(e, a, o || null)), e.children && !1 !== u ? function (e, t) {\n        var r,\n            a = n ? -1 : 1,\n            o = e.length,\n            u = (n ? o : -1) + a;\n\n        for (; u > -1 && u < o;) {\n          if ((r = e[u]) && !1 === i(r, u, t)) return !1;\n          u += a;\n        }\n\n        return !0;\n      }(e.children, e) : u;\n    }\n\n    i(e);\n  };\n\n  var qe = function (e, t) {\n    return xe(e, t ? Ne : Le), e;\n  };\n\n  function Ne(e) {\n    delete e.position;\n  }\n\n  function Le(e) {\n    e.position = void 0;\n  }\n\n  var Be = function () {\n    var e,\n        t = String(this.file),\n        r = {\n      line: 1,\n      column: 1,\n      offset: 0\n    },\n        n = p(r);\n    65279 === (t = t.replace(Oe, Pe)).charCodeAt(0) && (t = t.slice(1), n.column++, n.offset++);\n    e = {\n      type: \"root\",\n      children: this.tokenizeBlock(t, n),\n      position: {\n        start: r,\n        end: this.eof || p(r)\n      }\n    }, this.options.position || qe(e, !0);\n    return e;\n  },\n      Pe = \"\\n\",\n      Oe = /\\r\\n|\\r/g;\n\n  var Re = function (e) {\n    return Ue.test(\"number\" == typeof e ? Ie(e) : e.charAt(0));\n  },\n      Ie = String.fromCharCode,\n      Ue = /\\s/;\n\n  var $e = function (e, t, r) {\n    var n,\n        i,\n        a,\n        o,\n        u = t.charAt(0);\n    if (\"\\n\" !== u) return;\n    if (r) return !0;\n    o = 1, n = t.length, i = u, a = \"\";\n\n    for (; o < n && (u = t.charAt(o), Re(u));) a += u, \"\\n\" === u && (i += a, a = \"\"), o++;\n\n    e(i);\n  }\n  /*!\n     * repeat-string <https://github.com/jonschlinkert/repeat-string>\n     *\n     * Copyright (c) 2014-2015, Jon Schlinkert.\n     * Licensed under the MIT License.\n     */\n  ;\n\n  var Ve,\n      Me = \"\",\n      je = function (e, t) {\n    if (\"string\" != typeof e) throw new TypeError(\"expected a string\");\n    if (1 === t) return e;\n    if (2 === t) return e + e;\n    var r = e.length * t;\n    if (Ve !== e || void 0 === Ve) Ve = e, Me = \"\";else if (Me.length >= r) return Me.substr(0, r);\n\n    for (; r > Me.length && t > 1;) 1 & t && (Me += e), t >>= 1, e += e;\n\n    return Me = (Me += e).substr(0, r);\n  };\n\n  var ze = function (e) {\n    var t = String(e),\n        r = t.length;\n\n    for (; t.charAt(--r) === Ge;);\n\n    return t.slice(0, r + 1);\n  },\n      Ge = \"\\n\";\n\n  var He = function (e, t, r) {\n    var n,\n        i,\n        a,\n        o = -1,\n        u = t.length,\n        s = \"\",\n        c = \"\",\n        l = \"\",\n        p = \"\";\n\n    for (; ++o < u;) if (n = t.charAt(o), a) {\n      if (a = !1, s += l, c += p, l = \"\", p = \"\", n === Xe) l = n, p = n;else for (s += n, c += n; ++o < u;) {\n        if (!(n = t.charAt(o)) || n === Xe) {\n          p = n, l = n;\n          break;\n        }\n\n        s += n, c += n;\n      }\n    } else if (n === Qe && t.charAt(o + 1) === n && t.charAt(o + 2) === n && t.charAt(o + 3) === n) l += Ye, o += 3, a = !0;else if (n === We) l += n, a = !0;else {\n      for (i = \"\"; n === We || n === Qe;) i += n, n = t.charAt(++o);\n\n      if (n !== Xe) break;\n      l += i + n, p += n;\n    }\n\n    if (c) return !!r || e(s)({\n      type: \"code\",\n      lang: null,\n      value: ze(c)\n    });\n  },\n      Xe = \"\\n\",\n      We = \"\\t\",\n      Qe = \" \",\n      Ye = je(Qe, 4);\n\n  var Ze = function (e, t, r) {\n    var n,\n        i,\n        a,\n        o,\n        u,\n        s,\n        c,\n        l,\n        p,\n        f,\n        h,\n        d = this.options,\n        D = t.length + 1,\n        g = 0,\n        m = \"\";\n    if (!d.gfm) return;\n\n    for (; g < D && ((a = t.charAt(g)) === et || a === Ke);) m += a, g++;\n\n    if (f = g, (a = t.charAt(g)) !== tt && a !== rt) return;\n    g++, i = a, n = 1, m += a;\n\n    for (; g < D && (a = t.charAt(g)) === i;) m += a, n++, g++;\n\n    if (n < nt) return;\n\n    for (; g < D && ((a = t.charAt(g)) === et || a === Ke);) m += a, g++;\n\n    o = \"\", u = \"\";\n\n    for (; g < D && (a = t.charAt(g)) !== Je && a !== tt && a !== rt;) a === et || a === Ke ? u += a : (o += u + a, u = \"\"), g++;\n\n    if ((a = t.charAt(g)) && a !== Je) return;\n    if (r) return !0;\n    (h = e.now()).column += m.length, h.offset += m.length, m += o, o = this.decode.raw(this.unescape(o), h), u && (m += u);\n    u = \"\", l = \"\", p = \"\", s = \"\", c = \"\";\n\n    for (; g < D;) if (a = t.charAt(g), s += l, c += p, l = \"\", p = \"\", a === Je) {\n      for (s ? (l += a, p += a) : m += a, u = \"\", g++; g < D && (a = t.charAt(g)) === et;) u += a, g++;\n\n      if (l += u, p += u.slice(f), !(u.length >= it)) {\n        for (u = \"\"; g < D && (a = t.charAt(g)) === i;) u += a, g++;\n\n        if (l += u, p += u, !(u.length < n)) {\n          for (u = \"\"; g < D && ((a = t.charAt(g)) === et || a === Ke);) l += a, p += a, g++;\n\n          if (!a || a === Je) break;\n        }\n      }\n    } else s += a, p += a, g++;\n\n    return e(m += s + l)({\n      type: \"code\",\n      lang: o || null,\n      value: ze(c)\n    });\n  },\n      Je = \"\\n\",\n      Ke = \"\\t\",\n      et = \" \",\n      tt = \"~\",\n      rt = \"`\",\n      nt = 3,\n      it = 4;\n\n  var at = d(function (e, t) {\n    (t = e.exports = function (e) {\n      return e.replace(/^\\s*|\\s*$/g, \"\");\n    }).left = function (e) {\n      return e.replace(/^\\s*/, \"\");\n    }, t.right = function (e) {\n      return e.replace(/\\s*$/, \"\");\n    };\n  }),\n      ot = (at.left, at.right, function (e, t, r, n) {\n    var i,\n        a,\n        o,\n        u,\n        s,\n        c,\n        l = [\"pedantic\", \"commonmark\"],\n        p = l.length,\n        f = e.length,\n        h = -1;\n\n    for (; ++h < f;) {\n      for (i = e[h], a = i[1] || {}, o = i[0], u = -1, c = !1; ++u < p;) if (void 0 !== a[s = l[u]] && a[s] !== r.options[s]) {\n        c = !0;\n        break;\n      }\n\n      if (!c && t[o].apply(r, n)) return !0;\n    }\n\n    return !1;\n  });\n\n  var ut = function (e, t, r) {\n    var n,\n        i,\n        a,\n        o,\n        u,\n        s,\n        c,\n        l,\n        p,\n        f = this.offset,\n        h = this.blockTokenizers,\n        d = this.interruptBlockquote,\n        D = e.now(),\n        g = D.line,\n        m = t.length,\n        v = [],\n        b = [],\n        y = [],\n        E = 0;\n\n    for (; E < m && ((i = t.charAt(E)) === lt || i === ct);) E++;\n\n    if (t.charAt(E) !== pt) return;\n    if (r) return !0;\n    E = 0;\n\n    for (; E < m;) {\n      for (o = t.indexOf(st, E), c = E, l = !1, -1 === o && (o = m); E < m && ((i = t.charAt(E)) === lt || i === ct);) E++;\n\n      if (t.charAt(E) === pt ? (E++, l = !0, t.charAt(E) === lt && E++) : E = c, u = t.slice(E, o), !l && !at(u)) {\n        E = c;\n        break;\n      }\n\n      if (!l && (a = t.slice(E), ot(d, h, this, [e, a, !0]))) break;\n      s = c === E ? u : t.slice(c, o), y.push(E - c), v.push(s), b.push(u), E = o + 1;\n    }\n\n    E = -1, m = y.length, n = e(v.join(st));\n\n    for (; ++E < m;) f[g] = (f[g] || 0) + y[E], g++;\n\n    return p = this.enterBlock(), b = this.tokenizeBlock(b.join(st), D), p(), n({\n      type: \"blockquote\",\n      children: b\n    });\n  },\n      st = \"\\n\",\n      ct = \"\\t\",\n      lt = \" \",\n      pt = \">\";\n\n  var ft = function (e, t, r) {\n    var n,\n        i,\n        a,\n        o = this.options,\n        u = t.length + 1,\n        s = -1,\n        c = e.now(),\n        l = \"\",\n        p = \"\";\n\n    for (; ++s < u;) {\n      if ((n = t.charAt(s)) !== Dt && n !== dt) {\n        s--;\n        break;\n      }\n\n      l += n;\n    }\n\n    a = 0;\n\n    for (; ++s <= u;) {\n      if ((n = t.charAt(s)) !== gt) {\n        s--;\n        break;\n      }\n\n      l += n, a++;\n    }\n\n    if (a > mt) return;\n    if (!a || !o.pedantic && t.charAt(s + 1) === gt) return;\n    u = t.length + 1, i = \"\";\n\n    for (; ++s < u;) {\n      if ((n = t.charAt(s)) !== Dt && n !== dt) {\n        s--;\n        break;\n      }\n\n      i += n;\n    }\n\n    if (!o.pedantic && 0 === i.length && n && n !== ht) return;\n    if (r) return !0;\n    l += i, i = \"\", p = \"\";\n\n    for (; ++s < u && (n = t.charAt(s)) && n !== ht;) if (n === Dt || n === dt || n === gt) {\n      for (; n === Dt || n === dt;) i += n, n = t.charAt(++s);\n\n      for (; n === gt;) i += n, n = t.charAt(++s);\n\n      for (; n === Dt || n === dt;) i += n, n = t.charAt(++s);\n\n      s--;\n    } else p += i + n, i = \"\";\n\n    return c.column += l.length, c.offset += l.length, e(l += p + i)({\n      type: \"heading\",\n      depth: a,\n      children: this.tokenizeInline(p, c)\n    });\n  },\n      ht = \"\\n\",\n      dt = \"\\t\",\n      Dt = \" \",\n      gt = \"#\",\n      mt = 6;\n\n  var vt = function (e, t, r) {\n    var n,\n        i,\n        a,\n        o,\n        u = -1,\n        s = t.length + 1,\n        c = \"\";\n\n    for (; ++u < s && ((n = t.charAt(u)) === yt || n === Et);) c += n;\n\n    if (n !== Ct && n !== wt && n !== At) return;\n    i = n, c += n, a = 1, o = \"\";\n\n    for (; ++u < s;) if ((n = t.charAt(u)) === i) a++, c += o + i, o = \"\";else {\n      if (n !== Et) return a >= kt && (!n || n === bt) ? (c += o, !!r || e(c)({\n        type: \"thematicBreak\"\n      })) : void 0;\n      o += n;\n    }\n  },\n      bt = \"\\n\",\n      yt = \"\\t\",\n      Et = \" \",\n      Ct = \"*\",\n      At = \"_\",\n      wt = \"-\",\n      kt = 3;\n\n  var Tt = function (e) {\n    var t,\n        r = 0,\n        n = 0,\n        i = e.charAt(r),\n        a = {};\n\n    for (; (i in _t);) t = _t[i], n += t, t > 1 && (n = Math.floor(n / t) * t), a[n] = r, i = e.charAt(++r);\n\n    return {\n      indent: n,\n      stops: a\n    };\n  },\n      _t = {\n    \" \": 1,\n    \"\\t\": 4\n  };\n\n  var St = function (e, t) {\n    var r,\n        n,\n        i,\n        a,\n        o = e.split(xt),\n        u = o.length + 1,\n        s = 1 / 0,\n        c = [];\n    o.unshift(je(Ft, t) + \"!\");\n\n    for (; u--;) if (n = Tt(o[u]), c[u] = n.stops, 0 !== at(o[u]).length) {\n      if (!n.indent) {\n        s = 1 / 0;\n        break;\n      }\n\n      n.indent > 0 && n.indent < s && (s = n.indent);\n    }\n\n    if (s !== 1 / 0) for (u = o.length; u--;) {\n      for (i = c[u], r = s; r && !(r in i);) r--;\n\n      a = 0 !== at(o[u]).length && s && r !== s ? qt : \"\", o[u] = a + o[u].slice(r in i ? i[r] + 1 : 0);\n    }\n    return o.shift(), o.join(xt);\n  },\n      Ft = \" \",\n      xt = \"\\n\",\n      qt = \"\\t\";\n\n  var Nt = function (e, t, r) {\n    var n,\n        i,\n        a,\n        o,\n        u,\n        s,\n        c,\n        l,\n        p,\n        f,\n        h,\n        d,\n        D,\n        g,\n        m,\n        v,\n        b,\n        y,\n        E,\n        C,\n        A,\n        w,\n        k,\n        T,\n        _ = this.options.commonmark,\n        S = this.options.pedantic,\n        F = this.blockTokenizers,\n        x = this.interruptList,\n        N = 0,\n        L = t.length,\n        B = null,\n        P = 0;\n\n    for (; N < L;) {\n      if ((o = t.charAt(N)) === It) P += $t - P % $t;else {\n        if (o !== Ot) break;\n        P++;\n      }\n      N++;\n    }\n\n    if (P >= $t) return;\n    if (o = t.charAt(N), n = _ ? Wt : Xt, !0 === Ht[o]) u = o, a = !1;else {\n      for (a = !0, i = \"\"; N < L && (o = t.charAt(N), q(o));) i += o, N++;\n\n      if (o = t.charAt(N), !i || !0 !== n[o]) return;\n      B = parseInt(i, 10), u = o;\n    }\n    if ((o = t.charAt(++N)) !== Ot && o !== It) return;\n    if (r) return !0;\n    N = 0, g = [], m = [], v = [];\n\n    for (; N < L;) {\n      for (s = t.indexOf(Rt, N), c = N, l = !1, T = !1, -1 === s && (s = L), k = N + $t, P = 0; N < L;) {\n        if ((o = t.charAt(N)) === It) P += $t - P % $t;else {\n          if (o !== Ot) break;\n          P++;\n        }\n        N++;\n      }\n\n      if (P >= $t && (T = !0), b && P >= b.indent && (T = !0), o = t.charAt(N), p = null, !T) {\n        if (!0 === Ht[o]) p = o, N++, P++;else {\n          for (i = \"\"; N < L && (o = t.charAt(N), q(o));) i += o, N++;\n\n          o = t.charAt(N), N++, i && !0 === n[o] && (p = o, P += i.length + 1);\n        }\n        if (p) if ((o = t.charAt(N)) === It) P += $t - P % $t, N++;else if (o === Ot) {\n          for (k = N + $t; N < k && t.charAt(N) === Ot;) N++, P++;\n\n          N === k && t.charAt(N) === Ot && (N -= $t - 1, P -= $t - 1);\n        } else o !== Rt && \"\" !== o && (p = null);\n      }\n\n      if (p) {\n        if (!S && u !== p) break;\n        l = !0;\n      } else _ || T || t.charAt(c) !== Ot ? _ && b && (T = P >= b.indent || P > $t) : T = !0, l = !1, N = c;\n\n      if (h = t.slice(c, s), f = c === N ? h : t.slice(N, s), (p === Lt || p === Bt || p === Pt) && F.thematicBreak.call(this, e, h, !0)) break;\n      if (d = D, D = !at(f).length, T && b) b.value = b.value.concat(v, h), m = m.concat(v, h), v = [];else if (l) 0 !== v.length && (b.value.push(\"\"), b.trail = v.concat()), b = {\n        value: [h],\n        indent: P,\n        trail: []\n      }, g.push(b), m = m.concat(v, h), v = [];else if (D) {\n        if (d) break;\n        v.push(h);\n      } else {\n        if (d) break;\n        if (ot(x, F, this, [e, h, !0])) break;\n        b.value = b.value.concat(v, h), m = m.concat(v, h), v = [];\n      }\n      N = s + 1;\n    }\n\n    A = e(m.join(Rt)).reset({\n      type: \"list\",\n      ordered: a,\n      start: B,\n      loose: null,\n      children: []\n    }), y = this.enterList(), E = this.enterBlock(), C = !1, N = -1, L = g.length;\n\n    for (; ++N < L;) b = g[N].value.join(Rt), w = e.now(), (b = e(b)(Qt(this, b, w), A)).loose && (C = !0), b = g[N].trail.join(Rt), N !== L - 1 && (b += Rt), e(b);\n\n    return y(), E(), A.loose = C, A;\n  },\n      Lt = \"*\",\n      Bt = \"_\",\n      Pt = \"-\",\n      Ot = \" \",\n      Rt = \"\\n\",\n      It = \"\\t\",\n      Ut = \"x\",\n      $t = 4,\n      Vt = /\\n\\n(?!\\s*$)/,\n      Mt = /^\\[([ \\t]|x|X)][ \\t]/,\n      jt = /^([ \\t]*)([*+-]|\\d+[.)])( {1,4}(?! )| |\\t|$|(?=\\n))([^\\n]*)/,\n      zt = /^([ \\t]*)([*+-]|\\d+[.)])([ \\t]+)/,\n      Gt = /^( {1,4}|\\t)?/gm,\n      Ht = {};\n\n  Ht[Lt] = !0, Ht[\"+\"] = !0, Ht[Pt] = !0;\n  var Xt = {\n    \".\": !0\n  },\n      Wt = {};\n\n  function Qt(e, t, r) {\n    var n,\n        i,\n        a = e.offset,\n        o = null;\n    return t = (e.options.pedantic ? Yt : Zt).apply(null, arguments), e.options.gfm && (n = t.match(Mt)) && (i = n[0].length, o = n[1].toLowerCase() === Ut, a[r.line] += i, t = t.slice(i)), {\n      type: \"listItem\",\n      loose: Vt.test(t) || t.charAt(t.length - 1) === Rt,\n      checked: o,\n      children: e.tokenizeBlock(t, r)\n    };\n  }\n\n  function Yt(e, t, r) {\n    var n = e.offset,\n        i = r.line;\n    return t = t.replace(zt, a), i = r.line, t.replace(Gt, a);\n\n    function a(e) {\n      return n[i] = (n[i] || 0) + e.length, i++, \"\";\n    }\n  }\n\n  function Zt(e, t, r) {\n    var n,\n        i,\n        a,\n        o,\n        u,\n        s,\n        c,\n        l = e.offset,\n        p = r.line;\n\n    for (o = (t = t.replace(jt, function (e, t, r, o, u) {\n      i = t + r + o, a = u, Number(r) < 10 && i.length % 2 == 1 && (r = Ot + r);\n      return (n = t + je(Ot, r.length) + o) + a;\n    })).split(Rt), (u = St(t, Tt(n).indent).split(Rt))[0] = a, l[p] = (l[p] || 0) + i.length, p++, s = 0, c = o.length; ++s < c;) l[p] = (l[p] || 0) + o[s].length - u[s].length, p++;\n\n    return u.join(Rt);\n  }\n\n  Wt[\".\"] = !0, Wt[\")\"] = !0;\n\n  var Jt = function (e, t, r) {\n    var n,\n        i,\n        a,\n        o,\n        u,\n        s = e.now(),\n        c = t.length,\n        l = -1,\n        p = \"\";\n\n    for (; ++l < c;) {\n      if ((a = t.charAt(l)) !== tr || l >= rr) {\n        l--;\n        break;\n      }\n\n      p += a;\n    }\n\n    n = \"\", i = \"\";\n\n    for (; ++l < c;) {\n      if ((a = t.charAt(l)) === Kt) {\n        l--;\n        break;\n      }\n\n      a === tr || a === er ? i += a : (n += i + a, i = \"\");\n    }\n\n    if (s.column += p.length, s.offset += p.length, p += n + i, a = t.charAt(++l), o = t.charAt(++l), a !== Kt || !nr[o]) return;\n    p += a, i = o, u = nr[o];\n\n    for (; ++l < c;) {\n      if ((a = t.charAt(l)) !== o) {\n        if (a !== Kt) return;\n        l--;\n        break;\n      }\n\n      i += a;\n    }\n\n    if (r) return !0;\n    return e(p + i)({\n      type: \"heading\",\n      depth: u,\n      children: this.tokenizeInline(n, s)\n    });\n  },\n      Kt = \"\\n\",\n      er = \"\\t\",\n      tr = \" \",\n      rr = 3,\n      nr = {};\n\n  nr[\"=\"] = 1, nr[\"-\"] = 2;\n\n  var ir = \"<[A-Za-z][A-Za-z0-9\\\\-]*(?:\\\\s+[a-zA-Z_:][a-zA-Z0-9:._-]*(?:\\\\s*=\\\\s*(?:[^\\\"'=<>`\\\\u0000-\\\\u0020]+|'[^']*'|\\\"[^\\\"]*\\\"))?)*\\\\s*\\\\/?>\",\n      ar = \"<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>\",\n      or = {\n    openCloseTag: new RegExp(\"^(?:\" + ir + \"|\" + ar + \")\"),\n    tag: new RegExp(\"^(?:\" + ir + \"|\" + ar + \"|\\x3c!----\\x3e|\\x3c!--(?:-?[^>-])(?:-?[^-])*--\\x3e|<[?].*?[?]>|<![A-Za-z]+\\\\s+[^>]*>|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>)\")\n  },\n      ur = or.openCloseTag,\n      sr = function (e, t, r) {\n    var n,\n        i,\n        a,\n        o,\n        u,\n        s,\n        c,\n        l = this.options.blocks,\n        p = t.length,\n        f = 0,\n        h = [[/^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, !0], [/^<!--/, /-->/, !0], [/^<\\?/, /\\?>/, !0], [/^<![A-Za-z]/, />/, !0], [/^<!\\[CDATA\\[/, /\\]\\]>/, !0], [new RegExp(\"^</?(\" + l.join(\"|\") + \")(?=(\\\\s|/?>|$))\", \"i\"), /^$/, !0], [new RegExp(ur.source + \"\\\\s*$\"), /^$/, !1]];\n\n    for (; f < p && ((o = t.charAt(f)) === cr || o === lr);) f++;\n\n    if (t.charAt(f) !== fr) return;\n    n = -1 === (n = t.indexOf(pr, f + 1)) ? p : n, i = t.slice(f, n), a = -1, u = h.length;\n\n    for (; ++a < u;) if (h[a][0].test(i)) {\n      s = h[a];\n      break;\n    }\n\n    if (!s) return;\n    if (r) return s[2];\n    if (f = n, !s[1].test(i)) for (; f < p;) {\n      if (n = -1 === (n = t.indexOf(pr, f + 1)) ? p : n, i = t.slice(f + 1, n), s[1].test(i)) {\n        i && (f = n);\n        break;\n      }\n\n      f = n;\n    }\n    return c = t.slice(0, f), e(c)({\n      type: \"html\",\n      value: c\n    });\n  },\n      cr = \"\\t\",\n      lr = \" \",\n      pr = \"\\n\",\n      fr = \"<\";\n\n  var hr = function (e) {\n    return String(e).replace(/\\s+/g, \" \");\n  };\n\n  var dr = function (e) {\n    return hr(e).toLowerCase();\n  };\n\n  var Dr = kr;\n  kr.notInList = !0, kr.notInBlock = !0;\n  var gr = \"\\\\\",\n      mr = \"\\n\",\n      vr = \"\\t\",\n      br = \" \",\n      yr = \"[\",\n      Er = \"]\",\n      Cr = \"^\",\n      Ar = \":\",\n      wr = /^( {4}|\\t)?/gm;\n\n  function kr(e, t, r) {\n    var n,\n        i,\n        a,\n        o,\n        u,\n        s,\n        c,\n        l,\n        p,\n        f,\n        h,\n        d,\n        D = this.offset;\n\n    if (this.options.footnotes) {\n      for (n = 0, i = t.length, a = \"\", o = e.now(), u = o.line; n < i && (p = t.charAt(n), Re(p));) a += p, n++;\n\n      if (t.charAt(n) === yr && t.charAt(n + 1) === Cr) {\n        for (n = (a += yr + Cr).length, c = \"\"; n < i && (p = t.charAt(n)) !== Er;) p === gr && (c += p, n++, p = t.charAt(n)), c += p, n++;\n\n        if (c && t.charAt(n) === Er && t.charAt(n + 1) === Ar) {\n          if (r) return !0;\n\n          for (f = dr(c), n = (a += c + Er + Ar).length; n < i && ((p = t.charAt(n)) === vr || p === br);) a += p, n++;\n\n          for (o.column += a.length, o.offset += a.length, c = \"\", s = \"\", l = \"\"; n < i;) {\n            if ((p = t.charAt(n)) === mr) {\n              for (l = p, n++; n < i && (p = t.charAt(n)) === mr;) l += p, n++;\n\n              for (c += l, l = \"\"; n < i && (p = t.charAt(n)) === br;) l += p, n++;\n\n              if (0 === l.length) break;\n              c += l;\n            }\n\n            c && (s += c, c = \"\"), s += p, n++;\n          }\n\n          return a += s, s = s.replace(wr, function (e) {\n            return D[u] = (D[u] || 0) + e.length, u++, \"\";\n          }), h = e(a), d = this.enterBlock(), s = this.tokenizeBlock(s, o), d(), h({\n            type: \"footnoteDefinition\",\n            identifier: f,\n            children: s\n          });\n        }\n      }\n    }\n  }\n\n  var Tr = $r;\n  $r.notInList = !0, $r.notInBlock = !0;\n  var _r = '\"',\n      Sr = \"'\",\n      Fr = \"\\\\\",\n      xr = \"\\n\",\n      qr = \"\\t\",\n      Nr = \" \",\n      Lr = \"[\",\n      Br = \"]\",\n      Pr = \"(\",\n      Or = \")\",\n      Rr = \":\",\n      Ir = \"<\",\n      Ur = \">\";\n\n  function $r(e, t, r) {\n    for (var n, i, a, o, u, s, c, l, p = this.options.commonmark, f = 0, h = t.length, d = \"\"; f < h && ((o = t.charAt(f)) === Nr || o === qr);) d += o, f++;\n\n    if ((o = t.charAt(f)) === Lr) {\n      for (f++, d += o, a = \"\"; f < h && (o = t.charAt(f)) !== Br;) o === Fr && (a += o, f++, o = t.charAt(f)), a += o, f++;\n\n      if (a && t.charAt(f) === Br && t.charAt(f + 1) === Rr) {\n        for (s = a, f = (d += a + Br + Rr).length, a = \"\"; f < h && ((o = t.charAt(f)) === qr || o === Nr || o === xr);) d += o, f++;\n\n        if (a = \"\", n = d, (o = t.charAt(f)) === Ir) {\n          for (f++; f < h && Vr(o = t.charAt(f));) a += o, f++;\n\n          if ((o = t.charAt(f)) === Vr.delimiter) d += Ir + a + o, f++;else {\n            if (p) return;\n            f -= a.length + 1, a = \"\";\n          }\n        }\n\n        if (!a) {\n          for (; f < h && Mr(o = t.charAt(f));) a += o, f++;\n\n          d += a;\n        }\n\n        if (a) {\n          for (c = a, a = \"\"; f < h && ((o = t.charAt(f)) === qr || o === Nr || o === xr);) a += o, f++;\n\n          if (u = null, (o = t.charAt(f)) === _r ? u = _r : o === Sr ? u = Sr : o === Pr && (u = Or), u) {\n            if (!a) return;\n\n            for (f = (d += a + o).length, a = \"\"; f < h && (o = t.charAt(f)) !== u;) {\n              if (o === xr) {\n                if (f++, (o = t.charAt(f)) === xr || o === u) return;\n                a += xr;\n              }\n\n              a += o, f++;\n            }\n\n            if ((o = t.charAt(f)) !== u) return;\n            i = d, d += a + o, f++, l = a, a = \"\";\n          } else a = \"\", f = d.length;\n\n          for (; f < h && ((o = t.charAt(f)) === qr || o === Nr);) d += o, f++;\n\n          return (o = t.charAt(f)) && o !== xr ? void 0 : !!r || (n = e(n).test().end, c = this.decode.raw(this.unescape(c), n, {\n            nonTerminated: !1\n          }), l && (i = e(i).test().end, l = this.decode.raw(this.unescape(l), i)), e(d)({\n            type: \"definition\",\n            identifier: dr(s),\n            title: l || null,\n            url: c\n          }));\n        }\n      }\n    }\n  }\n\n  function Vr(e) {\n    return e !== Ur && e !== Lr && e !== Br;\n  }\n\n  function Mr(e) {\n    return e !== Lr && e !== Br && !Re(e);\n  }\n\n  Vr.delimiter = Ur;\n\n  var jr = function (e, t, r) {\n    var n, i, a, o, u, s, c, l, p, f, h, d, D, g, m, v, b, y, E, C, A, w, k, T;\n    if (!this.options.gfm) return;\n    n = 0, y = 0, s = t.length + 1, c = [];\n\n    for (; n < s;) {\n      if (w = t.indexOf(Yr, n), k = t.indexOf(Xr, n + 1), -1 === w && (w = t.length), -1 === k || k > w) {\n        if (y < Kr) return;\n        break;\n      }\n\n      c.push(t.slice(n, w)), y++, n = w + 1;\n    }\n\n    o = c.join(Yr), i = c.splice(1, 1)[0] || [], n = 0, s = i.length, y--, a = !1, h = [];\n\n    for (; n < s;) {\n      if ((p = i.charAt(n)) === Xr) {\n        if (f = null, !1 === a) {\n          if (!1 === T) return;\n        } else h.push(a), a = !1;\n\n        T = !1;\n      } else if (p === Hr) f = !0, a = a || nn;else if (p === Wr) a = a === en ? tn : f && a === nn ? rn : en;else if (!Re(p)) return;\n\n      n++;\n    }\n\n    !1 !== a && h.push(a);\n    if (h.length < Jr) return;\n    if (r) return !0;\n    b = -1, C = [], A = e(o).reset({\n      type: \"table\",\n      align: h,\n      children: C\n    });\n\n    for (; ++b < y;) {\n      for (E = c[b], u = {\n        type: \"tableRow\",\n        children: []\n      }, b && e(Yr), e(E).reset(u, A), s = E.length + 1, n = 0, l = \"\", d = \"\", D = !0, g = null, m = null; n < s;) if ((p = E.charAt(n)) !== Zr && p !== Qr) {\n        if (\"\" === p || p === Xr) {\n          if (D) e(p);else {\n            if (p && m) {\n              l += p, n++;\n              continue;\n            }\n\n            !d && !p || D || (o = d, l.length > 1 && (p ? (o += l.slice(0, l.length - 1), l = l.charAt(l.length - 1)) : (o += l, l = \"\")), v = e.now(), e(o)({\n              type: \"tableCell\",\n              children: this.tokenizeInline(d, v)\n            }, u)), e(l + p), l = \"\", d = \"\";\n          }\n        } else if (l && (d += l, l = \"\"), d += p, p === zr && n !== s - 2 && (d += E.charAt(n + 1), n++), p === Gr) {\n          for (g = 1; E.charAt(n + 1) === p;) d += p, n++, g++;\n\n          m ? g >= m && (m = 0) : m = g;\n        }\n        D = !1, n++;\n      } else d ? l += p : e(p), n++;\n\n      b || e(Yr + i);\n    }\n\n    return A;\n  },\n      zr = \"\\\\\",\n      Gr = \"`\",\n      Hr = \"-\",\n      Xr = \"|\",\n      Wr = \":\",\n      Qr = \" \",\n      Yr = \"\\n\",\n      Zr = \"\\t\",\n      Jr = 1,\n      Kr = 2,\n      en = \"left\",\n      tn = \"center\",\n      rn = \"right\",\n      nn = null;\n\n  var an = function (e, t, r) {\n    var n,\n        i,\n        a,\n        o,\n        u,\n        s = this.options,\n        c = s.commonmark,\n        l = s.gfm,\n        p = this.blockTokenizers,\n        f = this.interruptParagraph,\n        h = t.indexOf(on),\n        d = t.length;\n\n    for (; h < d;) {\n      if (-1 === h) {\n        h = d;\n        break;\n      }\n\n      if (t.charAt(h + 1) === on) break;\n\n      if (c) {\n        for (o = 0, n = h + 1; n < d;) {\n          if ((a = t.charAt(n)) === un) {\n            o = cn;\n            break;\n          }\n\n          if (a !== sn) break;\n          o++, n++;\n        }\n\n        if (o >= cn) {\n          h = t.indexOf(on, h + 1);\n          continue;\n        }\n      }\n\n      if (i = t.slice(h + 1), ot(f, p, this, [e, i, !0])) break;\n      if (p.list.call(this, e, i, !0) && (this.inList || c || l && !q(at.left(i).charAt(0)))) break;\n\n      if (n = h, -1 !== (h = t.indexOf(on, h + 1)) && \"\" === at(t.slice(n, h))) {\n        h = n;\n        break;\n      }\n    }\n\n    if (i = t.slice(0, h), \"\" === at(i)) return e(i), null;\n    if (r) return !0;\n    return u = e.now(), i = ze(i), e(i)({\n      type: \"paragraph\",\n      children: this.tokenizeInline(i, u)\n    });\n  },\n      on = \"\\n\",\n      un = \"\\t\",\n      sn = \" \",\n      cn = 4;\n\n  var ln = function (e, t) {\n    return e.indexOf(\"\\\\\", t);\n  };\n\n  var pn = fn;\n\n  function fn(e, t, r) {\n    var n, i;\n    if (\"\\\\\" === t.charAt(0) && (n = t.charAt(1), -1 !== this.escape.indexOf(n))) return !!r || (i = \"\\n\" === n ? {\n      type: \"break\"\n    } : {\n      type: \"text\",\n      value: n\n    }, e(\"\\\\\" + n)(i));\n  }\n\n  fn.locator = ln;\n\n  var hn = function (e, t) {\n    return e.indexOf(\"<\", t);\n  };\n\n  var dn = En;\n  En.locator = hn, En.notInLink = !0;\n  var Dn = \"<\",\n      gn = \">\",\n      mn = \"@\",\n      vn = \"/\",\n      bn = \"mailto:\",\n      yn = bn.length;\n\n  function En(e, t, r) {\n    var n, i, a, o, u, s, c, l, p, f, h;\n\n    if (t.charAt(0) === Dn) {\n      for (this, n = \"\", i = t.length, a = 0, o = \"\", s = !1, c = \"\", a++, n = Dn; a < i && (u = t.charAt(a), !(Re(u) || u === gn || u === mn || \":\" === u && t.charAt(a + 1) === vn));) o += u, a++;\n\n      if (o) {\n        if (c += o, o = \"\", c += u = t.charAt(a), a++, u === mn) s = !0;else {\n          if (\":\" !== u || t.charAt(a + 1) !== vn) return;\n          c += vn, a++;\n        }\n\n        for (; a < i && (u = t.charAt(a), !Re(u) && u !== gn);) o += u, a++;\n\n        if (u = t.charAt(a), o && u === gn) return !!r || (p = c += o, n += c + u, (l = e.now()).column++, l.offset++, s && (c.slice(0, yn).toLowerCase() === bn ? (p = p.substr(yn), l.column += yn, l.offset += yn) : c = bn + c), f = this.inlineTokenizers, this.inlineTokenizers = {\n          text: f.text\n        }, h = this.enterLink(), p = this.tokenizeInline(p, l), this.inlineTokenizers = f, h(), e(n)({\n          type: \"link\",\n          title: null,\n          url: I(c, {\n            nonTerminated: !1\n          }),\n          children: p\n        }));\n      }\n    }\n  }\n\n  var Cn = function (e, t) {\n    var r,\n        n = An.length,\n        i = -1,\n        a = -1;\n    if (!this.options.gfm) return -1;\n\n    for (; ++i < n;) -1 !== (r = e.indexOf(An[i], t)) && (r < a || -1 === a) && (a = r);\n\n    return a;\n  },\n      An = [\"https://\", \"http://\", \"mailto:\"];\n\n  var wn = Bn;\n  Bn.locator = Cn, Bn.notInLink = !0;\n  var kn = \"[\",\n      Tn = \"]\",\n      _n = \"(\",\n      Sn = \")\",\n      Fn = \"<\",\n      xn = \"@\",\n      qn = \"mailto:\",\n      Nn = [\"http://\", \"https://\", qn],\n      Ln = Nn.length;\n\n  function Bn(e, t, r) {\n    var n, i, a, o, u, s, c, l, p, f, h, d;\n\n    if (this.options.gfm) {\n      for (n = \"\", o = -1, l = Ln; ++o < l;) if (s = Nn[o], (c = t.slice(0, s.length)).toLowerCase() === s) {\n        n = c;\n        break;\n      }\n\n      if (n) {\n        for (o = n.length, l = t.length, p = \"\", f = 0; o < l && (a = t.charAt(o), !Re(a) && a !== Fn) && (\".\" !== a && \",\" !== a && \":\" !== a && \";\" !== a && '\"' !== a && \"'\" !== a && \")\" !== a && \"]\" !== a || (h = t.charAt(o + 1)) && !Re(h)) && (a !== _n && a !== kn || f++, a !== Sn && a !== Tn || !(--f < 0));) p += a, o++;\n\n        if (p) {\n          if (i = n += p, s === qn) {\n            if (-1 === (u = p.indexOf(xn)) || u === l - 1) return;\n            i = i.substr(qn.length);\n          }\n\n          return !!r || (d = this.enterLink(), i = this.tokenizeInline(i, e.now()), d(), e(n)({\n            type: \"link\",\n            title: null,\n            url: I(n, {\n              nonTerminated: !1\n            }),\n            children: i\n          }));\n        }\n      }\n    }\n  }\n\n  var Pn = or.tag,\n      On = Un;\n  Un.locator = hn;\n  var Rn = /^<a /i,\n      In = /^<\\/a>/i;\n\n  function Un(e, t, r) {\n    var n,\n        i,\n        a = t.length;\n    if (!(\"<\" !== t.charAt(0) || a < 3) && (n = t.charAt(1), (L(n) || \"?\" === n || \"!\" === n || \"/\" === n) && (i = t.match(Pn)))) return !!r || (i = i[0], !this.inLink && Rn.test(i) ? this.inLink = !0 : this.inLink && In.test(i) && (this.inLink = !1), e(i)({\n      type: \"html\",\n      value: i\n    }));\n  }\n\n  var $n = function (e, t) {\n    var r = e.indexOf(\"[\", t),\n        n = e.indexOf(\"![\", t);\n    if (-1 === n) return r;\n    return r < n ? r : n;\n  };\n\n  var Vn = Kn;\n  Kn.locator = $n;\n  var Mn = {}.hasOwnProperty,\n      jn = \"\\\\\",\n      zn = \"[\",\n      Gn = \"]\",\n      Hn = \"(\",\n      Xn = \")\",\n      Wn = \"<\",\n      Qn = \">\",\n      Yn = \"`\",\n      Zn = {\n    '\"': '\"',\n    \"'\": \"'\"\n  },\n      Jn = {};\n\n  function Kn(e, t, r) {\n    var n,\n        i,\n        a,\n        o,\n        u,\n        s,\n        c,\n        l,\n        p,\n        f,\n        h,\n        d,\n        D,\n        g,\n        m,\n        v,\n        b,\n        y,\n        E,\n        C = \"\",\n        A = 0,\n        w = t.charAt(0),\n        k = this.options.pedantic,\n        T = this.options.commonmark,\n        _ = this.options.gfm;\n\n    if (\"!\" === w && (p = !0, C = w, w = t.charAt(++A)), w === zn && (p || !this.inLink)) {\n      for (C += w, m = \"\", A++, d = t.length, g = 0, (b = e.now()).column += A, b.offset += A; A < d;) {\n        if (s = w = t.charAt(A), w === Yn) {\n          for (i = 1; t.charAt(A + 1) === Yn;) s += w, A++, i++;\n\n          a ? i >= a && (a = 0) : a = i;\n        } else if (w === jn) A++, s += t.charAt(A);else if (a && !_ || w !== zn) {\n          if ((!a || _) && w === Gn) {\n            if (!g) {\n              if (!k) for (; A < d && (w = t.charAt(A + 1), Re(w));) s += w, A++;\n              if (t.charAt(A + 1) !== Hn) return;\n              s += Hn, n = !0, A++;\n              break;\n            }\n\n            g--;\n          }\n        } else g++;\n\n        m += s, s = \"\", A++;\n      }\n\n      if (n) {\n        for (f = m, C += m + s, A++; A < d && (w = t.charAt(A), Re(w));) C += w, A++;\n\n        if (w = t.charAt(A), l = T ? Jn : Zn, m = \"\", o = C, w === Wn) {\n          for (A++, o += Wn; A < d && (w = t.charAt(A)) !== Qn;) {\n            if (T && \"\\n\" === w) return;\n            m += w, A++;\n          }\n\n          if (t.charAt(A) !== Qn) return;\n          C += Wn + m + Qn, v = m, A++;\n        } else {\n          for (w = null, s = \"\"; A < d && (w = t.charAt(A), !s || !Mn.call(l, w));) {\n            if (Re(w)) {\n              if (!k) break;\n              s += w;\n            } else {\n              if (w === Hn) g++;else if (w === Xn) {\n                if (0 === g) break;\n                g--;\n              }\n              m += s, s = \"\", w === jn && (m += jn, w = t.charAt(++A)), m += w;\n            }\n\n            A++;\n          }\n\n          v = m, A = (C += m).length;\n        }\n\n        for (m = \"\"; A < d && (w = t.charAt(A), Re(w));) m += w, A++;\n\n        if (w = t.charAt(A), C += m, m && Mn.call(l, w)) if (A++, C += w, m = \"\", h = l[w], u = C, T) {\n          for (; A < d && (w = t.charAt(A)) !== h;) w === jn && (m += jn, w = t.charAt(++A)), A++, m += w;\n\n          if ((w = t.charAt(A)) !== h) return;\n\n          for (D = m, C += m + w, A++; A < d && (w = t.charAt(A), Re(w));) C += w, A++;\n        } else for (s = \"\"; A < d;) {\n          if ((w = t.charAt(A)) === h) c && (m += h + s, s = \"\"), c = !0;else if (c) {\n            if (w === Xn) {\n              C += m + h + s, D = m;\n              break;\n            }\n\n            Re(w) ? s += w : (m += h + s + w, s = \"\", c = !1);\n          } else m += w;\n          A++;\n        }\n        if (t.charAt(A) === Xn) return !!r || (C += Xn, v = this.decode.raw(this.unescape(v), e(o).test().end, {\n          nonTerminated: !1\n        }), D && (u = e(u).test().end, D = this.decode.raw(this.unescape(D), u)), E = {\n          type: p ? \"image\" : \"link\",\n          title: D || null,\n          url: v\n        }, p ? E.alt = this.decode.raw(this.unescape(f), b) || null : (y = this.enterLink(), E.children = this.tokenizeInline(f, b), y()), e(C)(E));\n      }\n    }\n  }\n\n  Jn['\"'] = '\"', Jn[\"'\"] = \"'\", Jn[Hn] = Xn;\n  var ei = pi;\n  pi.locator = $n;\n  var ti = \"link\",\n      ri = \"image\",\n      ni = \"footnote\",\n      ii = \"shortcut\",\n      ai = \"collapsed\",\n      oi = \"full\",\n      ui = \"^\",\n      si = \"\\\\\",\n      ci = \"[\",\n      li = \"]\";\n\n  function pi(e, t, r) {\n    var n,\n        i,\n        a,\n        o,\n        u,\n        s,\n        c,\n        l,\n        p = t.charAt(0),\n        f = 0,\n        h = t.length,\n        d = \"\",\n        D = \"\",\n        g = ti,\n        m = ii;\n\n    if (\"!\" === p && (g = ri, D = p, p = t.charAt(++f)), p === ci) {\n      if (f++, D += p, s = \"\", this.options.footnotes && t.charAt(f) === ui) {\n        if (g === ri) return;\n        D += ui, f++, g = ni;\n      }\n\n      for (l = 0; f < h;) {\n        if ((p = t.charAt(f)) === ci) c = !0, l++;else if (p === li) {\n          if (!l) break;\n          l--;\n        }\n        p === si && (s += si, p = t.charAt(++f)), s += p, f++;\n      }\n\n      if (d = s, n = s, (p = t.charAt(f)) === li) {\n        for (f++, d += p, s = \"\"; f < h && (p = t.charAt(f), Re(p));) s += p, f++;\n\n        if (p = t.charAt(f), g !== ni && p === ci) {\n          for (i = \"\", s += p, f++; f < h && (p = t.charAt(f)) !== ci && p !== li;) p === si && (i += si, p = t.charAt(++f)), i += p, f++;\n\n          (p = t.charAt(f)) === li ? (m = i ? oi : ai, s += i + p, f++) : i = \"\", d += s, s = \"\";\n        } else {\n          if (!n) return;\n          i = n;\n        }\n\n        if (m === oi || !c) return d = D + d, g === ti && this.inLink ? null : !!r || (g === ni && -1 !== n.indexOf(\" \") ? e(d)({\n          type: \"footnote\",\n          children: this.tokenizeInline(n, e.now())\n        }) : ((a = e.now()).column += D.length, a.offset += D.length, o = {\n          type: g + \"Reference\",\n          identifier: dr(i = m === oi ? i : n)\n        }, g !== ti && g !== ri || (o.referenceType = m), g === ti ? (u = this.enterLink(), o.children = this.tokenizeInline(n, a), u()) : g === ri && (o.alt = this.decode.raw(this.unescape(n), a) || null), e(d)(o)));\n      }\n    }\n  }\n\n  var fi = function (e, t) {\n    var r = e.indexOf(\"**\", t),\n        n = e.indexOf(\"__\", t);\n    if (-1 === n) return r;\n    if (-1 === r) return n;\n    return n < r ? n : r;\n  };\n\n  var hi = gi;\n  gi.locator = fi;\n  var di = \"*\",\n      Di = \"_\";\n\n  function gi(e, t, r) {\n    var n,\n        i,\n        a,\n        o,\n        u,\n        s,\n        c,\n        l = 0,\n        p = t.charAt(l);\n    if (!(p !== di && p !== Di || t.charAt(++l) !== p || (i = this.options.pedantic, u = (a = p) + a, s = t.length, l++, o = \"\", p = \"\", i && Re(t.charAt(l))))) for (; l < s;) {\n      if (c = p, !((p = t.charAt(l)) !== a || t.charAt(l + 1) !== a || i && Re(c)) && (p = t.charAt(l + 2)) !== a) {\n        if (!at(o)) return;\n        return !!r || ((n = e.now()).column += 2, n.offset += 2, e(u + o + u)({\n          type: \"strong\",\n          children: this.tokenizeInline(o, n)\n        }));\n      }\n\n      i || \"\\\\\" !== p || (o += p, p = t.charAt(++l)), o += p, l++;\n    }\n  }\n\n  var mi = function (e) {\n    return bi.test(\"number\" == typeof e ? vi(e) : e.charAt(0));\n  },\n      vi = String.fromCharCode,\n      bi = /\\w/;\n\n  var yi = function (e, t) {\n    var r = e.indexOf(\"*\", t),\n        n = e.indexOf(\"_\", t);\n    if (-1 === n) return r;\n    if (-1 === r) return n;\n    return n < r ? n : r;\n  };\n\n  var Ei = wi;\n  wi.locator = yi;\n  var Ci = \"*\",\n      Ai = \"_\";\n\n  function wi(e, t, r) {\n    var n,\n        i,\n        a,\n        o,\n        u,\n        s,\n        c,\n        l = 0,\n        p = t.charAt(l);\n    if (!(p !== Ci && p !== Ai || (i = this.options.pedantic, u = p, a = p, s = t.length, l++, o = \"\", p = \"\", i && Re(t.charAt(l))))) for (; l < s;) {\n      if (c = p, !((p = t.charAt(l)) !== a || i && Re(c))) {\n        if ((p = t.charAt(++l)) !== a) {\n          if (!at(o) || c === a) return;\n\n          if (!i && a === Ai && mi(p)) {\n            o += a;\n            continue;\n          }\n\n          return !!r || ((n = e.now()).column++, n.offset++, e(u + o + a)({\n            type: \"emphasis\",\n            children: this.tokenizeInline(o, n)\n          }));\n        }\n\n        o += a;\n      }\n\n      i || \"\\\\\" !== p || (o += p, p = t.charAt(++l)), o += p, l++;\n    }\n  }\n\n  var ki = function (e, t) {\n    return e.indexOf(\"~~\", t);\n  };\n\n  var Ti = Fi;\n  Fi.locator = ki;\n  var _i = \"~\",\n      Si = \"~~\";\n\n  function Fi(e, t, r) {\n    var n,\n        i,\n        a,\n        o = \"\",\n        u = \"\",\n        s = \"\",\n        c = \"\";\n    if (this.options.gfm && t.charAt(0) === _i && t.charAt(1) === _i && !Re(t.charAt(2))) for (n = 1, i = t.length, (a = e.now()).column += 2, a.offset += 2; ++n < i;) {\n      if (!((o = t.charAt(n)) !== _i || u !== _i || s && Re(s))) return !!r || e(Si + c + Si)({\n        type: \"delete\",\n        children: this.tokenizeInline(c, a)\n      });\n      c += u, s = u, u = o;\n    }\n  }\n\n  var xi = function (e, t) {\n    return e.indexOf(\"`\", t);\n  };\n\n  var qi = Li;\n  Li.locator = xi;\n  var Ni = \"`\";\n\n  function Li(e, t, r) {\n    for (var n, i, a, o, u, s, c, l, p = t.length, f = 0, h = \"\", d = \"\"; f < p && t.charAt(f) === Ni;) h += Ni, f++;\n\n    if (h) {\n      for (u = h, o = f, h = \"\", l = t.charAt(f), a = 0; f < p;) {\n        if (s = l, l = t.charAt(f + 1), s === Ni ? (a++, d += s) : (a = 0, h += s), a && l !== Ni) {\n          if (a === o) {\n            u += h + d, c = !0;\n            break;\n          }\n\n          h += d, d = \"\";\n        }\n\n        f++;\n      }\n\n      if (!c) {\n        if (o % 2 != 0) return;\n        h = \"\";\n      }\n\n      if (r) return !0;\n\n      for (n = \"\", i = \"\", p = h.length, f = -1; ++f < p;) s = h.charAt(f), Re(s) ? i += s : (i && (n && (n += i), i = \"\"), n += s);\n\n      return e(u)({\n        type: \"inlineCode\",\n        value: n\n      });\n    }\n  }\n\n  var Bi = function (e, t) {\n    var r = e.indexOf(\"\\n\", t);\n\n    for (; r > t && \" \" === e.charAt(r - 1);) r--;\n\n    return r;\n  };\n\n  var Pi = Ri;\n  Ri.locator = Bi;\n  var Oi = 2;\n\n  function Ri(e, t, r) {\n    for (var n, i = t.length, a = -1, o = \"\"; ++a < i;) {\n      if (\"\\n\" === (n = t.charAt(a))) {\n        if (a < Oi) return;\n        return !!r || e(o += n)({\n          type: \"break\"\n        });\n      }\n\n      if (\" \" !== n) return;\n      o += n;\n    }\n  }\n\n  var Ii = function (e, t, r) {\n    var n, i, a, o, u, s, c, l, p, f;\n    if (r) return !0;\n    n = this.inlineMethods, o = n.length, i = this.inlineTokenizers, a = -1, p = t.length;\n\n    for (; ++a < o;) \"text\" !== (l = n[a]) && i[l] && ((c = i[l].locator) || e.file.fail(\"Missing locator: `\" + l + \"`\"), -1 !== (s = c.call(this, t, 1)) && s < p && (p = s));\n\n    u = t.slice(0, p), f = e.now(), this.decode(u, f, function (t, r, n) {\n      e(n || t)({\n        type: \"text\",\n        value: t\n      });\n    });\n  };\n\n  var Ui = $i;\n\n  function $i(e, t) {\n    this.file = t, this.offset = {}, this.options = p(this.options), this.setOptions({}), this.inList = !1, this.inBlock = !1, this.inLink = !1, this.atStart = !0, this.toOffset = C(t).toOffset, this.unescape = k(this, \"escape\"), this.decode = be(this);\n  }\n\n  var Vi = $i.prototype;\n\n  function Mi(e) {\n    var t,\n        r = [];\n\n    for (t in e) r.push(t);\n\n    return r;\n  }\n\n  Vi.setOptions = Fe, Vi.parse = Be, Vi.options = Se, Vi.exitStart = E(\"atStart\", !0), Vi.enterList = E(\"inList\", !1), Vi.enterLink = E(\"inLink\", !1), Vi.enterBlock = E(\"inBlock\", !1), Vi.interruptParagraph = [[\"thematicBreak\"], [\"atxHeading\"], [\"fencedCode\"], [\"blockquote\"], [\"html\"], [\"setextHeading\", {\n    commonmark: !1\n  }], [\"definition\", {\n    commonmark: !1\n  }], [\"footnote\", {\n    commonmark: !1\n  }]], Vi.interruptList = [[\"atxHeading\", {\n    pedantic: !1\n  }], [\"fencedCode\", {\n    pedantic: !1\n  }], [\"thematicBreak\", {\n    pedantic: !1\n  }], [\"definition\", {\n    commonmark: !1\n  }], [\"footnote\", {\n    commonmark: !1\n  }]], Vi.interruptBlockquote = [[\"indentedCode\", {\n    commonmark: !0\n  }], [\"fencedCode\", {\n    commonmark: !0\n  }], [\"atxHeading\", {\n    commonmark: !0\n  }], [\"setextHeading\", {\n    commonmark: !0\n  }], [\"thematicBreak\", {\n    commonmark: !0\n  }], [\"html\", {\n    commonmark: !0\n  }], [\"list\", {\n    commonmark: !0\n  }], [\"definition\", {\n    commonmark: !1\n  }], [\"footnote\", {\n    commonmark: !1\n  }]], Vi.blockTokenizers = {\n    newline: $e,\n    indentedCode: He,\n    fencedCode: Ze,\n    blockquote: ut,\n    atxHeading: ft,\n    thematicBreak: vt,\n    list: Nt,\n    setextHeading: Jt,\n    html: sr,\n    footnote: Dr,\n    definition: Tr,\n    table: jr,\n    paragraph: an\n  }, Vi.inlineTokenizers = {\n    escape: pn,\n    autoLink: dn,\n    url: wn,\n    html: On,\n    link: Vn,\n    reference: ei,\n    strong: hi,\n    emphasis: Ei,\n    deletion: Ti,\n    code: qi,\n    break: Pi,\n    text: Ii\n  }, Vi.blockMethods = Mi(Vi.blockTokenizers), Vi.inlineMethods = Mi(Vi.inlineTokenizers), Vi.tokenizeBlock = ye(\"block\"), Vi.tokenizeInline = ye(\"inline\"), Vi.tokenizeFactory = ye;\n  var ji = zi;\n\n  function zi(e) {\n    var t = y(Ui);\n    t.prototype.options = p(t.prototype.options, this.data(\"settings\"), e), this.Parser = t;\n  }\n\n  zi.Parser = Ui;\n\n  var Gi = Object.prototype.hasOwnProperty,\n      Hi = Object.prototype.toString,\n      Xi = Object.defineProperty,\n      Wi = Object.getOwnPropertyDescriptor,\n      Qi = function (e) {\n    return \"function\" == typeof Array.isArray ? Array.isArray(e) : \"[object Array]\" === Hi.call(e);\n  },\n      Yi = function (e) {\n    if (!e || \"[object Object]\" !== Hi.call(e)) return !1;\n    var t,\n        r = Gi.call(e, \"constructor\"),\n        n = e.constructor && e.constructor.prototype && Gi.call(e.constructor.prototype, \"isPrototypeOf\");\n    if (e.constructor && !r && !n) return !1;\n\n    for (t in e);\n\n    return void 0 === t || Gi.call(e, t);\n  },\n      Zi = function (e, t) {\n    Xi && \"__proto__\" === t.name ? Xi(e, t.name, {\n      enumerable: !0,\n      configurable: !0,\n      value: t.newValue,\n      writable: !0\n    }) : e[t.name] = t.newValue;\n  },\n      Ji = function (e, t) {\n    if (\"__proto__\" === t) {\n      if (!Gi.call(e, t)) return;\n      if (Wi) return Wi(e, t).value;\n    }\n\n    return e[t];\n  },\n      Ki = function e() {\n    var r,\n        n,\n        i,\n        a,\n        o,\n        u,\n        s = arguments[0],\n        c = 1,\n        l = arguments.length,\n        p = !1;\n\n    for (\"boolean\" == typeof s && (p = s, s = arguments[1] || {}, c = 2), (null == s || \"object\" !== t(s) && \"function\" != typeof s) && (s = {}); c < l; ++c) if (null != (r = arguments[c])) for (n in r) i = Ji(s, n), s !== (a = Ji(r, n)) && (p && a && (Yi(a) || (o = Qi(a))) ? (o ? (o = !1, u = i && Qi(i) ? i : []) : u = i && Yi(i) ? i : {}, Zi(s, {\n      name: n,\n      newValue: e(p, u, a)\n    })) : void 0 !== a && Zi(s, {\n      name: n,\n      newValue: a\n    }));\n\n    return s;\n  },\n      ea = function (e) {\n    if (e) throw e;\n  };\n\n  var ta = {}.hasOwnProperty,\n      ra = function (e) {\n    if (!e || \"object\" !== t(e)) return \"\";\n    if (ta.call(e, \"position\") || ta.call(e, \"type\")) return ia(e.position);\n    if (ta.call(e, \"start\") || ta.call(e, \"end\")) return ia(e);\n    if (ta.call(e, \"line\") || ta.call(e, \"column\")) return na(e);\n    return \"\";\n  };\n\n  function na(e) {\n    return e && \"object\" === t(e) || (e = {}), aa(e.line) + \":\" + aa(e.column);\n  }\n\n  function ia(e) {\n    return e && \"object\" === t(e) || (e = {}), na(e.start) + \"-\" + na(e.end);\n  }\n\n  function aa(e) {\n    return e && \"number\" == typeof e ? e : 1;\n  }\n\n  var oa = ca;\n\n  function ua() {}\n\n  ua.prototype = Error.prototype, ca.prototype = new ua();\n  var sa = ca.prototype;\n\n  function ca(e, t, r) {\n    var n, i, a;\n    \"string\" == typeof t && (r = t, t = null), n = function (e) {\n      var t,\n          r = [null, null];\n      \"string\" == typeof e && (-1 === (t = e.indexOf(\":\")) ? r[1] = e : (r[0] = e.slice(0, t), r[1] = e.slice(t + 1)));\n      return r;\n    }(r), i = ra(t) || \"1:1\", a = {\n      start: {\n        line: null,\n        column: null\n      },\n      end: {\n        line: null,\n        column: null\n      }\n    }, t && t.position && (t = t.position), t && (t.start ? (a = t, t = t.start) : a.start = t), e.stack && (this.stack = e.stack, e = e.message), this.message = e, this.name = i, this.reason = e, this.line = t ? t.line : null, this.column = t ? t.column : null, this.location = a, this.source = n[0], this.ruleId = n[1];\n  }\n\n  sa.file = \"\", sa.name = \"\", sa.reason = \"\", sa.message = \"\", sa.stack = \"\", sa.fatal = null, sa.column = null, sa.line = null;\n  var la = \"undefined\" != typeof global ? global : \"undefined\" != typeof self ? self : \"undefined\" != typeof window ? window : {};\n\n  function pa() {\n    throw new Error(\"setTimeout has not been defined\");\n  }\n\n  function fa() {\n    throw new Error(\"clearTimeout has not been defined\");\n  }\n\n  var ha = pa,\n      da = fa;\n\n  function Da(e) {\n    if (ha === setTimeout) return setTimeout(e, 0);\n    if ((ha === pa || !ha) && setTimeout) return ha = setTimeout, setTimeout(e, 0);\n\n    try {\n      return ha(e, 0);\n    } catch (t) {\n      try {\n        return ha.call(null, e, 0);\n      } catch (t) {\n        return ha.call(this, e, 0);\n      }\n    }\n  }\n\n  \"function\" == typeof la.setTimeout && (ha = setTimeout), \"function\" == typeof la.clearTimeout && (da = clearTimeout);\n  var ga,\n      ma = [],\n      va = !1,\n      ba = -1;\n\n  function ya() {\n    va && ga && (va = !1, ga.length ? ma = ga.concat(ma) : ba = -1, ma.length && Ea());\n  }\n\n  function Ea() {\n    if (!va) {\n      var e = Da(ya);\n      va = !0;\n\n      for (var t = ma.length; t;) {\n        for (ga = ma, ma = []; ++ba < t;) ga && ga[ba].run();\n\n        ba = -1, t = ma.length;\n      }\n\n      ga = null, va = !1, function (e) {\n        if (da === clearTimeout) return clearTimeout(e);\n        if ((da === fa || !da) && clearTimeout) return da = clearTimeout, clearTimeout(e);\n\n        try {\n          da(e);\n        } catch (t) {\n          try {\n            return da.call(null, e);\n          } catch (t) {\n            return da.call(this, e);\n          }\n        }\n      }(e);\n    }\n  }\n\n  function Ca(e, t) {\n    this.fun = e, this.array = t;\n  }\n\n  Ca.prototype.run = function () {\n    this.fun.apply(null, this.array);\n  };\n\n  function Aa() {}\n\n  var wa = Aa,\n      ka = Aa,\n      Ta = Aa,\n      _a = Aa,\n      Sa = Aa,\n      Fa = Aa,\n      xa = Aa;\n\n  var qa = la.performance || {},\n      Na = qa.now || qa.mozNow || qa.msNow || qa.oNow || qa.webkitNow || function () {\n    return new Date().getTime();\n  };\n\n  var La = new Date();\n  var Ba = {\n    nextTick: function (e) {\n      var t = new Array(arguments.length - 1);\n      if (arguments.length > 1) for (var r = 1; r < arguments.length; r++) t[r - 1] = arguments[r];\n      ma.push(new Ca(e, t)), 1 !== ma.length || va || Da(Ea);\n    },\n    title: \"browser\",\n    browser: !0,\n    env: {},\n    argv: [],\n    version: \"\",\n    versions: {},\n    on: wa,\n    addListener: ka,\n    once: Ta,\n    off: _a,\n    removeListener: Sa,\n    removeAllListeners: Fa,\n    emit: xa,\n    binding: function (e) {\n      throw new Error(\"process.binding is not supported\");\n    },\n    cwd: function () {\n      return \"/\";\n    },\n    chdir: function (e) {\n      throw new Error(\"process.chdir is not supported\");\n    },\n    umask: function () {\n      return 0;\n    },\n    hrtime: function (e) {\n      var t = .001 * Na.call(qa),\n          r = Math.floor(t),\n          n = Math.floor(t % 1 * 1e9);\n      return e && (r -= e[0], (n -= e[1]) < 0 && (r--, n += 1e9)), [r, n];\n    },\n    platform: \"browser\",\n    release: {},\n    config: {},\n    uptime: function () {\n      return (new Date() - La) / 1e3;\n    }\n  };\n  var Pa = D(Object.freeze({\n    __proto__: null,\n    extname: function (e) {\n      var t = e.lastIndexOf(\".\");\n      return -1 === t ? \"\" : e.slice(t);\n    }\n  }));\n\n  var Oa = function (e, t) {\n    if (\"string\" != typeof e) return e;\n    if (0 === e.length) return e;\n    var r = Pa.basename(e, Pa.extname(e)) + t;\n    return Pa.join(Pa.dirname(e), r);\n  },\n      Ra = function (e) {\n    return null != e && null != e.constructor && \"function\" == typeof e.constructor.isBuffer && e.constructor.isBuffer(e);\n  },\n      Ia = Ma,\n      Ua = {}.hasOwnProperty,\n      $a = Ma.prototype,\n      Va = [\"history\", \"path\", \"basename\", \"stem\", \"extname\", \"dirname\"];\n  /*!\n     * Determine if an object is a Buffer\n     *\n     * @author   Feross Aboukhadijeh <https://feross.org>\n     * @license  MIT\n     */\n\n\n  function Ma(e) {\n    var t, r, n;\n\n    if (e) {\n      if (\"string\" == typeof e || Ra(e)) e = {\n        contents: e\n      };else if (\"message\" in e && \"messages\" in e) return e;\n    } else e = {};\n\n    if (!(this instanceof Ma)) return new Ma(e);\n\n    for (this.data = {}, this.messages = [], this.history = [], this.cwd = Ba.cwd(), r = -1, n = Va.length; ++r < n;) t = Va[r], Ua.call(e, t) && (this[t] = e[t]);\n\n    for (t in e) -1 === Va.indexOf(t) && (this[t] = e[t]);\n  }\n\n  function ja(e, t) {\n    if (-1 !== e.indexOf(Pa.sep)) throw new Error(\"`\" + t + \"` cannot be a path: did not expect `\" + Pa.sep + \"`\");\n  }\n\n  function za(e, t) {\n    if (!e) throw new Error(\"`\" + t + \"` cannot be empty\");\n  }\n\n  function Ga(e, t) {\n    if (!e) throw new Error(\"Setting `\" + t + \"` requires `path` to be set too\");\n  }\n\n  $a.toString = function (e) {\n    var t = this.contents || \"\";\n    return Ra(t) ? t.toString(e) : String(t);\n  }, Object.defineProperty($a, \"path\", {\n    get: function () {\n      return this.history[this.history.length - 1];\n    },\n    set: function (e) {\n      za(e, \"path\"), e !== this.path && this.history.push(e);\n    }\n  }), Object.defineProperty($a, \"dirname\", {\n    get: function () {\n      return \"string\" == typeof this.path ? Pa.dirname(this.path) : void 0;\n    },\n    set: function (e) {\n      Ga(this.path, \"dirname\"), this.path = Pa.join(e || \"\", this.basename);\n    }\n  }), Object.defineProperty($a, \"basename\", {\n    get: function () {\n      return \"string\" == typeof this.path ? Pa.basename(this.path) : void 0;\n    },\n    set: function (e) {\n      za(e, \"basename\"), ja(e, \"basename\"), this.path = Pa.join(this.dirname || \"\", e);\n    }\n  }), Object.defineProperty($a, \"extname\", {\n    get: function () {\n      return \"string\" == typeof this.path ? Pa.extname(this.path) : void 0;\n    },\n    set: function (e) {\n      var t = e || \"\";\n\n      if (ja(t, \"extname\"), Ga(this.path, \"extname\"), t) {\n        if (\".\" !== t.charAt(0)) throw new Error(\"`extname` must start with `.`\");\n        if (-1 !== t.indexOf(\".\", 1)) throw new Error(\"`extname` cannot contain multiple dots\");\n      }\n\n      this.path = Oa(this.path, t);\n    }\n  }), Object.defineProperty($a, \"stem\", {\n    get: function () {\n      return \"string\" == typeof this.path ? Pa.basename(this.path, this.extname) : void 0;\n    },\n    set: function (e) {\n      za(e, \"stem\"), ja(e, \"stem\"), this.path = Pa.join(this.dirname || \"\", e + (this.extname || \"\"));\n    }\n  });\n  var Ha = Ia,\n      Xa = Ia.prototype;\n  Xa.message = function (e, t, r) {\n    var n = this.path,\n        i = new oa(e, t, r);\n    n && (i.name = n + \":\" + i.name, i.file = n);\n    return i.fatal = !1, this.messages.push(i), i;\n  }, Xa.info = function () {\n    var e = this.message.apply(this, arguments);\n    return e.fatal = null, e;\n  }, Xa.fail = function () {\n    var e = this.message.apply(this, arguments);\n    throw e.fatal = !0, e;\n  };\n\n  var Wa = function () {\n    var e = [],\n        t = {};\n    return t.run = function () {\n      var t = -1,\n          r = Qa.call(arguments, 0, -1),\n          n = arguments[arguments.length - 1];\n      if (\"function\" != typeof n) throw new Error(\"Expected function as last argument, not \" + n);\n      (function i(a) {\n        var o = e[++t],\n            u = Qa.call(arguments, 0).slice(1),\n            s = r.length,\n            c = -1;\n        if (a) n(a);else {\n          for (; ++c < s;) null !== u[c] && void 0 !== u[c] || (u[c] = r[c]);\n\n          r = u, o ? function (e, t) {\n            var r;\n            return function () {\n              var t,\n                  a = Qa.call(arguments, 0),\n                  o = e.length > a.length;\n              o && a.push(n);\n\n              try {\n                t = e.apply(null, a);\n              } catch (e) {\n                if (o && r) throw e;\n                return n(e);\n              }\n\n              o || (t && \"function\" == typeof t.then ? t.then(i, n) : t instanceof Error ? n(t) : i(t));\n            };\n\n            function n() {\n              r || (r = !0, t.apply(null, arguments));\n            }\n\n            function i(e) {\n              n(null, e);\n            }\n          }(o, i).apply(null, r) : n.apply(null, [null].concat(r));\n        }\n      }).apply(null, [null].concat(r));\n    }, t.use = function (r) {\n      if (\"function\" != typeof r) throw new Error(\"Expected `fn` to be a function, not \" + r);\n      return e.push(r), t;\n    }, t;\n  },\n      Qa = [].slice;\n\n  var Ya = function (e) {\n    if (\"[object Object]\" !== Object.prototype.toString.call(e)) return !1;\n    var t = Object.getPrototypeOf(e);\n    return null === t || t === Object.getPrototypeOf({});\n  },\n      Za = function e() {\n    var r = [];\n    var n = Wa();\n    var i = {};\n    var a = !1;\n    var o = -1;\n\n    u.data = function (e, t) {\n      if (\"string\" == typeof e) return 2 === arguments.length ? (io(\"data\", a), i[e] = t, u) : Ka.call(i, e) && i[e] || null;\n      if (e) return io(\"data\", a), i = e, u;\n      return i;\n    };\n\n    u.freeze = s;\n    u.attachers = r;\n\n    u.use = function (e) {\n      var n;\n      if (io(\"use\", a), null == e) ;else if (\"function\" == typeof e) l.apply(null, arguments);else {\n        if (\"object\" !== t(e)) throw new Error(\"Expected usable value, not `\" + e + \"`\");\n        \"length\" in e ? c(e) : o(e);\n      }\n      n && (i.settings = Ki(i.settings || {}, n));\n      return u;\n\n      function o(e) {\n        c(e.plugins), e.settings && (n = Ki(n || {}, e.settings));\n      }\n\n      function s(e) {\n        if (\"function\" == typeof e) l(e);else {\n          if (\"object\" !== t(e)) throw new Error(\"Expected usable value, not `\" + e + \"`\");\n          \"length\" in e ? l.apply(null, e) : o(e);\n        }\n      }\n\n      function c(e) {\n        var r, n;\n        if (null == e) ;else {\n          if (!(\"object\" === t(e) && \"length\" in e)) throw new Error(\"Expected a list of plugins, not `\" + e + \"`\");\n\n          for (r = e.length, n = -1; ++n < r;) s(e[n]);\n        }\n      }\n\n      function l(e, t) {\n        var n = function (e) {\n          var t,\n              n = r.length,\n              i = -1;\n\n          for (; ++i < n;) if ((t = r[i])[0] === e) return t;\n        }(e);\n\n        n ? (Ya(n[1]) && Ya(t) && (t = Ki(n[1], t)), n[1] = t) : r.push(Ja.call(arguments));\n      }\n    };\n\n    u.parse = function (e) {\n      var t,\n          r = Ha(e);\n      if (s(), ro(\"parse\", t = u.Parser), to(t, \"parse\")) return new t(String(r), r).parse();\n      return t(String(r), r);\n    };\n\n    u.stringify = function (e, t) {\n      var r,\n          n = Ha(t);\n      if (s(), no(\"stringify\", r = u.Compiler), ao(e), to(r, \"compile\")) return new r(e, n).compile();\n      return r(e, n);\n    };\n\n    u.run = c;\n\n    u.runSync = function (e, t) {\n      var r,\n          n = !1;\n      return c(e, t, function (e, t) {\n        n = !0, ea(e), r = t;\n      }), oo(\"runSync\", \"run\", n), r;\n    };\n\n    u.process = l;\n\n    u.processSync = function (e) {\n      var t,\n          r = !1;\n      return s(), ro(\"processSync\", u.Parser), no(\"processSync\", u.Compiler), l(t = Ha(e), function (e) {\n        r = !0, ea(e);\n      }), oo(\"processSync\", \"process\", r), t;\n    };\n\n    return u;\n\n    function u() {\n      for (var t = e(), n = r.length, a = -1; ++a < n;) t.use.apply(null, r[a]);\n\n      return t.data(Ki(!0, {}, i)), t;\n    }\n\n    function s() {\n      var e, t, i, s;\n      if (a) return u;\n\n      for (; ++o < r.length;) t = (e = r[o])[0], null, !1 !== (i = e[1]) && (!0 === i && (e[1] = void 0), \"function\" == typeof (s = t.apply(u, e.slice(1))) && n.use(s));\n\n      return a = !0, o = 1 / 0, u;\n    }\n\n    function c(e, t, r) {\n      if (ao(e), s(), r || \"function\" != typeof t || (r = t, t = null), !r) return new Promise(i);\n\n      function i(i, a) {\n        n.run(e, Ha(t), function (t, n, o) {\n          n = n || e, t ? a(t) : i ? i(n) : r(null, n, o);\n        });\n      }\n\n      i(null, r);\n    }\n\n    function l(e, t) {\n      if (s(), ro(\"process\", u.Parser), no(\"process\", u.Compiler), !t) return new Promise(r);\n\n      function r(r, n) {\n        var i = Ha(e);\n        eo.run(u, {\n          file: i\n        }, function (e) {\n          e ? n(e) : r ? r(i) : t(null, i);\n        });\n      }\n\n      r(null, t);\n    }\n  }().freeze(),\n      Ja = [].slice,\n      Ka = {}.hasOwnProperty,\n      eo = Wa().use(function (e, t) {\n    t.tree = e.parse(t.file);\n  }).use(function (e, t, r) {\n    e.run(t.tree, t.file, function (e, n, i) {\n      e ? r(e) : (t.tree = n, t.file = i, r());\n    });\n  }).use(function (e, t) {\n    t.file.contents = e.stringify(t.tree, t.file);\n  });\n\n  function to(e, t) {\n    return \"function\" == typeof e && e.prototype && (function (e) {\n      var t;\n\n      for (t in e) return !0;\n\n      return !1;\n    }(e.prototype) || t in e.prototype);\n  }\n\n  function ro(e, t) {\n    if (\"function\" != typeof t) throw new Error(\"Cannot `\" + e + \"` without `Parser`\");\n  }\n\n  function no(e, t) {\n    if (\"function\" != typeof t) throw new Error(\"Cannot `\" + e + \"` without `Compiler`\");\n  }\n\n  function io(e, t) {\n    if (t) throw new Error(\"Cannot invoke `\" + e + \"` on a frozen processor.\\nCreate a new processor first, by invoking it: use `processor()` instead of `processor`.\");\n  }\n\n  function ao(e) {\n    if (!e || \"string\" != typeof e.type) throw new Error(\"Expected node, got `\" + e + \"`\");\n  }\n\n  function oo(e, t, r) {\n    if (!r) throw new Error(\"`\" + e + \"` finished async. Use `\" + t + \"` instead\");\n  }\n\n  var uo = /[|\\\\{}()[\\]^$+*?.]/g,\n      so = function (e) {\n    if (\"string\" != typeof e) throw new TypeError(\"Expected a string\");\n    return e.replace(uo, \"\\\\$&\");\n  },\n      co = {\n    \"---\": \"yaml\",\n    \"+++\": \"toml\"\n  };\n\n  var lo = function (e) {\n    var t = Object.keys(co).map(so).join(\"|\"),\n        r = e.match(new RegExp(\"^(\".concat(t, \")[^\\\\n\\\\S]*\\\\n(?:([\\\\s\\\\S]*?)\\\\n)?\\\\1[^\\\\n\\\\S]*(\\\\n|$)\")));\n    if (null === r) return {\n      frontMatter: null,\n      content: e\n    };\n    var n = r[0].replace(/\\n$/, \"\"),\n        i = r[1],\n        a = r[2];\n    return {\n      frontMatter: {\n        type: co[i],\n        value: a,\n        raw: n\n      },\n      content: r[0].replace(/[^\\n]/g, \" \") + e.slice(r[0].length)\n    };\n  },\n      po = [\"format\", \"prettier\"];\n\n  function fo(e) {\n    var t = \"@(\".concat(po.join(\"|\"), \")\"),\n        r = new RegExp([\"\\x3c!--\\\\s*\".concat(t, \"\\\\s*--\\x3e\"), \"\\x3c!--.*\\r?\\n[\\\\s\\\\S]*(^|\\n)[^\\\\S\\n]*\".concat(t, \"[^\\\\S\\n]*($|\\n)[\\\\s\\\\S]*\\n.*--\\x3e\")].join(\"|\"), \"m\"),\n        n = e.match(r);\n    return n && 0 === n.index;\n  }\n\n  var ho = {\n    startWithPragma: fo,\n    hasPragma: function (e) {\n      return fo(lo(e).content.trimLeft());\n    },\n    insertPragma: function (e) {\n      var t = lo(e),\n          r = \"\\x3c!-- @\".concat(po[0], \" --\\x3e\");\n      return t.frontMatter ? \"\".concat(t.frontMatter.raw, \"\\n\\n\").concat(r, \"\\n\\n\").concat(t.content) : \"\".concat(r, \"\\n\\n\").concat(t.content);\n    }\n  },\n      Do = \"[\\\\u02ea-\\\\u02eb\\\\u1100-\\\\u11ff\\\\u2e80-\\\\u2e99\\\\u2e9b-\\\\u2ef3\\\\u2f00-\\\\u2fd5\\\\u3000-\\\\u303f\\\\u3041-\\\\u3096\\\\u3099-\\\\u309f\\\\u30a1-\\\\u30fa\\\\u30fc-\\\\u30ff\\\\u3105-\\\\u312f\\\\u3131-\\\\u318e\\\\u3190-\\\\u3191\\\\u3196-\\\\u31ba\\\\u31c0-\\\\u31e3\\\\u31f0-\\\\u321e\\\\u322a-\\\\u3247\\\\u3260-\\\\u327e\\\\u328a-\\\\u32b0\\\\u32c0-\\\\u32cb\\\\u32d0-\\\\u3370\\\\u337b-\\\\u337f\\\\u33e0-\\\\u33fe\\\\u3400-\\\\u4db5\\\\u4e00-\\\\u9fef\\\\ua960-\\\\ua97c\\\\uac00-\\\\ud7a3\\\\ud7b0-\\\\ud7c6\\\\ud7cb-\\\\ud7fb\\\\uf900-\\\\ufa6d\\\\ufa70-\\\\ufad9\\\\ufe10-\\\\ufe1f\\\\ufe30-\\\\ufe6f\\\\uff00-\\\\uffef]|[\\\\ud840-\\\\ud868\\\\ud86a-\\\\ud86c\\\\ud86f-\\\\ud872\\\\ud874-\\\\ud879][\\\\udc00-\\\\udfff]|\\\\ud82c[\\\\udc00-\\\\udd1e\\\\udd50-\\\\udd52\\\\udd64-\\\\udd67]|\\\\ud83c[\\\\ude00\\\\ude50-\\\\ude51]|\\\\ud869[\\\\udc00-\\\\uded6\\\\udf00-\\\\udfff]|\\\\ud86d[\\\\udc00-\\\\udf34\\\\udf40-\\\\udfff]|\\\\ud86e[\\\\udc00-\\\\udc1d\\\\udc20-\\\\udfff]|\\\\ud873[\\\\udc00-\\\\udea1\\\\udeb0-\\\\udfff]|\\\\ud87a[\\\\udc00-\\\\udfe0]|\\\\ud87e[\\\\udc00-\\\\ude1d]\",\n      go = \"[\\\\u1100-\\\\u11ff\\\\u3001-\\\\u3003\\\\u3008-\\\\u3011\\\\u3013-\\\\u301f\\\\u302e-\\\\u3030\\\\u3037\\\\u30fb\\\\u3131-\\\\u318e\\\\u3200-\\\\u321e\\\\u3260-\\\\u327e\\\\ua960-\\\\ua97c\\\\uac00-\\\\ud7a3\\\\ud7b0-\\\\ud7c6\\\\ud7cb-\\\\ud7fb\\\\ufe45-\\\\ufe46\\\\uff61-\\\\uff65\\\\uffa0-\\\\uffbe\\\\uffc2-\\\\uffc7\\\\uffca-\\\\uffcf\\\\uffd2-\\\\uffd7\\\\uffda-\\\\uffdc]\",\n      mo = \"[\\\\u0021-\\\\u002f\\\\u003a-\\\\u0040\\\\u005b-\\\\u0060\\\\u007b-\\\\u007e\\\\u00a1\\\\u00a7\\\\u00ab\\\\u00b6-\\\\u00b7\\\\u00bb\\\\u00bf\\\\u037e\\\\u0387\\\\u055a-\\\\u055f\\\\u0589-\\\\u058a\\\\u05be\\\\u05c0\\\\u05c3\\\\u05c6\\\\u05f3-\\\\u05f4\\\\u0609-\\\\u060a\\\\u060c-\\\\u060d\\\\u061b\\\\u061e-\\\\u061f\\\\u066a-\\\\u066d\\\\u06d4\\\\u0700-\\\\u070d\\\\u07f7-\\\\u07f9\\\\u0830-\\\\u083e\\\\u085e\\\\u0964-\\\\u0965\\\\u0970\\\\u09fd\\\\u0a76\\\\u0af0\\\\u0c77\\\\u0c84\\\\u0df4\\\\u0e4f\\\\u0e5a-\\\\u0e5b\\\\u0f04-\\\\u0f12\\\\u0f14\\\\u0f3a-\\\\u0f3d\\\\u0f85\\\\u0fd0-\\\\u0fd4\\\\u0fd9-\\\\u0fda\\\\u104a-\\\\u104f\\\\u10fb\\\\u1360-\\\\u1368\\\\u1400\\\\u166e\\\\u169b-\\\\u169c\\\\u16eb-\\\\u16ed\\\\u1735-\\\\u1736\\\\u17d4-\\\\u17d6\\\\u17d8-\\\\u17da\\\\u1800-\\\\u180a\\\\u1944-\\\\u1945\\\\u1a1e-\\\\u1a1f\\\\u1aa0-\\\\u1aa6\\\\u1aa8-\\\\u1aad\\\\u1b5a-\\\\u1b60\\\\u1bfc-\\\\u1bff\\\\u1c3b-\\\\u1c3f\\\\u1c7e-\\\\u1c7f\\\\u1cc0-\\\\u1cc7\\\\u1cd3\\\\u2010-\\\\u2027\\\\u2030-\\\\u2043\\\\u2045-\\\\u2051\\\\u2053-\\\\u205e\\\\u207d-\\\\u207e\\\\u208d-\\\\u208e\\\\u2308-\\\\u230b\\\\u2329-\\\\u232a\\\\u2768-\\\\u2775\\\\u27c5-\\\\u27c6\\\\u27e6-\\\\u27ef\\\\u2983-\\\\u2998\\\\u29d8-\\\\u29db\\\\u29fc-\\\\u29fd\\\\u2cf9-\\\\u2cfc\\\\u2cfe-\\\\u2cff\\\\u2d70\\\\u2e00-\\\\u2e2e\\\\u2e30-\\\\u2e4f\\\\u3001-\\\\u3003\\\\u3008-\\\\u3011\\\\u3014-\\\\u301f\\\\u3030\\\\u303d\\\\u30a0\\\\u30fb\\\\ua4fe-\\\\ua4ff\\\\ua60d-\\\\ua60f\\\\ua673\\\\ua67e\\\\ua6f2-\\\\ua6f7\\\\ua874-\\\\ua877\\\\ua8ce-\\\\ua8cf\\\\ua8f8-\\\\ua8fa\\\\ua8fc\\\\ua92e-\\\\ua92f\\\\ua95f\\\\ua9c1-\\\\ua9cd\\\\ua9de-\\\\ua9df\\\\uaa5c-\\\\uaa5f\\\\uaade-\\\\uaadf\\\\uaaf0-\\\\uaaf1\\\\uabeb\\\\ufd3e-\\\\ufd3f\\\\ufe10-\\\\ufe19\\\\ufe30-\\\\ufe52\\\\ufe54-\\\\ufe61\\\\ufe63\\\\ufe68\\\\ufe6a-\\\\ufe6b\\\\uff01-\\\\uff03\\\\uff05-\\\\uff0a\\\\uff0c-\\\\uff0f\\\\uff1a-\\\\uff1b\\\\uff1f-\\\\uff20\\\\uff3b-\\\\uff3d\\\\uff3f\\\\uff5b\\\\uff5d\\\\uff5f-\\\\uff65]|\\\\ud800[\\\\udd00-\\\\udd02\\\\udf9f\\\\udfd0]|\\\\ud801[\\\\udd6f]|\\\\ud802[\\\\udc57\\\\udd1f\\\\udd3f\\\\ude50-\\\\ude58\\\\ude7f\\\\udef0-\\\\udef6\\\\udf39-\\\\udf3f\\\\udf99-\\\\udf9c]|\\\\ud803[\\\\udf55-\\\\udf59]|\\\\ud804[\\\\udc47-\\\\udc4d\\\\udcbb-\\\\udcbc\\\\udcbe-\\\\udcc1\\\\udd40-\\\\udd43\\\\udd74-\\\\udd75\\\\uddc5-\\\\uddc8\\\\uddcd\\\\udddb\\\\udddd-\\\\udddf\\\\ude38-\\\\ude3d\\\\udea9]|\\\\ud805[\\\\udc4b-\\\\udc4f\\\\udc5b\\\\udc5d\\\\udcc6\\\\uddc1-\\\\uddd7\\\\ude41-\\\\ude43\\\\ude60-\\\\ude6c\\\\udf3c-\\\\udf3e]|\\\\ud806[\\\\udc3b\\\\udde2\\\\ude3f-\\\\ude46\\\\ude9a-\\\\ude9c\\\\ude9e-\\\\udea2]|\\\\ud807[\\\\udc41-\\\\udc45\\\\udc70-\\\\udc71\\\\udef7-\\\\udef8\\\\udfff]|\\\\ud809[\\\\udc70-\\\\udc74]|\\\\ud81a[\\\\ude6e-\\\\ude6f\\\\udef5\\\\udf37-\\\\udf3b\\\\udf44]|\\\\ud81b[\\\\ude97-\\\\ude9a\\\\udfe2]|\\\\ud82f[\\\\udc9f]|\\\\ud836[\\\\ude87-\\\\ude8b]|\\\\ud83a[\\\\udd5e-\\\\udd5f]\",\n      vo = function (e) {\n    return \"string\" == typeof e ? e.replace(function (e) {\n      e = Object.assign({\n        onlyFirst: !1\n      }, e);\n      var t = [\"[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)\", \"(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))\"].join(\"|\");\n      return new RegExp(t, e.onlyFirst ? void 0 : \"g\");\n    }(), \"\") : e;\n  },\n      bo = vo,\n      yo = vo;\n\n  bo.default = yo;\n\n  var Eo = function (e) {\n    return !Number.isNaN(e) && e >= 4352 && (e <= 4447 || 9001 === e || 9002 === e || 11904 <= e && e <= 12871 && 12351 !== e || 12880 <= e && e <= 19903 || 19968 <= e && e <= 42182 || 43360 <= e && e <= 43388 || 44032 <= e && e <= 55203 || 63744 <= e && e <= 64255 || 65040 <= e && e <= 65049 || 65072 <= e && e <= 65131 || 65281 <= e && e <= 65376 || 65504 <= e && e <= 65510 || 110592 <= e && e <= 110593 || 127488 <= e && e <= 127569 || 131072 <= e && e <= 262141);\n  },\n      Co = Eo,\n      Ao = Eo;\n\n  Co.default = Ao;\n\n  var wo = function (e) {\n    if (\"string\" != typeof (e = e.replace(/\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g, \"  \")) || 0 === e.length) return 0;\n    e = bo(e);\n\n    for (var t = 0, r = 0; r < e.length; r++) {\n      var n = e.codePointAt(r);\n      n <= 31 || n >= 127 && n <= 159 || n >= 768 && n <= 879 || (n > 65535 && r++, t += Co(n) ? 2 : 1);\n    }\n\n    return t;\n  },\n      ko = wo,\n      To = wo;\n\n  ko.default = To;\n\n  function _o(e) {\n    return function (t, r, n) {\n      var i = n && n.backwards;\n      if (!1 === r) return !1;\n\n      for (var a = t.length, o = r; o >= 0 && o < a;) {\n        var u = t.charAt(o);\n\n        if (e instanceof RegExp) {\n          if (!e.test(u)) return o;\n        } else if (-1 === e.indexOf(u)) return o;\n\n        i ? o-- : o++;\n      }\n\n      return (-1 === o || o === a) && o;\n    };\n  }\n\n  _o(/\\s/), _o(\" \\t\"), _o(\",; \\t\"), _o(/[^\\r\\n]/);\n  var So = {};\n  [[\"|>\"], [\"??\"], [\"||\"], [\"&&\"], [\"|\"], [\"^\"], [\"&\"], [\"==\", \"===\", \"!=\", \"!==\"], [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"], [\">>\", \"<<\", \">>>\"], [\"+\", \"-\"], [\"*\", \"/\", \"%\"], [\"**\"]].forEach(function (e, t) {\n    e.forEach(function (e) {\n      So[e] = t;\n    });\n  });\n\n  var Fo = Do,\n      xo = go,\n      qo = mo,\n      No = function (e) {\n    return e.length > 0 ? e[e.length - 1] : null;\n  },\n      Lo = [\"liquidNode\", \"inlineCode\", \"emphasis\", \"strong\", \"delete\", \"link\", \"linkReference\", \"image\", \"imageReference\", \"footnote\", \"footnoteReference\", \"sentence\", \"whitespace\", \"word\", \"break\", \"inlineMath\"],\n      Bo = Lo.concat([\"tableCell\", \"paragraph\", \"heading\"]),\n      Po = new RegExp(xo),\n      Oo = new RegExp(qo);\n\n  var Ro = {\n    mapAst: function (e, t) {\n      return function e(r, n, i) {\n        var a = t(r, n, i = i || []);\n        return Array.isArray(a) ? a : ((a = Object.assign({}, a)).children && (a.children = a.children.reduce(function (t, r, n) {\n          var o = e(r, n, [a].concat(i));\n          return Array.isArray(o) || (o = [o]), t.push.apply(t, o), t;\n        }, [])), a);\n      }(e, null, null);\n    },\n    splitText: function (e, t) {\n      var r = \"non-cjk\",\n          n = \"cj-letter\",\n          i = \"cjk-punctuation\",\n          a = [];\n      return (\"preserve\" === t.proseWrap ? e : e.replace(new RegExp(\"(\".concat(Fo, \")\\n(\").concat(Fo, \")\"), \"g\"), \"$1$2\")).split(/([ \\t\\n]+)/).forEach(function (e, t, u) {\n        t % 2 != 1 ? (0 !== t && t !== u.length - 1 || \"\" !== e) && e.split(new RegExp(\"(\".concat(Fo, \")\"))).forEach(function (e, t, a) {\n          (0 !== t && t !== a.length - 1 || \"\" !== e) && (t % 2 != 0 ? o(Oo.test(e) ? {\n            type: \"word\",\n            value: e,\n            kind: i,\n            hasLeadingPunctuation: !0,\n            hasTrailingPunctuation: !0\n          } : {\n            type: \"word\",\n            value: e,\n            kind: Po.test(e) ? \"k-letter\" : n,\n            hasLeadingPunctuation: !1,\n            hasTrailingPunctuation: !1\n          }) : \"\" !== e && o({\n            type: \"word\",\n            value: e,\n            kind: r,\n            hasLeadingPunctuation: Oo.test(e[0]),\n            hasTrailingPunctuation: Oo.test(No(e))\n          }));\n        }) : a.push({\n          type: \"whitespace\",\n          value: /\\n/.test(e) ? \"\\n\" : \" \"\n        });\n      }), a;\n\n      function o(e) {\n        var t,\n            o,\n            u = No(a);\n        u && \"word\" === u.type && (u.kind === r && e.kind === n && !u.hasTrailingPunctuation || u.kind === n && e.kind === r && !e.hasLeadingPunctuation ? a.push({\n          type: \"whitespace\",\n          value: \" \"\n        }) : (t = r, o = i, u.kind === t && e.kind === o || u.kind === o && e.kind === t || [u.value, e.value].some(function (e) {\n          return /\\u3000/.test(e);\n        }) || a.push({\n          type: \"whitespace\",\n          value: \"\"\n        }))), a.push(e);\n      }\n    },\n    punctuationPattern: qo,\n    getFencedCodeBlockValue: function (e, t) {\n      var r = t.slice(e.position.start.offset, e.position.end.offset),\n          n = r.match(/^\\s*/)[0].length,\n          i = new RegExp(\"^\\\\s{0,\".concat(n, \"}\")),\n          a = r.split(\"\\n\"),\n          o = r[n],\n          u = r.slice(n).match(new RegExp(\"^[\".concat(o, \"]+\")))[0],\n          s = new RegExp(\"^\\\\s{0,3}\".concat(u)).test(a[a.length - 1].slice(c(a.length - 1)));\n      return a.slice(1, s ? -1 : void 0).map(function (e, t) {\n        return e.slice(c(t + 1)).replace(i, \"\");\n      }).join(\"\\n\");\n\n      function c(t) {\n        return e.position.indent[t - 1] - 1;\n      }\n    },\n    getOrderedListItemInfo: function (e, t) {\n      var r = l(t.slice(e.position.start.offset, e.position.end.offset).match(/^\\s*(\\d+)(\\.|\\))(\\s*)/), 4);\n      return {\n        numberText: r[1],\n        marker: r[2],\n        leadingSpaces: r[3]\n      };\n    },\n    INLINE_NODE_TYPES: Lo,\n    INLINE_NODE_WRAPPER_TYPES: Bo\n  },\n      Io = /^import\\s/,\n      Uo = /^export\\s/,\n      $o = function (e) {\n    return Io.test(e);\n  },\n      Vo = function (e) {\n    return Uo.test(e);\n  },\n      Mo = function (e, t) {\n    var r = t.indexOf(\"\\n\\n\"),\n        n = t.slice(0, r);\n    if (Vo(n) || $o(n)) return e(n)({\n      type: Vo(n) ? \"export\" : \"import\",\n      value: n\n    });\n  };\n\n  Mo.locator = function (e) {\n    return Vo(e) || $o(e) ? -1 : 1;\n  };\n\n  var jo = {\n    esSyntax: function () {\n      var e = this.Parser,\n          t = e.prototype.blockTokenizers,\n          r = e.prototype.blockMethods;\n      t.esSyntax = Mo, r.splice(r.indexOf(\"paragraph\"), 0, \"esSyntax\");\n    },\n    BLOCKS_REGEX: \"[a-z\\\\.]*(\\\\.){0,1}[a-z][a-z0-9\\\\.]*\",\n    COMMENT_REGEX: \"\\x3c!----\\x3e|\\x3c!--(?:-?[^>-])(?:-?[^-])*--\\x3e\"\n  };\n\n  function zo(e, t) {\n    return e.indexOf(\"$\", t);\n  }\n\n  var Go = /^\\\\\\$/,\n      Ho = /^\\$((?:\\\\\\$|[^$])+)\\$/,\n      Xo = /^\\$\\$((?:\\\\\\$|[^$])+)\\$\\$/,\n      Wo = function (e) {\n    function t(t, r, n) {\n      var i = !0,\n          a = Xo.exec(r);\n      a || (a = Ho.exec(r), i = !1);\n      var o = Go.exec(r);\n      if (o) return !!n || t(o[0])({\n        type: \"text\",\n        value: \"$\"\n      });\n      if (\"\\\\$\" === r.slice(-2)) return t(r)({\n        type: \"text\",\n        value: r.slice(0, -2) + \"$\"\n      });\n\n      if (a) {\n        if (n) return !0;\n\n        if (a[0].includes(\"`\") && r.slice(a[0].length).includes(\"`\")) {\n          var u = r.slice(0, r.indexOf(\"`\"));\n          return t(u)({\n            type: \"text\",\n            value: u\n          });\n        }\n\n        var s = a[1].trim();\n        return t(a[0])({\n          type: \"inlineMath\",\n          value: s,\n          data: {\n            hName: \"span\",\n            hProperties: {\n              className: \"inlineMath\" + (i && e.inlineMathDouble ? \" inlineMathDouble\" : \"\")\n            },\n            hChildren: [{\n              type: \"text\",\n              value: s\n            }]\n          }\n        });\n      }\n    }\n\n    t.locator = zo;\n    var r = this.Parser,\n        n = r.prototype.inlineTokenizers,\n        i = r.prototype.inlineMethods;\n    n.math = t, i.splice(i.indexOf(\"text\"), 0, \"math\");\n    var a = this.Compiler;\n    null != a && (a.prototype.visitors.inlineMath = function (e) {\n      return \"$\" + e.value + \"$\";\n    });\n  },\n      Qo = \"\\n\",\n      Yo = \"\\t\",\n      Zo = \" \",\n      Jo = \"$\",\n      Ko = 2,\n      eu = 4,\n      tu = function (e) {\n    var t = this.Parser,\n        r = t.prototype.blockTokenizers,\n        n = t.prototype.blockMethods;\n    r.math = function (e, t, r) {\n      for (var n, i, a, o, u, s, c, l, p, f, h = t.length + 1, d = 0, D = \"\"; d < h && ((a = t.charAt(d)) === Zo || a === Yo);) D += a, d++;\n\n      if (p = d, (a = t.charAt(d)) === Jo) {\n        for (d++, i = a, n = 1, D += a; d < h && (a = t.charAt(d)) === i;) D += a, n++, d++;\n\n        if (!(n < Ko)) {\n          for (; d < h && (a = t.charAt(d)) !== Qo;) {\n            if (a === Jo) return;\n            D += a, d++;\n          }\n\n          if (a = t.charAt(d), r) return !0;\n\n          for ((f = e.now()).column += D.length, f.offset += D.length, o = c = l = u = s = \"\"; d < h;) if (u += c, s += l, c = l = \"\", (a = t.charAt(d)) === Qo) {\n            for (u ? (c += a, l += a) : D += a, o = \"\", d++; d < h && (a = t.charAt(d)) === Zo;) o += a, d++;\n\n            if (c += o, l += o.slice(p), !(o.length >= eu)) {\n              for (o = \"\"; d < h && (a = t.charAt(d)) === i;) o += a, d++;\n\n              if (c += o, l += o, !(o.length < n)) {\n                for (o = \"\"; d < h && (a = t.charAt(d)) !== Qo;) c += a, l += a, d++;\n\n                break;\n              }\n            }\n          } else u += a, l += a, d++;\n\n          D += u + c;\n          var g = ze(s);\n          return e(D)({\n            type: \"math\",\n            value: g,\n            data: {\n              hName: \"div\",\n              hProperties: {\n                className: \"math\"\n              },\n              hChildren: [{\n                type: \"text\",\n                value: g\n              }]\n            }\n          });\n        }\n      }\n    }, n.splice(n.indexOf(\"fencedCode\") + 1, 0, \"math\");\n    var i = t.prototype.interruptParagraph,\n        a = t.prototype.interruptList,\n        o = t.prototype.interruptBlockquote;\n    i.splice(i.indexOf(\"fencedCode\") + 1, 0, [\"math\"]), a.splice(a.indexOf(\"fencedCode\") + 1, 0, [\"math\"]), o.splice(o.indexOf(\"fencedCode\") + 1, 0, [\"math\"]);\n    var u = this.Compiler;\n    null != u && (u.prototype.visitors.math = function (e) {\n      return \"$$\\n\" + e.value + \"\\n$$\";\n    });\n  },\n      ru = function (e) {\n    null == e && (e = {}), tu.call(this, e), Wo.call(this, e);\n  },\n      nu = {\n    area: \"none\",\n    base: \"none\",\n    basefont: \"none\",\n    datalist: \"none\",\n    head: \"none\",\n    link: \"none\",\n    meta: \"none\",\n    noembed: \"none\",\n    noframes: \"none\",\n    param: \"none\",\n    rp: \"none\",\n    script: \"block\",\n    source: \"block\",\n    style: \"none\",\n    template: \"inline\",\n    track: \"block\",\n    title: \"none\",\n    html: \"block\",\n    body: \"block\",\n    address: \"block\",\n    blockquote: \"block\",\n    center: \"block\",\n    div: \"block\",\n    figure: \"block\",\n    figcaption: \"block\",\n    footer: \"block\",\n    form: \"block\",\n    header: \"block\",\n    hr: \"block\",\n    legend: \"block\",\n    listing: \"block\",\n    main: \"block\",\n    p: \"block\",\n    plaintext: \"block\",\n    pre: \"block\",\n    xmp: \"block\",\n    slot: \"contents\",\n    ruby: \"ruby\",\n    rt: \"ruby-text\",\n    article: \"block\",\n    aside: \"block\",\n    h1: \"block\",\n    h2: \"block\",\n    h3: \"block\",\n    h4: \"block\",\n    h5: \"block\",\n    h6: \"block\",\n    hgroup: \"block\",\n    nav: \"block\",\n    section: \"block\",\n    dir: \"block\",\n    dd: \"block\",\n    dl: \"block\",\n    dt: \"block\",\n    ol: \"block\",\n    ul: \"block\",\n    li: \"list-item\",\n    table: \"table\",\n    caption: \"table-caption\",\n    colgroup: \"table-column-group\",\n    col: \"table-column\",\n    thead: \"table-header-group\",\n    tbody: \"table-row-group\",\n    tfoot: \"table-footer-group\",\n    tr: \"table-row\",\n    td: \"table-cell\",\n    th: \"table-cell\",\n    fieldset: \"block\",\n    button: \"inline-block\",\n    video: \"inline-block\",\n    audio: \"inline-block\"\n  },\n      iu = \"inline\",\n      au = {\n    listing: \"pre\",\n    plaintext: \"pre\",\n    pre: \"pre\",\n    xmp: \"pre\",\n    nobr: \"nowrap\",\n    table: \"initial\",\n    textarea: \"pre-wrap\"\n  },\n      ou = \"normal\",\n      uu = Object.freeze({\n    __proto__: null,\n    default: [\"a\", \"abbr\", \"acronym\", \"address\", \"applet\", \"area\", \"article\", \"aside\", \"audio\", \"b\", \"base\", \"basefont\", \"bdi\", \"bdo\", \"bgsound\", \"big\", \"blink\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\", \"center\", \"cite\", \"code\", \"col\", \"colgroup\", \"command\", \"content\", \"data\", \"datalist\", \"dd\", \"del\", \"details\", \"dfn\", \"dialog\", \"dir\", \"div\", \"dl\", \"dt\", \"element\", \"em\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"font\", \"footer\", \"form\", \"frame\", \"frameset\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"iframe\", \"image\", \"img\", \"input\", \"ins\", \"isindex\", \"kbd\", \"keygen\", \"label\", \"legend\", \"li\", \"link\", \"listing\", \"main\", \"map\", \"mark\", \"marquee\", \"math\", \"menu\", \"menuitem\", \"meta\", \"meter\", \"multicol\", \"nav\", \"nextid\", \"nobr\", \"noembed\", \"noframes\", \"noscript\", \"object\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"param\", \"picture\", \"plaintext\", \"pre\", \"progress\", \"q\", \"rb\", \"rbc\", \"rp\", \"rt\", \"rtc\", \"ruby\", \"s\", \"samp\", \"script\", \"section\", \"select\", \"shadow\", \"slot\", \"small\", \"source\", \"spacer\", \"span\", \"strike\", \"strong\", \"style\", \"sub\", \"summary\", \"sup\", \"svg\", \"table\", \"tbody\", \"td\", \"template\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"time\", \"title\", \"tr\", \"track\", \"tt\", \"u\", \"ul\", \"var\", \"video\", \"wbr\", \"xmp\"]\n  }),\n      su = [\"accesskey\", \"charset\", \"coords\", \"download\", \"href\", \"hreflang\", \"name\", \"ping\", \"referrerpolicy\", \"rel\", \"rev\", \"shape\", \"tabindex\", \"target\", \"type\"],\n      cu = [\"title\"],\n      lu = [\"align\", \"alt\", \"archive\", \"code\", \"codebase\", \"height\", \"hspace\", \"name\", \"object\", \"vspace\", \"width\"],\n      pu = [\"accesskey\", \"alt\", \"coords\", \"download\", \"href\", \"hreflang\", \"nohref\", \"ping\", \"referrerpolicy\", \"rel\", \"shape\", \"tabindex\", \"target\", \"type\"],\n      fu = [\"autoplay\", \"controls\", \"crossorigin\", \"loop\", \"muted\", \"preload\", \"src\"],\n      hu = [\"href\", \"target\"],\n      du = [\"color\", \"face\", \"size\"],\n      Du = [\"dir\"],\n      gu = [\"cite\"],\n      mu = [\"alink\", \"background\", \"bgcolor\", \"link\", \"text\", \"vlink\"],\n      vu = [\"clear\"],\n      bu = [\"accesskey\", \"autofocus\", \"disabled\", \"form\", \"formaction\", \"formenctype\", \"formmethod\", \"formnovalidate\", \"formtarget\", \"name\", \"tabindex\", \"type\", \"value\"],\n      yu = [\"height\", \"width\"],\n      Eu = [\"align\"],\n      Cu = [\"align\", \"char\", \"charoff\", \"span\", \"valign\", \"width\"],\n      Au = [\"align\", \"char\", \"charoff\", \"span\", \"valign\", \"width\"],\n      wu = [\"value\"],\n      ku = [\"cite\", \"datetime\"],\n      Tu = [\"open\"],\n      _u = [\"title\"],\n      Su = [\"open\"],\n      Fu = [\"compact\"],\n      xu = [\"align\"],\n      qu = [\"compact\"],\n      Nu = [\"height\", \"src\", \"type\", \"width\"],\n      Lu = [\"disabled\", \"form\", \"name\"],\n      Bu = [\"color\", \"face\", \"size\"],\n      Pu = [\"accept\", \"accept-charset\", \"action\", \"autocomplete\", \"enctype\", \"method\", \"name\", \"novalidate\", \"target\"],\n      Ou = [\"frameborder\", \"longdesc\", \"marginheight\", \"marginwidth\", \"name\", \"noresize\", \"scrolling\", \"src\"],\n      Ru = [\"cols\", \"rows\"],\n      Iu = [\"align\"],\n      Uu = [\"align\"],\n      $u = [\"align\"],\n      Vu = [\"align\"],\n      Mu = [\"align\"],\n      ju = [\"align\"],\n      zu = [\"profile\"],\n      Gu = [\"align\", \"noshade\", \"size\", \"width\"],\n      Hu = [\"manifest\", \"version\"],\n      Xu = [\"align\", \"allow\", \"allowfullscreen\", \"allowpaymentrequest\", \"allowusermedia\", \"frameborder\", \"height\", \"longdesc\", \"marginheight\", \"marginwidth\", \"name\", \"referrerpolicy\", \"sandbox\", \"scrolling\", \"src\", \"srcdoc\", \"width\"],\n      Wu = [\"align\", \"alt\", \"border\", \"crossorigin\", \"decoding\", \"height\", \"hspace\", \"ismap\", \"longdesc\", \"name\", \"referrerpolicy\", \"sizes\", \"src\", \"srcset\", \"usemap\", \"vspace\", \"width\"],\n      Qu = [\"accept\", \"accesskey\", \"align\", \"alt\", \"autocomplete\", \"autofocus\", \"checked\", \"dirname\", \"disabled\", \"form\", \"formaction\", \"formenctype\", \"formmethod\", \"formnovalidate\", \"formtarget\", \"height\", \"ismap\", \"list\", \"max\", \"maxlength\", \"min\", \"minlength\", \"multiple\", \"name\", \"pattern\", \"placeholder\", \"readonly\", \"required\", \"size\", \"src\", \"step\", \"tabindex\", \"title\", \"type\", \"usemap\", \"value\", \"width\"],\n      Yu = [\"cite\", \"datetime\"],\n      Zu = [\"prompt\"],\n      Ju = [\"accesskey\", \"for\", \"form\"],\n      Ku = [\"accesskey\", \"align\"],\n      es = [\"type\", \"value\"],\n      ts = [\"as\", \"charset\", \"color\", \"crossorigin\", \"href\", \"hreflang\", \"imagesizes\", \"imagesrcset\", \"integrity\", \"media\", \"nonce\", \"referrerpolicy\", \"rel\", \"rev\", \"sizes\", \"target\", \"title\", \"type\"],\n      rs = [\"name\"],\n      ns = [\"compact\"],\n      is = [\"charset\", \"content\", \"http-equiv\", \"name\", \"scheme\"],\n      as = [\"high\", \"low\", \"max\", \"min\", \"optimum\", \"value\"],\n      os = [\"align\", \"archive\", \"border\", \"classid\", \"codebase\", \"codetype\", \"data\", \"declare\", \"form\", \"height\", \"hspace\", \"name\", \"standby\", \"tabindex\", \"type\", \"typemustmatch\", \"usemap\", \"vspace\", \"width\"],\n      us = [\"compact\", \"reversed\", \"start\", \"type\"],\n      ss = [\"disabled\", \"label\"],\n      cs = [\"disabled\", \"label\", \"selected\", \"value\"],\n      ls = [\"for\", \"form\", \"name\"],\n      ps = [\"align\"],\n      fs = [\"name\", \"type\", \"value\", \"valuetype\"],\n      hs = [\"width\"],\n      ds = [\"max\", \"value\"],\n      Ds = [\"cite\"],\n      gs = [\"async\", \"charset\", \"crossorigin\", \"defer\", \"integrity\", \"language\", \"nomodule\", \"nonce\", \"referrerpolicy\", \"src\", \"type\"],\n      ms = [\"autocomplete\", \"autofocus\", \"disabled\", \"form\", \"multiple\", \"name\", \"required\", \"size\", \"tabindex\"],\n      vs = [\"name\"],\n      bs = [\"media\", \"sizes\", \"src\", \"srcset\", \"type\"],\n      ys = [\"media\", \"nonce\", \"title\", \"type\"],\n      Es = [\"align\", \"bgcolor\", \"border\", \"cellpadding\", \"cellspacing\", \"frame\", \"rules\", \"summary\", \"width\"],\n      Cs = [\"align\", \"char\", \"charoff\", \"valign\"],\n      As = [\"abbr\", \"align\", \"axis\", \"bgcolor\", \"char\", \"charoff\", \"colspan\", \"headers\", \"height\", \"nowrap\", \"rowspan\", \"scope\", \"valign\", \"width\"],\n      ws = [\"accesskey\", \"autocomplete\", \"autofocus\", \"cols\", \"dirname\", \"disabled\", \"form\", \"maxlength\", \"minlength\", \"name\", \"placeholder\", \"readonly\", \"required\", \"rows\", \"tabindex\", \"wrap\"],\n      ks = [\"align\", \"char\", \"charoff\", \"valign\"],\n      Ts = [\"abbr\", \"align\", \"axis\", \"bgcolor\", \"char\", \"charoff\", \"colspan\", \"headers\", \"height\", \"nowrap\", \"rowspan\", \"scope\", \"valign\", \"width\"],\n      _s = [\"align\", \"char\", \"charoff\", \"valign\"],\n      Ss = [\"datetime\"],\n      Fs = [\"align\", \"bgcolor\", \"char\", \"charoff\", \"valign\"],\n      xs = [\"default\", \"kind\", \"label\", \"src\", \"srclang\"],\n      qs = [\"compact\", \"type\"],\n      Ns = [\"autoplay\", \"controls\", \"crossorigin\", \"height\", \"loop\", \"muted\", \"playsinline\", \"poster\", \"preload\", \"src\", \"width\"],\n      Ls = {\n    \"*\": [\"accesskey\", \"autocapitalize\", \"autofocus\", \"class\", \"contenteditable\", \"dir\", \"draggable\", \"enterkeyhint\", \"hidden\", \"id\", \"inputmode\", \"is\", \"itemid\", \"itemprop\", \"itemref\", \"itemscope\", \"itemtype\", \"lang\", \"nonce\", \"slot\", \"spellcheck\", \"style\", \"tabindex\", \"title\", \"translate\"],\n    a: su,\n    abbr: cu,\n    applet: lu,\n    area: pu,\n    audio: fu,\n    base: hu,\n    basefont: du,\n    bdo: Du,\n    blockquote: gu,\n    body: mu,\n    br: vu,\n    button: bu,\n    canvas: yu,\n    caption: Eu,\n    col: Cu,\n    colgroup: Au,\n    data: wu,\n    del: ku,\n    details: Tu,\n    dfn: _u,\n    dialog: Su,\n    dir: Fu,\n    div: xu,\n    dl: qu,\n    embed: Nu,\n    fieldset: Lu,\n    font: Bu,\n    form: Pu,\n    frame: Ou,\n    frameset: Ru,\n    h1: Iu,\n    h2: Uu,\n    h3: $u,\n    h4: Vu,\n    h5: Mu,\n    h6: ju,\n    head: zu,\n    hr: Gu,\n    html: Hu,\n    iframe: Xu,\n    img: Wu,\n    input: Qu,\n    ins: Yu,\n    isindex: Zu,\n    label: Ju,\n    legend: Ku,\n    li: es,\n    link: ts,\n    map: rs,\n    menu: ns,\n    meta: is,\n    meter: as,\n    object: os,\n    ol: us,\n    optgroup: ss,\n    option: cs,\n    output: ls,\n    p: ps,\n    param: fs,\n    pre: hs,\n    progress: ds,\n    q: Ds,\n    script: gs,\n    select: ms,\n    slot: vs,\n    source: bs,\n    style: ys,\n    table: Es,\n    tbody: Cs,\n    td: As,\n    textarea: ws,\n    tfoot: ks,\n    th: Ts,\n    thead: _s,\n    time: Ss,\n    tr: Fs,\n    track: xs,\n    ul: qs,\n    video: Ns\n  },\n      Bs = Object.freeze({\n    __proto__: null,\n    a: su,\n    abbr: cu,\n    applet: lu,\n    area: pu,\n    audio: fu,\n    base: hu,\n    basefont: du,\n    bdo: Du,\n    blockquote: gu,\n    body: mu,\n    br: vu,\n    button: bu,\n    canvas: yu,\n    caption: Eu,\n    col: Cu,\n    colgroup: Au,\n    data: wu,\n    del: ku,\n    details: Tu,\n    dfn: _u,\n    dialog: Su,\n    dir: Fu,\n    div: xu,\n    dl: qu,\n    embed: Nu,\n    fieldset: Lu,\n    font: Bu,\n    form: Pu,\n    frame: Ou,\n    frameset: Ru,\n    h1: Iu,\n    h2: Uu,\n    h3: $u,\n    h4: Vu,\n    h5: Mu,\n    h6: ju,\n    head: zu,\n    hr: Gu,\n    html: Hu,\n    iframe: Xu,\n    img: Wu,\n    input: Qu,\n    ins: Yu,\n    isindex: Zu,\n    label: Ju,\n    legend: Ku,\n    li: es,\n    link: ts,\n    map: rs,\n    menu: ns,\n    meta: is,\n    meter: as,\n    object: os,\n    ol: us,\n    optgroup: ss,\n    option: cs,\n    output: ls,\n    p: ps,\n    param: fs,\n    pre: hs,\n    progress: ds,\n    q: Ds,\n    script: gs,\n    select: ms,\n    slot: vs,\n    source: bs,\n    style: ys,\n    table: Es,\n    tbody: Cs,\n    td: As,\n    textarea: ws,\n    tfoot: ks,\n    th: Ts,\n    thead: _s,\n    time: Ss,\n    tr: Fs,\n    track: xs,\n    ul: qs,\n    video: Ns,\n    default: Ls\n  }),\n      Ps = D(uu),\n      Os = D(Bs),\n      Rs = nu,\n      Is = iu,\n      Us = au,\n      $s = ou,\n      Vs = Ms(Ps);\n\n  function Ms(e) {\n    var t = Object.create(null),\n        r = !0,\n        n = !1,\n        i = void 0;\n\n    try {\n      for (var a, o = e[Symbol.iterator](); !(r = (a = o.next()).done); r = !0) {\n        t[a.value] = !0;\n      }\n    } catch (e) {\n      n = !0, i = e;\n    } finally {\n      try {\n        r || null == o.return || o.return();\n      } finally {\n        if (n) throw i;\n      }\n    }\n\n    return t;\n  }\n\n  function js(e, t) {\n    return !(\"element\" !== e.type || \"template\" !== e.fullName || !e.attrMap.lang || \"html\" === e.attrMap.lang) || !(\"ieConditionalComment\" !== e.type || !e.lastChild || e.lastChild.isSelfClosing || e.lastChild.endSourceSpan) || \"ieConditionalComment\" === e.type && !e.complete || \"vue\" === t.parser && \"element\" === e.type && \"root\" === e.parent.type && -1 === [\"template\", \"style\", \"script\", \"html\"].indexOf(e.fullName) || !(!rc(e) || !e.children.some(function (e) {\n      return \"text\" !== e.type && \"interpolation\" !== e.type;\n    }));\n  }\n\n  function zs(e) {\n    return \"attribute\" !== e.type && !Gs(e) && !!e.parent && \"number\" == typeof e.index && 0 !== e.index && function (e) {\n      return \"comment\" === e.type && \"prettier-ignore\" === e.value.trim();\n    }(e.parent.children[e.index - 1]);\n  }\n\n  function Gs(e) {\n    return \"text\" === e.type || \"comment\" === e.type;\n  }\n\n  function Hs(e) {\n    return \"element\" === e.type && (\"script\" === e.fullName || \"style\" === e.fullName || \"svg:style\" === e.fullName);\n  }\n\n  function Xs(e) {\n    return \"yaml\" === e.type || \"toml\" === e.type;\n  }\n\n  function Ws(e) {\n    return nc(e).startsWith(\"pre\");\n  }\n\n  function Qs(e) {\n    return \"element\" === e.type && 0 !== e.children.length && (-1 !== [\"html\", \"head\", \"ul\", \"ol\", \"select\"].indexOf(e.name) || e.cssDisplay.startsWith(\"table\") && \"table-cell\" !== e.cssDisplay);\n  }\n\n  function Ys(e) {\n    return ec(e) || \"element\" === e.type && \"br\" === e.fullName || Zs(e);\n  }\n\n  function Zs(e) {\n    return Js(e) && Ks(e);\n  }\n\n  function Js(e) {\n    return e.hasLeadingSpaces && (e.prev ? e.prev.sourceSpan.end.line < e.sourceSpan.start.line : \"root\" === e.parent.type || e.parent.startSourceSpan.end.line < e.sourceSpan.start.line);\n  }\n\n  function Ks(e) {\n    return e.hasTrailingSpaces && (e.next ? e.next.sourceSpan.start.line > e.sourceSpan.end.line : \"root\" === e.parent.type || e.parent.endSourceSpan.start.line > e.sourceSpan.end.line);\n  }\n\n  function ec(e) {\n    switch (e.type) {\n      case \"ieConditionalComment\":\n      case \"comment\":\n      case \"directive\":\n        return !0;\n\n      case \"element\":\n        return -1 !== [\"script\", \"select\"].indexOf(e.name);\n    }\n\n    return !1;\n  }\n\n  function tc(e) {\n    return \"block\" === e || \"list-item\" === e || e.startsWith(\"table\");\n  }\n\n  function rc(e) {\n    return nc(e).startsWith(\"pre\");\n  }\n\n  function nc(e) {\n    return \"element\" === e.type && !e.namespace && Us[e.name] || $s;\n  }\n\n  var ic = {\n    HTML_ELEMENT_ATTRIBUTES: function (e, t) {\n      for (var r = Object.create(null), n = 0, i = Object.keys(e); n < i.length; n++) {\n        var a = i[n];\n        r[a] = t(e[a], a);\n      }\n\n      return r;\n    }(Os, Ms),\n    HTML_TAGS: Vs,\n    canHaveInterpolation: function (e) {\n      return e.children && !Hs(e);\n    },\n    countChars: function (e, t) {\n      for (var r = 0, n = 0; n < e.length; n++) e[n] === t && r++;\n\n      return r;\n    },\n    countParents: function (e) {\n      for (var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : function () {\n        return !0;\n      }, n = 0, i = e.stack.length - 1; i >= 0; i--) {\n        var a = e.stack[i];\n        a && \"object\" === t(a) && !Array.isArray(a) && r(a) && n++;\n      }\n\n      return n;\n    },\n    dedentString: function (e) {\n      var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : function (e) {\n        var t = 1 / 0,\n            r = !0,\n            n = !1,\n            i = void 0;\n\n        try {\n          for (var a, o = e.split(\"\\n\")[Symbol.iterator](); !(r = (a = o.next()).done); r = !0) {\n            var u = a.value;\n\n            if (0 !== u.length) {\n              if (/\\S/.test(u[0])) return 0;\n              var s = u.match(/^\\s*/)[0].length;\n              u.length !== s && s < t && (t = s);\n            }\n          }\n        } catch (e) {\n          n = !0, i = e;\n        } finally {\n          try {\n            r || null == o.return || o.return();\n          } finally {\n            if (n) throw i;\n          }\n        }\n\n        return t === 1 / 0 ? 0 : t;\n      }(e);\n      return 0 === t ? e : e.split(\"\\n\").map(function (e) {\n        return e.slice(t);\n      }).join(\"\\n\");\n    },\n    forceBreakChildren: Qs,\n    forceBreakContent: function (e) {\n      return Qs(e) || \"element\" === e.type && 0 !== e.children.length && (-1 !== [\"body\", \"script\", \"style\"].indexOf(e.name) || e.children.some(function (e) {\n        return function (e) {\n          return e.children && e.children.some(function (e) {\n            return \"text\" !== e.type;\n          });\n        }(e);\n      })) || e.firstChild && e.firstChild === e.lastChild && Js(e.firstChild) && (!e.lastChild.isTrailingSpaceSensitive || Ks(e.lastChild));\n    },\n    forceNextEmptyLine: function (e) {\n      return Xs(e) || e.next && e.sourceSpan.end.line + 1 < e.next.sourceSpan.start.line;\n    },\n    getLastDescendant: function e(t) {\n      return t.lastChild ? e(t.lastChild) : t;\n    },\n    getNodeCssStyleDisplay: function (e, t) {\n      if (e.prev && \"comment\" === e.prev.type) {\n        var r = e.prev.value.match(/^\\s*display:\\s*([a-z]+)\\s*$/);\n        if (r) return r[1];\n      }\n\n      var n = !1;\n\n      if (\"element\" === e.type && \"svg\" === e.namespace) {\n        if (!function (e, t) {\n          for (var r = e; r;) {\n            if (t(r)) return !0;\n            r = r.parent;\n          }\n\n          return !1;\n        }(e, function (e) {\n          return \"svg:foreignObject\" === e.fullName;\n        })) return \"svg\" === e.name ? \"inline-block\" : \"block\";\n        n = !0;\n      }\n\n      switch (t.htmlWhitespaceSensitivity) {\n        case \"strict\":\n          return \"inline\";\n\n        case \"ignore\":\n          return \"block\";\n\n        default:\n          return \"element\" === e.type && (!e.namespace || n) && Rs[e.name] || Is;\n      }\n    },\n    getNodeCssStyleWhiteSpace: nc,\n    getPrettierIgnoreAttributeCommentData: function (e) {\n      var t = e.trim().match(/^prettier-ignore-attribute(?:\\s+([^]+))?$/);\n      return !!t && (!t[1] || t[1].split(/\\s+/));\n    },\n    hasPrettierIgnore: zs,\n    identity: function (e) {\n      return e;\n    },\n    inferScriptParser: function (e) {\n      if (\"script\" === e.name && !e.attrMap.src) {\n        if (!e.attrMap.lang && !e.attrMap.type || \"module\" === e.attrMap.type || \"text/javascript\" === e.attrMap.type || \"text/babel\" === e.attrMap.type || \"application/javascript\" === e.attrMap.type) return \"babel\";\n        if (\"application/x-typescript\" === e.attrMap.type || \"ts\" === e.attrMap.lang || \"tsx\" === e.attrMap.lang) return \"typescript\";\n        if (\"text/markdown\" === e.attrMap.type) return \"markdown\";\n        if (e.attrMap.type.endsWith(\"json\") || e.attrMap.type.endsWith(\"importmap\")) return \"json\";\n      }\n\n      if (\"style\" === e.name) {\n        if (!e.attrMap.lang || \"postcss\" === e.attrMap.lang || \"css\" === e.attrMap.lang) return \"css\";\n        if (\"scss\" === e.attrMap.lang) return \"scss\";\n        if (\"less\" === e.attrMap.lang) return \"less\";\n      }\n\n      return null;\n    },\n    isDanglingSpaceSensitiveNode: function (e) {\n      return !tc(t = e.cssDisplay) && \"inline-block\" !== t && !Hs(e);\n      var t;\n    },\n    isFrontMatterNode: Xs,\n    isIndentationSensitiveNode: Ws,\n    isLeadingSpaceSensitiveNode: function (e) {\n      var t = function () {\n        if (Xs(e)) return !1;\n        if ((\"text\" === e.type || \"interpolation\" === e.type) && e.prev && (\"text\" === e.prev.type || \"interpolation\" === e.prev.type)) return !0;\n        if (!e.parent || \"none\" === e.parent.cssDisplay) return !1;\n        if (rc(e.parent)) return !0;\n        if (!e.prev && (\"root\" === e.parent.type || Hs(e.parent) || (t = e.parent.cssDisplay, tc(t) || \"inline-block\" === t))) return !1;\n        var t;\n        if (e.prev && !function (e) {\n          return !tc(e);\n        }(e.prev.cssDisplay)) return !1;\n        return !0;\n      }();\n\n      return t && !e.prev && e.parent && e.parent.tagDefinition && e.parent.tagDefinition.ignoreFirstLf ? \"interpolation\" === e.type : t;\n    },\n    isPreLikeNode: rc,\n    isScriptLikeTag: Hs,\n    isTextLikeNode: Gs,\n    isTrailingSpaceSensitiveNode: function (e) {\n      return !Xs(e) && (!(\"text\" !== e.type && \"interpolation\" !== e.type || !e.next || \"text\" !== e.next.type && \"interpolation\" !== e.next.type) || !(!e.parent || \"none\" === e.parent.cssDisplay) && (!!rc(e.parent) || !(!e.next && (\"root\" === e.parent.type || Hs(e.parent) || (t = e.parent.cssDisplay, tc(t) || \"inline-block\" === t))) && !(e.next && !function (e) {\n        return !tc(e);\n      }(e.next.cssDisplay))));\n      var t;\n    },\n    isWhitespaceSensitiveNode: function (e) {\n      return Hs(e) || \"interpolation\" === e.type || Ws(e);\n    },\n    normalizeParts: function (e) {\n      for (var t = [], r = e.slice(); 0 !== r.length;) {\n        var n = r.shift();\n        n && (\"concat\" !== n.type ? 0 === t.length || \"string\" != typeof t[t.length - 1] || \"string\" != typeof n ? t.push(n) : t.push(t.pop() + n) : Array.prototype.unshift.apply(r, n.parts));\n      }\n\n      return t;\n    },\n    preferHardlineAsLeadingSpaces: function (e) {\n      return ec(e) || e.prev && Ys(e.prev) || Zs(e);\n    },\n    preferHardlineAsTrailingSpaces: Ys,\n    shouldNotPrintClosingTag: function (e, t) {\n      return !e.isSelfClosing && !e.endSourceSpan && (zs(e) || js(e.parent, t));\n    },\n    shouldPreserveContent: js,\n    unescapeQuoteEntities: function (e) {\n      return e.replace(/&apos;/g, \"'\").replace(/&quot;/g, '\"');\n    }\n  };\n\n  var ac = function (e) {\n    return /^\\s*<!--\\s*@(format|prettier)\\s*-->/.test(e);\n  };\n\n  var oc = function (e, t) {\n    var r = new SyntaxError(e + \" (\" + t.start.line + \":\" + t.start.column + \")\");\n    return r.loc = t, r;\n  },\n      uc = {\n    attrs: !0,\n    children: !0\n  },\n      sc = function () {\n    function e() {\n      var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n      r(this, e);\n\n      for (var n = 0, i = Object.keys(t); n < i.length; n++) {\n        var a = i[n],\n            o = t[a];\n        a in uc ? this._setNodes(a, o) : this[a] = o;\n      }\n    }\n\n    return i(e, [{\n      key: \"_setNodes\",\n      value: function (e, t) {\n        t !== this[e] && (this[e] = lc(t, this), \"attrs\" === e && pc(this, {\n          attrMap: this[e].reduce(function (e, t) {\n            return e[t.fullName] = t.value, e;\n          }, Object.create(null))\n        }));\n      }\n    }, {\n      key: \"map\",\n      value: function (t) {\n        var r = null;\n\n        for (var n in uc) {\n          var i = this[n];\n\n          if (i) {\n            var a = cc(i, function (e) {\n              return e.map(t);\n            });\n            r !== i && (r || (r = new e()), r._setNodes(n, a));\n          }\n        }\n\n        if (r) {\n          for (var o in this) o in uc || (r[o] = this[o]);\n\n          pc(r, {\n            index: this.index,\n            siblings: this.siblings,\n            prev: this.prev,\n            next: this.next,\n            parent: this.parent\n          });\n        }\n\n        return t(r || this);\n      }\n    }, {\n      key: \"clone\",\n      value: function (t) {\n        return new e(t ? Object.assign({}, this, t) : this);\n      }\n    }, {\n      key: \"firstChild\",\n      get: function () {\n        return this.children && 0 !== this.children.length ? this.children[0] : null;\n      }\n    }, {\n      key: \"lastChild\",\n      get: function () {\n        return this.children && 0 !== this.children.length ? this.children[this.children.length - 1] : null;\n      }\n    }, {\n      key: \"rawName\",\n      get: function () {\n        return this.hasExplicitNamespace ? this.fullName : this.name;\n      }\n    }, {\n      key: \"fullName\",\n      get: function () {\n        return this.namespace ? this.namespace + \":\" + this.name : this.name;\n      }\n    }]), e;\n  }();\n\n  function cc(e, t) {\n    var r = e.map(t);\n    return r.some(function (t, r) {\n      return t !== e[r];\n    }) ? r : e;\n  }\n\n  function lc(e, t) {\n    for (var r = e.map(function (e) {\n      return e instanceof sc ? e.clone() : new sc(e);\n    }), n = null, i = r[0], a = r[1] || null, o = 0; o < r.length; o++) pc(i, {\n      index: o,\n      siblings: r,\n      prev: n,\n      next: a,\n      parent: t\n    }), n = i, i = a, a = r[o + 2] || null;\n\n    return r;\n  }\n\n  function pc(e, t) {\n    var r = Object.keys(t).reduce(function (e, r) {\n      return e[r] = {\n        value: t[r],\n        enumerable: !1\n      }, e;\n    }, {});\n    Object.defineProperties(e, r);\n  }\n\n  var fc = {\n    Node: sc\n  },\n      hc = [[/^(\\[if([^\\]]*?)\\]>)([\\s\\S]*?)<!\\s*\\[endif\\]$/, function (e, t, r) {\n    var n = l(r, 4),\n        i = n[1],\n        a = n[2],\n        o = n[3],\n        u = \"\\x3c!--\".length + i.length,\n        s = e.sourceSpan.start.moveBy(u),\n        c = s.moveBy(o.length),\n        p = e.sourceSpan.constructor,\n        f = l(function () {\n      try {\n        return [!0, t(o, s).children];\n      } catch (e) {\n        return [!1, [{\n          type: \"text\",\n          value: o,\n          sourceSpan: new p(s, c)\n        }]];\n      }\n    }(), 2),\n        h = f[0],\n        d = f[1];\n    return {\n      type: \"ieConditionalComment\",\n      complete: h,\n      children: d,\n      condition: a.trim().replace(/\\s+/g, \" \"),\n      sourceSpan: e.sourceSpan,\n      startSourceSpan: new p(e.sourceSpan.start, s),\n      endSourceSpan: new p(c, e.sourceSpan.end)\n    };\n  }], [/^\\[if([^\\]]*?)\\]><!$/, function (e, t, r) {\n    return {\n      type: \"ieConditionalStartComment\",\n      condition: l(r, 2)[1].trim().replace(/\\s+/g, \" \"),\n      sourceSpan: e.sourceSpan\n    };\n  }], [/^<!\\s*\\[endif\\]$/, function (e) {\n    return {\n      type: \"ieConditionalEndComment\",\n      sourceSpan: e.sourceSpan\n    };\n  }]];\n\n  var dc = function (e, t) {\n    if (e.value) {\n      var r,\n          n = !0,\n          i = !1,\n          a = void 0;\n\n      try {\n        for (var o, u = hc[Symbol.iterator](); !(n = (o = u.next()).done); n = !0) {\n          var s = l(o.value, 2),\n              c = s[0],\n              p = s[1];\n          if (r = e.value.match(c)) return p(e, t, r);\n        }\n      } catch (e) {\n        i = !0, a = e;\n      } finally {\n        try {\n          n || null == u.return || u.return();\n        } finally {\n          if (i) throw a;\n        }\n      }\n    }\n\n    return null;\n  },\n      Dc = d(function (e, t) {\n    function r(e) {\n      if (\":\" != e[0]) return [null, e];\n      var t = e.indexOf(\":\", 1);\n      if (-1 == t) throw new Error('Unsupported format \"'.concat(e, '\" expecting \":namespace:name\"'));\n      return [e.slice(1, t), e.slice(t + 1)];\n    }\n    /**\n         * @license\n         * Copyright Google Inc. All Rights Reserved.\n         *\n         * Use of this source code is governed by an MIT-style license that can be\n         * found in the LICENSE file at https://angular.io/license\n         */\n\n\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    }), function (e) {\n      e[e.RAW_TEXT = 0] = \"RAW_TEXT\", e[e.ESCAPABLE_RAW_TEXT = 1] = \"ESCAPABLE_RAW_TEXT\", e[e.PARSABLE_DATA = 2] = \"PARSABLE_DATA\";\n    }(t.TagContentType || (t.TagContentType = {})), t.splitNsName = r, t.isNgContainer = function (e) {\n      return \"ng-container\" === r(e)[1];\n    }, t.isNgContent = function (e) {\n      return \"ng-content\" === r(e)[1];\n    }, t.isNgTemplate = function (e) {\n      return \"ng-template\" === r(e)[1];\n    }, t.getNsPrefix = function (e) {\n      return null === e ? null : r(e)[0];\n    }, t.mergeNsAndName = function (e, t) {\n      return e ? \":\".concat(e, \":\").concat(t) : t;\n    }, t.NAMED_ENTITIES = {\n      Aacute: \"Á\",\n      aacute: \"á\",\n      Abreve: \"Ă\",\n      abreve: \"ă\",\n      ac: \"∾\",\n      acd: \"∿\",\n      acE: \"∾̳\",\n      Acirc: \"Â\",\n      acirc: \"â\",\n      acute: \"´\",\n      Acy: \"А\",\n      acy: \"а\",\n      AElig: \"Æ\",\n      aelig: \"æ\",\n      af: \"⁡\",\n      Afr: \"𝔄\",\n      afr: \"𝔞\",\n      Agrave: \"À\",\n      agrave: \"à\",\n      alefsym: \"ℵ\",\n      aleph: \"ℵ\",\n      Alpha: \"Α\",\n      alpha: \"α\",\n      Amacr: \"Ā\",\n      amacr: \"ā\",\n      amalg: \"⨿\",\n      AMP: \"&\",\n      amp: \"&\",\n      And: \"⩓\",\n      and: \"∧\",\n      andand: \"⩕\",\n      andd: \"⩜\",\n      andslope: \"⩘\",\n      andv: \"⩚\",\n      ang: \"∠\",\n      ange: \"⦤\",\n      angle: \"∠\",\n      angmsd: \"∡\",\n      angmsdaa: \"⦨\",\n      angmsdab: \"⦩\",\n      angmsdac: \"⦪\",\n      angmsdad: \"⦫\",\n      angmsdae: \"⦬\",\n      angmsdaf: \"⦭\",\n      angmsdag: \"⦮\",\n      angmsdah: \"⦯\",\n      angrt: \"∟\",\n      angrtvb: \"⊾\",\n      angrtvbd: \"⦝\",\n      angsph: \"∢\",\n      angst: \"Å\",\n      angzarr: \"⍼\",\n      Aogon: \"Ą\",\n      aogon: \"ą\",\n      Aopf: \"𝔸\",\n      aopf: \"𝕒\",\n      ap: \"≈\",\n      apacir: \"⩯\",\n      apE: \"⩰\",\n      ape: \"≊\",\n      apid: \"≋\",\n      apos: \"'\",\n      ApplyFunction: \"⁡\",\n      approx: \"≈\",\n      approxeq: \"≊\",\n      Aring: \"Å\",\n      aring: \"å\",\n      Ascr: \"𝒜\",\n      ascr: \"𝒶\",\n      Assign: \"≔\",\n      ast: \"*\",\n      asymp: \"≈\",\n      asympeq: \"≍\",\n      Atilde: \"Ã\",\n      atilde: \"ã\",\n      Auml: \"Ä\",\n      auml: \"ä\",\n      awconint: \"∳\",\n      awint: \"⨑\",\n      backcong: \"≌\",\n      backepsilon: \"϶\",\n      backprime: \"‵\",\n      backsim: \"∽\",\n      backsimeq: \"⋍\",\n      Backslash: \"∖\",\n      Barv: \"⫧\",\n      barvee: \"⊽\",\n      Barwed: \"⌆\",\n      barwed: \"⌅\",\n      barwedge: \"⌅\",\n      bbrk: \"⎵\",\n      bbrktbrk: \"⎶\",\n      bcong: \"≌\",\n      Bcy: \"Б\",\n      bcy: \"б\",\n      bdquo: \"„\",\n      becaus: \"∵\",\n      Because: \"∵\",\n      because: \"∵\",\n      bemptyv: \"⦰\",\n      bepsi: \"϶\",\n      bernou: \"ℬ\",\n      Bernoullis: \"ℬ\",\n      Beta: \"Β\",\n      beta: \"β\",\n      beth: \"ℶ\",\n      between: \"≬\",\n      Bfr: \"𝔅\",\n      bfr: \"𝔟\",\n      bigcap: \"⋂\",\n      bigcirc: \"◯\",\n      bigcup: \"⋃\",\n      bigodot: \"⨀\",\n      bigoplus: \"⨁\",\n      bigotimes: \"⨂\",\n      bigsqcup: \"⨆\",\n      bigstar: \"★\",\n      bigtriangledown: \"▽\",\n      bigtriangleup: \"△\",\n      biguplus: \"⨄\",\n      bigvee: \"⋁\",\n      bigwedge: \"⋀\",\n      bkarow: \"⤍\",\n      blacklozenge: \"⧫\",\n      blacksquare: \"▪\",\n      blacktriangle: \"▴\",\n      blacktriangledown: \"▾\",\n      blacktriangleleft: \"◂\",\n      blacktriangleright: \"▸\",\n      blank: \"␣\",\n      blk12: \"▒\",\n      blk14: \"░\",\n      blk34: \"▓\",\n      block: \"█\",\n      bne: \"=⃥\",\n      bnequiv: \"≡⃥\",\n      bNot: \"⫭\",\n      bnot: \"⌐\",\n      Bopf: \"𝔹\",\n      bopf: \"𝕓\",\n      bot: \"⊥\",\n      bottom: \"⊥\",\n      bowtie: \"⋈\",\n      boxbox: \"⧉\",\n      boxDL: \"╗\",\n      boxDl: \"╖\",\n      boxdL: \"╕\",\n      boxdl: \"┐\",\n      boxDR: \"╔\",\n      boxDr: \"╓\",\n      boxdR: \"╒\",\n      boxdr: \"┌\",\n      boxH: \"═\",\n      boxh: \"─\",\n      boxHD: \"╦\",\n      boxHd: \"╤\",\n      boxhD: \"╥\",\n      boxhd: \"┬\",\n      boxHU: \"╩\",\n      boxHu: \"╧\",\n      boxhU: \"╨\",\n      boxhu: \"┴\",\n      boxminus: \"⊟\",\n      boxplus: \"⊞\",\n      boxtimes: \"⊠\",\n      boxUL: \"╝\",\n      boxUl: \"╜\",\n      boxuL: \"╛\",\n      boxul: \"┘\",\n      boxUR: \"╚\",\n      boxUr: \"╙\",\n      boxuR: \"╘\",\n      boxur: \"└\",\n      boxV: \"║\",\n      boxv: \"│\",\n      boxVH: \"╬\",\n      boxVh: \"╫\",\n      boxvH: \"╪\",\n      boxvh: \"┼\",\n      boxVL: \"╣\",\n      boxVl: \"╢\",\n      boxvL: \"╡\",\n      boxvl: \"┤\",\n      boxVR: \"╠\",\n      boxVr: \"╟\",\n      boxvR: \"╞\",\n      boxvr: \"├\",\n      bprime: \"‵\",\n      Breve: \"˘\",\n      breve: \"˘\",\n      brvbar: \"¦\",\n      Bscr: \"ℬ\",\n      bscr: \"𝒷\",\n      bsemi: \"⁏\",\n      bsim: \"∽\",\n      bsime: \"⋍\",\n      bsol: \"\\\\\",\n      bsolb: \"⧅\",\n      bsolhsub: \"⟈\",\n      bull: \"•\",\n      bullet: \"•\",\n      bump: \"≎\",\n      bumpE: \"⪮\",\n      bumpe: \"≏\",\n      Bumpeq: \"≎\",\n      bumpeq: \"≏\",\n      Cacute: \"Ć\",\n      cacute: \"ć\",\n      Cap: \"⋒\",\n      cap: \"∩\",\n      capand: \"⩄\",\n      capbrcup: \"⩉\",\n      capcap: \"⩋\",\n      capcup: \"⩇\",\n      capdot: \"⩀\",\n      CapitalDifferentialD: \"ⅅ\",\n      caps: \"∩︀\",\n      caret: \"⁁\",\n      caron: \"ˇ\",\n      Cayleys: \"ℭ\",\n      ccaps: \"⩍\",\n      Ccaron: \"Č\",\n      ccaron: \"č\",\n      Ccedil: \"Ç\",\n      ccedil: \"ç\",\n      Ccirc: \"Ĉ\",\n      ccirc: \"ĉ\",\n      Cconint: \"∰\",\n      ccups: \"⩌\",\n      ccupssm: \"⩐\",\n      Cdot: \"Ċ\",\n      cdot: \"ċ\",\n      cedil: \"¸\",\n      Cedilla: \"¸\",\n      cemptyv: \"⦲\",\n      cent: \"¢\",\n      CenterDot: \"·\",\n      centerdot: \"·\",\n      Cfr: \"ℭ\",\n      cfr: \"𝔠\",\n      CHcy: \"Ч\",\n      chcy: \"ч\",\n      check: \"✓\",\n      checkmark: \"✓\",\n      Chi: \"Χ\",\n      chi: \"χ\",\n      cir: \"○\",\n      circ: \"ˆ\",\n      circeq: \"≗\",\n      circlearrowleft: \"↺\",\n      circlearrowright: \"↻\",\n      circledast: \"⊛\",\n      circledcirc: \"⊚\",\n      circleddash: \"⊝\",\n      CircleDot: \"⊙\",\n      circledR: \"®\",\n      circledS: \"Ⓢ\",\n      CircleMinus: \"⊖\",\n      CirclePlus: \"⊕\",\n      CircleTimes: \"⊗\",\n      cirE: \"⧃\",\n      cire: \"≗\",\n      cirfnint: \"⨐\",\n      cirmid: \"⫯\",\n      cirscir: \"⧂\",\n      ClockwiseContourIntegral: \"∲\",\n      CloseCurlyDoubleQuote: \"”\",\n      CloseCurlyQuote: \"’\",\n      clubs: \"♣\",\n      clubsuit: \"♣\",\n      Colon: \"∷\",\n      colon: \":\",\n      Colone: \"⩴\",\n      colone: \"≔\",\n      coloneq: \"≔\",\n      comma: \",\",\n      commat: \"@\",\n      comp: \"∁\",\n      compfn: \"∘\",\n      complement: \"∁\",\n      complexes: \"ℂ\",\n      cong: \"≅\",\n      congdot: \"⩭\",\n      Congruent: \"≡\",\n      Conint: \"∯\",\n      conint: \"∮\",\n      ContourIntegral: \"∮\",\n      Copf: \"ℂ\",\n      copf: \"𝕔\",\n      coprod: \"∐\",\n      Coproduct: \"∐\",\n      COPY: \"©\",\n      copy: \"©\",\n      copysr: \"℗\",\n      CounterClockwiseContourIntegral: \"∳\",\n      crarr: \"↵\",\n      Cross: \"⨯\",\n      cross: \"✗\",\n      Cscr: \"𝒞\",\n      cscr: \"𝒸\",\n      csub: \"⫏\",\n      csube: \"⫑\",\n      csup: \"⫐\",\n      csupe: \"⫒\",\n      ctdot: \"⋯\",\n      cudarrl: \"⤸\",\n      cudarrr: \"⤵\",\n      cuepr: \"⋞\",\n      cuesc: \"⋟\",\n      cularr: \"↶\",\n      cularrp: \"⤽\",\n      Cup: \"⋓\",\n      cup: \"∪\",\n      cupbrcap: \"⩈\",\n      CupCap: \"≍\",\n      cupcap: \"⩆\",\n      cupcup: \"⩊\",\n      cupdot: \"⊍\",\n      cupor: \"⩅\",\n      cups: \"∪︀\",\n      curarr: \"↷\",\n      curarrm: \"⤼\",\n      curlyeqprec: \"⋞\",\n      curlyeqsucc: \"⋟\",\n      curlyvee: \"⋎\",\n      curlywedge: \"⋏\",\n      curren: \"¤\",\n      curvearrowleft: \"↶\",\n      curvearrowright: \"↷\",\n      cuvee: \"⋎\",\n      cuwed: \"⋏\",\n      cwconint: \"∲\",\n      cwint: \"∱\",\n      cylcty: \"⌭\",\n      Dagger: \"‡\",\n      dagger: \"†\",\n      daleth: \"ℸ\",\n      Darr: \"↡\",\n      dArr: \"⇓\",\n      darr: \"↓\",\n      dash: \"‐\",\n      Dashv: \"⫤\",\n      dashv: \"⊣\",\n      dbkarow: \"⤏\",\n      dblac: \"˝\",\n      Dcaron: \"Ď\",\n      dcaron: \"ď\",\n      Dcy: \"Д\",\n      dcy: \"д\",\n      DD: \"ⅅ\",\n      dd: \"ⅆ\",\n      ddagger: \"‡\",\n      ddarr: \"⇊\",\n      DDotrahd: \"⤑\",\n      ddotseq: \"⩷\",\n      deg: \"°\",\n      Del: \"∇\",\n      Delta: \"Δ\",\n      delta: \"δ\",\n      demptyv: \"⦱\",\n      dfisht: \"⥿\",\n      Dfr: \"𝔇\",\n      dfr: \"𝔡\",\n      dHar: \"⥥\",\n      dharl: \"⇃\",\n      dharr: \"⇂\",\n      DiacriticalAcute: \"´\",\n      DiacriticalDot: \"˙\",\n      DiacriticalDoubleAcute: \"˝\",\n      DiacriticalGrave: \"`\",\n      DiacriticalTilde: \"˜\",\n      diam: \"⋄\",\n      Diamond: \"⋄\",\n      diamond: \"⋄\",\n      diamondsuit: \"♦\",\n      diams: \"♦\",\n      die: \"¨\",\n      DifferentialD: \"ⅆ\",\n      digamma: \"ϝ\",\n      disin: \"⋲\",\n      div: \"÷\",\n      divide: \"÷\",\n      divideontimes: \"⋇\",\n      divonx: \"⋇\",\n      DJcy: \"Ђ\",\n      djcy: \"ђ\",\n      dlcorn: \"⌞\",\n      dlcrop: \"⌍\",\n      dollar: \"$\",\n      Dopf: \"𝔻\",\n      dopf: \"𝕕\",\n      Dot: \"¨\",\n      dot: \"˙\",\n      DotDot: \"⃜\",\n      doteq: \"≐\",\n      doteqdot: \"≑\",\n      DotEqual: \"≐\",\n      dotminus: \"∸\",\n      dotplus: \"∔\",\n      dotsquare: \"⊡\",\n      doublebarwedge: \"⌆\",\n      DoubleContourIntegral: \"∯\",\n      DoubleDot: \"¨\",\n      DoubleDownArrow: \"⇓\",\n      DoubleLeftArrow: \"⇐\",\n      DoubleLeftRightArrow: \"⇔\",\n      DoubleLeftTee: \"⫤\",\n      DoubleLongLeftArrow: \"⟸\",\n      DoubleLongLeftRightArrow: \"⟺\",\n      DoubleLongRightArrow: \"⟹\",\n      DoubleRightArrow: \"⇒\",\n      DoubleRightTee: \"⊨\",\n      DoubleUpArrow: \"⇑\",\n      DoubleUpDownArrow: \"⇕\",\n      DoubleVerticalBar: \"∥\",\n      DownArrow: \"↓\",\n      Downarrow: \"⇓\",\n      downarrow: \"↓\",\n      DownArrowBar: \"⤓\",\n      DownArrowUpArrow: \"⇵\",\n      DownBreve: \"̑\",\n      downdownarrows: \"⇊\",\n      downharpoonleft: \"⇃\",\n      downharpoonright: \"⇂\",\n      DownLeftRightVector: \"⥐\",\n      DownLeftTeeVector: \"⥞\",\n      DownLeftVector: \"↽\",\n      DownLeftVectorBar: \"⥖\",\n      DownRightTeeVector: \"⥟\",\n      DownRightVector: \"⇁\",\n      DownRightVectorBar: \"⥗\",\n      DownTee: \"⊤\",\n      DownTeeArrow: \"↧\",\n      drbkarow: \"⤐\",\n      drcorn: \"⌟\",\n      drcrop: \"⌌\",\n      Dscr: \"𝒟\",\n      dscr: \"𝒹\",\n      DScy: \"Ѕ\",\n      dscy: \"ѕ\",\n      dsol: \"⧶\",\n      Dstrok: \"Đ\",\n      dstrok: \"đ\",\n      dtdot: \"⋱\",\n      dtri: \"▿\",\n      dtrif: \"▾\",\n      duarr: \"⇵\",\n      duhar: \"⥯\",\n      dwangle: \"⦦\",\n      DZcy: \"Џ\",\n      dzcy: \"џ\",\n      dzigrarr: \"⟿\",\n      Eacute: \"É\",\n      eacute: \"é\",\n      easter: \"⩮\",\n      Ecaron: \"Ě\",\n      ecaron: \"ě\",\n      ecir: \"≖\",\n      Ecirc: \"Ê\",\n      ecirc: \"ê\",\n      ecolon: \"≕\",\n      Ecy: \"Э\",\n      ecy: \"э\",\n      eDDot: \"⩷\",\n      Edot: \"Ė\",\n      eDot: \"≑\",\n      edot: \"ė\",\n      ee: \"ⅇ\",\n      efDot: \"≒\",\n      Efr: \"𝔈\",\n      efr: \"𝔢\",\n      eg: \"⪚\",\n      Egrave: \"È\",\n      egrave: \"è\",\n      egs: \"⪖\",\n      egsdot: \"⪘\",\n      el: \"⪙\",\n      Element: \"∈\",\n      elinters: \"⏧\",\n      ell: \"ℓ\",\n      els: \"⪕\",\n      elsdot: \"⪗\",\n      Emacr: \"Ē\",\n      emacr: \"ē\",\n      empty: \"∅\",\n      emptyset: \"∅\",\n      EmptySmallSquare: \"◻\",\n      emptyv: \"∅\",\n      EmptyVerySmallSquare: \"▫\",\n      emsp: \" \",\n      emsp13: \" \",\n      emsp14: \" \",\n      ENG: \"Ŋ\",\n      eng: \"ŋ\",\n      ensp: \" \",\n      Eogon: \"Ę\",\n      eogon: \"ę\",\n      Eopf: \"𝔼\",\n      eopf: \"𝕖\",\n      epar: \"⋕\",\n      eparsl: \"⧣\",\n      eplus: \"⩱\",\n      epsi: \"ε\",\n      Epsilon: \"Ε\",\n      epsilon: \"ε\",\n      epsiv: \"ϵ\",\n      eqcirc: \"≖\",\n      eqcolon: \"≕\",\n      eqsim: \"≂\",\n      eqslantgtr: \"⪖\",\n      eqslantless: \"⪕\",\n      Equal: \"⩵\",\n      equals: \"=\",\n      EqualTilde: \"≂\",\n      equest: \"≟\",\n      Equilibrium: \"⇌\",\n      equiv: \"≡\",\n      equivDD: \"⩸\",\n      eqvparsl: \"⧥\",\n      erarr: \"⥱\",\n      erDot: \"≓\",\n      Escr: \"ℰ\",\n      escr: \"ℯ\",\n      esdot: \"≐\",\n      Esim: \"⩳\",\n      esim: \"≂\",\n      Eta: \"Η\",\n      eta: \"η\",\n      ETH: \"Ð\",\n      eth: \"ð\",\n      Euml: \"Ë\",\n      euml: \"ë\",\n      euro: \"€\",\n      excl: \"!\",\n      exist: \"∃\",\n      Exists: \"∃\",\n      expectation: \"ℰ\",\n      ExponentialE: \"ⅇ\",\n      exponentiale: \"ⅇ\",\n      fallingdotseq: \"≒\",\n      Fcy: \"Ф\",\n      fcy: \"ф\",\n      female: \"♀\",\n      ffilig: \"ﬃ\",\n      fflig: \"ﬀ\",\n      ffllig: \"ﬄ\",\n      Ffr: \"𝔉\",\n      ffr: \"𝔣\",\n      filig: \"ﬁ\",\n      FilledSmallSquare: \"◼\",\n      FilledVerySmallSquare: \"▪\",\n      fjlig: \"fj\",\n      flat: \"♭\",\n      fllig: \"ﬂ\",\n      fltns: \"▱\",\n      fnof: \"ƒ\",\n      Fopf: \"𝔽\",\n      fopf: \"𝕗\",\n      ForAll: \"∀\",\n      forall: \"∀\",\n      fork: \"⋔\",\n      forkv: \"⫙\",\n      Fouriertrf: \"ℱ\",\n      fpartint: \"⨍\",\n      frac12: \"½\",\n      frac13: \"⅓\",\n      frac14: \"¼\",\n      frac15: \"⅕\",\n      frac16: \"⅙\",\n      frac18: \"⅛\",\n      frac23: \"⅔\",\n      frac25: \"⅖\",\n      frac34: \"¾\",\n      frac35: \"⅗\",\n      frac38: \"⅜\",\n      frac45: \"⅘\",\n      frac56: \"⅚\",\n      frac58: \"⅝\",\n      frac78: \"⅞\",\n      frasl: \"⁄\",\n      frown: \"⌢\",\n      Fscr: \"ℱ\",\n      fscr: \"𝒻\",\n      gacute: \"ǵ\",\n      Gamma: \"Γ\",\n      gamma: \"γ\",\n      Gammad: \"Ϝ\",\n      gammad: \"ϝ\",\n      gap: \"⪆\",\n      Gbreve: \"Ğ\",\n      gbreve: \"ğ\",\n      Gcedil: \"Ģ\",\n      Gcirc: \"Ĝ\",\n      gcirc: \"ĝ\",\n      Gcy: \"Г\",\n      gcy: \"г\",\n      Gdot: \"Ġ\",\n      gdot: \"ġ\",\n      gE: \"≧\",\n      ge: \"≥\",\n      gEl: \"⪌\",\n      gel: \"⋛\",\n      geq: \"≥\",\n      geqq: \"≧\",\n      geqslant: \"⩾\",\n      ges: \"⩾\",\n      gescc: \"⪩\",\n      gesdot: \"⪀\",\n      gesdoto: \"⪂\",\n      gesdotol: \"⪄\",\n      gesl: \"⋛︀\",\n      gesles: \"⪔\",\n      Gfr: \"𝔊\",\n      gfr: \"𝔤\",\n      Gg: \"⋙\",\n      gg: \"≫\",\n      ggg: \"⋙\",\n      gimel: \"ℷ\",\n      GJcy: \"Ѓ\",\n      gjcy: \"ѓ\",\n      gl: \"≷\",\n      gla: \"⪥\",\n      glE: \"⪒\",\n      glj: \"⪤\",\n      gnap: \"⪊\",\n      gnapprox: \"⪊\",\n      gnE: \"≩\",\n      gne: \"⪈\",\n      gneq: \"⪈\",\n      gneqq: \"≩\",\n      gnsim: \"⋧\",\n      Gopf: \"𝔾\",\n      gopf: \"𝕘\",\n      grave: \"`\",\n      GreaterEqual: \"≥\",\n      GreaterEqualLess: \"⋛\",\n      GreaterFullEqual: \"≧\",\n      GreaterGreater: \"⪢\",\n      GreaterLess: \"≷\",\n      GreaterSlantEqual: \"⩾\",\n      GreaterTilde: \"≳\",\n      Gscr: \"𝒢\",\n      gscr: \"ℊ\",\n      gsim: \"≳\",\n      gsime: \"⪎\",\n      gsiml: \"⪐\",\n      GT: \">\",\n      Gt: \"≫\",\n      gt: \">\",\n      gtcc: \"⪧\",\n      gtcir: \"⩺\",\n      gtdot: \"⋗\",\n      gtlPar: \"⦕\",\n      gtquest: \"⩼\",\n      gtrapprox: \"⪆\",\n      gtrarr: \"⥸\",\n      gtrdot: \"⋗\",\n      gtreqless: \"⋛\",\n      gtreqqless: \"⪌\",\n      gtrless: \"≷\",\n      gtrsim: \"≳\",\n      gvertneqq: \"≩︀\",\n      gvnE: \"≩︀\",\n      Hacek: \"ˇ\",\n      hairsp: \" \",\n      half: \"½\",\n      hamilt: \"ℋ\",\n      HARDcy: \"Ъ\",\n      hardcy: \"ъ\",\n      hArr: \"⇔\",\n      harr: \"↔\",\n      harrcir: \"⥈\",\n      harrw: \"↭\",\n      Hat: \"^\",\n      hbar: \"ℏ\",\n      Hcirc: \"Ĥ\",\n      hcirc: \"ĥ\",\n      hearts: \"♥\",\n      heartsuit: \"♥\",\n      hellip: \"…\",\n      hercon: \"⊹\",\n      Hfr: \"ℌ\",\n      hfr: \"𝔥\",\n      HilbertSpace: \"ℋ\",\n      hksearow: \"⤥\",\n      hkswarow: \"⤦\",\n      hoarr: \"⇿\",\n      homtht: \"∻\",\n      hookleftarrow: \"↩\",\n      hookrightarrow: \"↪\",\n      Hopf: \"ℍ\",\n      hopf: \"𝕙\",\n      horbar: \"―\",\n      HorizontalLine: \"─\",\n      Hscr: \"ℋ\",\n      hscr: \"𝒽\",\n      hslash: \"ℏ\",\n      Hstrok: \"Ħ\",\n      hstrok: \"ħ\",\n      HumpDownHump: \"≎\",\n      HumpEqual: \"≏\",\n      hybull: \"⁃\",\n      hyphen: \"‐\",\n      Iacute: \"Í\",\n      iacute: \"í\",\n      ic: \"⁣\",\n      Icirc: \"Î\",\n      icirc: \"î\",\n      Icy: \"И\",\n      icy: \"и\",\n      Idot: \"İ\",\n      IEcy: \"Е\",\n      iecy: \"е\",\n      iexcl: \"¡\",\n      iff: \"⇔\",\n      Ifr: \"ℑ\",\n      ifr: \"𝔦\",\n      Igrave: \"Ì\",\n      igrave: \"ì\",\n      ii: \"ⅈ\",\n      iiiint: \"⨌\",\n      iiint: \"∭\",\n      iinfin: \"⧜\",\n      iiota: \"℩\",\n      IJlig: \"Ĳ\",\n      ijlig: \"ĳ\",\n      Im: \"ℑ\",\n      Imacr: \"Ī\",\n      imacr: \"ī\",\n      image: \"ℑ\",\n      ImaginaryI: \"ⅈ\",\n      imagline: \"ℐ\",\n      imagpart: \"ℑ\",\n      imath: \"ı\",\n      imof: \"⊷\",\n      imped: \"Ƶ\",\n      Implies: \"⇒\",\n      in: \"∈\",\n      incare: \"℅\",\n      infin: \"∞\",\n      infintie: \"⧝\",\n      inodot: \"ı\",\n      Int: \"∬\",\n      int: \"∫\",\n      intcal: \"⊺\",\n      integers: \"ℤ\",\n      Integral: \"∫\",\n      intercal: \"⊺\",\n      Intersection: \"⋂\",\n      intlarhk: \"⨗\",\n      intprod: \"⨼\",\n      InvisibleComma: \"⁣\",\n      InvisibleTimes: \"⁢\",\n      IOcy: \"Ё\",\n      iocy: \"ё\",\n      Iogon: \"Į\",\n      iogon: \"į\",\n      Iopf: \"𝕀\",\n      iopf: \"𝕚\",\n      Iota: \"Ι\",\n      iota: \"ι\",\n      iprod: \"⨼\",\n      iquest: \"¿\",\n      Iscr: \"ℐ\",\n      iscr: \"𝒾\",\n      isin: \"∈\",\n      isindot: \"⋵\",\n      isinE: \"⋹\",\n      isins: \"⋴\",\n      isinsv: \"⋳\",\n      isinv: \"∈\",\n      it: \"⁢\",\n      Itilde: \"Ĩ\",\n      itilde: \"ĩ\",\n      Iukcy: \"І\",\n      iukcy: \"і\",\n      Iuml: \"Ï\",\n      iuml: \"ï\",\n      Jcirc: \"Ĵ\",\n      jcirc: \"ĵ\",\n      Jcy: \"Й\",\n      jcy: \"й\",\n      Jfr: \"𝔍\",\n      jfr: \"𝔧\",\n      jmath: \"ȷ\",\n      Jopf: \"𝕁\",\n      jopf: \"𝕛\",\n      Jscr: \"𝒥\",\n      jscr: \"𝒿\",\n      Jsercy: \"Ј\",\n      jsercy: \"ј\",\n      Jukcy: \"Є\",\n      jukcy: \"є\",\n      Kappa: \"Κ\",\n      kappa: \"κ\",\n      kappav: \"ϰ\",\n      Kcedil: \"Ķ\",\n      kcedil: \"ķ\",\n      Kcy: \"К\",\n      kcy: \"к\",\n      Kfr: \"𝔎\",\n      kfr: \"𝔨\",\n      kgreen: \"ĸ\",\n      KHcy: \"Х\",\n      khcy: \"х\",\n      KJcy: \"Ќ\",\n      kjcy: \"ќ\",\n      Kopf: \"𝕂\",\n      kopf: \"𝕜\",\n      Kscr: \"𝒦\",\n      kscr: \"𝓀\",\n      lAarr: \"⇚\",\n      Lacute: \"Ĺ\",\n      lacute: \"ĺ\",\n      laemptyv: \"⦴\",\n      lagran: \"ℒ\",\n      Lambda: \"Λ\",\n      lambda: \"λ\",\n      Lang: \"⟪\",\n      lang: \"⟨\",\n      langd: \"⦑\",\n      langle: \"⟨\",\n      lap: \"⪅\",\n      Laplacetrf: \"ℒ\",\n      laquo: \"«\",\n      Larr: \"↞\",\n      lArr: \"⇐\",\n      larr: \"←\",\n      larrb: \"⇤\",\n      larrbfs: \"⤟\",\n      larrfs: \"⤝\",\n      larrhk: \"↩\",\n      larrlp: \"↫\",\n      larrpl: \"⤹\",\n      larrsim: \"⥳\",\n      larrtl: \"↢\",\n      lat: \"⪫\",\n      lAtail: \"⤛\",\n      latail: \"⤙\",\n      late: \"⪭\",\n      lates: \"⪭︀\",\n      lBarr: \"⤎\",\n      lbarr: \"⤌\",\n      lbbrk: \"❲\",\n      lbrace: \"{\",\n      lbrack: \"[\",\n      lbrke: \"⦋\",\n      lbrksld: \"⦏\",\n      lbrkslu: \"⦍\",\n      Lcaron: \"Ľ\",\n      lcaron: \"ľ\",\n      Lcedil: \"Ļ\",\n      lcedil: \"ļ\",\n      lceil: \"⌈\",\n      lcub: \"{\",\n      Lcy: \"Л\",\n      lcy: \"л\",\n      ldca: \"⤶\",\n      ldquo: \"“\",\n      ldquor: \"„\",\n      ldrdhar: \"⥧\",\n      ldrushar: \"⥋\",\n      ldsh: \"↲\",\n      lE: \"≦\",\n      le: \"≤\",\n      LeftAngleBracket: \"⟨\",\n      LeftArrow: \"←\",\n      Leftarrow: \"⇐\",\n      leftarrow: \"←\",\n      LeftArrowBar: \"⇤\",\n      LeftArrowRightArrow: \"⇆\",\n      leftarrowtail: \"↢\",\n      LeftCeiling: \"⌈\",\n      LeftDoubleBracket: \"⟦\",\n      LeftDownTeeVector: \"⥡\",\n      LeftDownVector: \"⇃\",\n      LeftDownVectorBar: \"⥙\",\n      LeftFloor: \"⌊\",\n      leftharpoondown: \"↽\",\n      leftharpoonup: \"↼\",\n      leftleftarrows: \"⇇\",\n      LeftRightArrow: \"↔\",\n      Leftrightarrow: \"⇔\",\n      leftrightarrow: \"↔\",\n      leftrightarrows: \"⇆\",\n      leftrightharpoons: \"⇋\",\n      leftrightsquigarrow: \"↭\",\n      LeftRightVector: \"⥎\",\n      LeftTee: \"⊣\",\n      LeftTeeArrow: \"↤\",\n      LeftTeeVector: \"⥚\",\n      leftthreetimes: \"⋋\",\n      LeftTriangle: \"⊲\",\n      LeftTriangleBar: \"⧏\",\n      LeftTriangleEqual: \"⊴\",\n      LeftUpDownVector: \"⥑\",\n      LeftUpTeeVector: \"⥠\",\n      LeftUpVector: \"↿\",\n      LeftUpVectorBar: \"⥘\",\n      LeftVector: \"↼\",\n      LeftVectorBar: \"⥒\",\n      lEg: \"⪋\",\n      leg: \"⋚\",\n      leq: \"≤\",\n      leqq: \"≦\",\n      leqslant: \"⩽\",\n      les: \"⩽\",\n      lescc: \"⪨\",\n      lesdot: \"⩿\",\n      lesdoto: \"⪁\",\n      lesdotor: \"⪃\",\n      lesg: \"⋚︀\",\n      lesges: \"⪓\",\n      lessapprox: \"⪅\",\n      lessdot: \"⋖\",\n      lesseqgtr: \"⋚\",\n      lesseqqgtr: \"⪋\",\n      LessEqualGreater: \"⋚\",\n      LessFullEqual: \"≦\",\n      LessGreater: \"≶\",\n      lessgtr: \"≶\",\n      LessLess: \"⪡\",\n      lesssim: \"≲\",\n      LessSlantEqual: \"⩽\",\n      LessTilde: \"≲\",\n      lfisht: \"⥼\",\n      lfloor: \"⌊\",\n      Lfr: \"𝔏\",\n      lfr: \"𝔩\",\n      lg: \"≶\",\n      lgE: \"⪑\",\n      lHar: \"⥢\",\n      lhard: \"↽\",\n      lharu: \"↼\",\n      lharul: \"⥪\",\n      lhblk: \"▄\",\n      LJcy: \"Љ\",\n      ljcy: \"љ\",\n      Ll: \"⋘\",\n      ll: \"≪\",\n      llarr: \"⇇\",\n      llcorner: \"⌞\",\n      Lleftarrow: \"⇚\",\n      llhard: \"⥫\",\n      lltri: \"◺\",\n      Lmidot: \"Ŀ\",\n      lmidot: \"ŀ\",\n      lmoust: \"⎰\",\n      lmoustache: \"⎰\",\n      lnap: \"⪉\",\n      lnapprox: \"⪉\",\n      lnE: \"≨\",\n      lne: \"⪇\",\n      lneq: \"⪇\",\n      lneqq: \"≨\",\n      lnsim: \"⋦\",\n      loang: \"⟬\",\n      loarr: \"⇽\",\n      lobrk: \"⟦\",\n      LongLeftArrow: \"⟵\",\n      Longleftarrow: \"⟸\",\n      longleftarrow: \"⟵\",\n      LongLeftRightArrow: \"⟷\",\n      Longleftrightarrow: \"⟺\",\n      longleftrightarrow: \"⟷\",\n      longmapsto: \"⟼\",\n      LongRightArrow: \"⟶\",\n      Longrightarrow: \"⟹\",\n      longrightarrow: \"⟶\",\n      looparrowleft: \"↫\",\n      looparrowright: \"↬\",\n      lopar: \"⦅\",\n      Lopf: \"𝕃\",\n      lopf: \"𝕝\",\n      loplus: \"⨭\",\n      lotimes: \"⨴\",\n      lowast: \"∗\",\n      lowbar: \"_\",\n      LowerLeftArrow: \"↙\",\n      LowerRightArrow: \"↘\",\n      loz: \"◊\",\n      lozenge: \"◊\",\n      lozf: \"⧫\",\n      lpar: \"(\",\n      lparlt: \"⦓\",\n      lrarr: \"⇆\",\n      lrcorner: \"⌟\",\n      lrhar: \"⇋\",\n      lrhard: \"⥭\",\n      lrm: \"‎\",\n      lrtri: \"⊿\",\n      lsaquo: \"‹\",\n      Lscr: \"ℒ\",\n      lscr: \"𝓁\",\n      Lsh: \"↰\",\n      lsh: \"↰\",\n      lsim: \"≲\",\n      lsime: \"⪍\",\n      lsimg: \"⪏\",\n      lsqb: \"[\",\n      lsquo: \"‘\",\n      lsquor: \"‚\",\n      Lstrok: \"Ł\",\n      lstrok: \"ł\",\n      LT: \"<\",\n      Lt: \"≪\",\n      lt: \"<\",\n      ltcc: \"⪦\",\n      ltcir: \"⩹\",\n      ltdot: \"⋖\",\n      lthree: \"⋋\",\n      ltimes: \"⋉\",\n      ltlarr: \"⥶\",\n      ltquest: \"⩻\",\n      ltri: \"◃\",\n      ltrie: \"⊴\",\n      ltrif: \"◂\",\n      ltrPar: \"⦖\",\n      lurdshar: \"⥊\",\n      luruhar: \"⥦\",\n      lvertneqq: \"≨︀\",\n      lvnE: \"≨︀\",\n      macr: \"¯\",\n      male: \"♂\",\n      malt: \"✠\",\n      maltese: \"✠\",\n      Map: \"⤅\",\n      map: \"↦\",\n      mapsto: \"↦\",\n      mapstodown: \"↧\",\n      mapstoleft: \"↤\",\n      mapstoup: \"↥\",\n      marker: \"▮\",\n      mcomma: \"⨩\",\n      Mcy: \"М\",\n      mcy: \"м\",\n      mdash: \"—\",\n      mDDot: \"∺\",\n      measuredangle: \"∡\",\n      MediumSpace: \" \",\n      Mellintrf: \"ℳ\",\n      Mfr: \"𝔐\",\n      mfr: \"𝔪\",\n      mho: \"℧\",\n      micro: \"µ\",\n      mid: \"∣\",\n      midast: \"*\",\n      midcir: \"⫰\",\n      middot: \"·\",\n      minus: \"−\",\n      minusb: \"⊟\",\n      minusd: \"∸\",\n      minusdu: \"⨪\",\n      MinusPlus: \"∓\",\n      mlcp: \"⫛\",\n      mldr: \"…\",\n      mnplus: \"∓\",\n      models: \"⊧\",\n      Mopf: \"𝕄\",\n      mopf: \"𝕞\",\n      mp: \"∓\",\n      Mscr: \"ℳ\",\n      mscr: \"𝓂\",\n      mstpos: \"∾\",\n      Mu: \"Μ\",\n      mu: \"μ\",\n      multimap: \"⊸\",\n      mumap: \"⊸\",\n      nabla: \"∇\",\n      Nacute: \"Ń\",\n      nacute: \"ń\",\n      nang: \"∠⃒\",\n      nap: \"≉\",\n      napE: \"⩰̸\",\n      napid: \"≋̸\",\n      napos: \"ŉ\",\n      napprox: \"≉\",\n      natur: \"♮\",\n      natural: \"♮\",\n      naturals: \"ℕ\",\n      nbsp: \" \",\n      nbump: \"≎̸\",\n      nbumpe: \"≏̸\",\n      ncap: \"⩃\",\n      Ncaron: \"Ň\",\n      ncaron: \"ň\",\n      Ncedil: \"Ņ\",\n      ncedil: \"ņ\",\n      ncong: \"≇\",\n      ncongdot: \"⩭̸\",\n      ncup: \"⩂\",\n      Ncy: \"Н\",\n      ncy: \"н\",\n      ndash: \"–\",\n      ne: \"≠\",\n      nearhk: \"⤤\",\n      neArr: \"⇗\",\n      nearr: \"↗\",\n      nearrow: \"↗\",\n      nedot: \"≐̸\",\n      NegativeMediumSpace: \"​\",\n      NegativeThickSpace: \"​\",\n      NegativeThinSpace: \"​\",\n      NegativeVeryThinSpace: \"​\",\n      nequiv: \"≢\",\n      nesear: \"⤨\",\n      nesim: \"≂̸\",\n      NestedGreaterGreater: \"≫\",\n      NestedLessLess: \"≪\",\n      NewLine: \"\\n\",\n      nexist: \"∄\",\n      nexists: \"∄\",\n      Nfr: \"𝔑\",\n      nfr: \"𝔫\",\n      ngE: \"≧̸\",\n      nge: \"≱\",\n      ngeq: \"≱\",\n      ngeqq: \"≧̸\",\n      ngeqslant: \"⩾̸\",\n      nges: \"⩾̸\",\n      nGg: \"⋙̸\",\n      ngsim: \"≵\",\n      nGt: \"≫⃒\",\n      ngt: \"≯\",\n      ngtr: \"≯\",\n      nGtv: \"≫̸\",\n      nhArr: \"⇎\",\n      nharr: \"↮\",\n      nhpar: \"⫲\",\n      ni: \"∋\",\n      nis: \"⋼\",\n      nisd: \"⋺\",\n      niv: \"∋\",\n      NJcy: \"Њ\",\n      njcy: \"њ\",\n      nlArr: \"⇍\",\n      nlarr: \"↚\",\n      nldr: \"‥\",\n      nlE: \"≦̸\",\n      nle: \"≰\",\n      nLeftarrow: \"⇍\",\n      nleftarrow: \"↚\",\n      nLeftrightarrow: \"⇎\",\n      nleftrightarrow: \"↮\",\n      nleq: \"≰\",\n      nleqq: \"≦̸\",\n      nleqslant: \"⩽̸\",\n      nles: \"⩽̸\",\n      nless: \"≮\",\n      nLl: \"⋘̸\",\n      nlsim: \"≴\",\n      nLt: \"≪⃒\",\n      nlt: \"≮\",\n      nltri: \"⋪\",\n      nltrie: \"⋬\",\n      nLtv: \"≪̸\",\n      nmid: \"∤\",\n      NoBreak: \"⁠\",\n      NonBreakingSpace: \" \",\n      Nopf: \"ℕ\",\n      nopf: \"𝕟\",\n      Not: \"⫬\",\n      not: \"¬\",\n      NotCongruent: \"≢\",\n      NotCupCap: \"≭\",\n      NotDoubleVerticalBar: \"∦\",\n      NotElement: \"∉\",\n      NotEqual: \"≠\",\n      NotEqualTilde: \"≂̸\",\n      NotExists: \"∄\",\n      NotGreater: \"≯\",\n      NotGreaterEqual: \"≱\",\n      NotGreaterFullEqual: \"≧̸\",\n      NotGreaterGreater: \"≫̸\",\n      NotGreaterLess: \"≹\",\n      NotGreaterSlantEqual: \"⩾̸\",\n      NotGreaterTilde: \"≵\",\n      NotHumpDownHump: \"≎̸\",\n      NotHumpEqual: \"≏̸\",\n      notin: \"∉\",\n      notindot: \"⋵̸\",\n      notinE: \"⋹̸\",\n      notinva: \"∉\",\n      notinvb: \"⋷\",\n      notinvc: \"⋶\",\n      NotLeftTriangle: \"⋪\",\n      NotLeftTriangleBar: \"⧏̸\",\n      NotLeftTriangleEqual: \"⋬\",\n      NotLess: \"≮\",\n      NotLessEqual: \"≰\",\n      NotLessGreater: \"≸\",\n      NotLessLess: \"≪̸\",\n      NotLessSlantEqual: \"⩽̸\",\n      NotLessTilde: \"≴\",\n      NotNestedGreaterGreater: \"⪢̸\",\n      NotNestedLessLess: \"⪡̸\",\n      notni: \"∌\",\n      notniva: \"∌\",\n      notnivb: \"⋾\",\n      notnivc: \"⋽\",\n      NotPrecedes: \"⊀\",\n      NotPrecedesEqual: \"⪯̸\",\n      NotPrecedesSlantEqual: \"⋠\",\n      NotReverseElement: \"∌\",\n      NotRightTriangle: \"⋫\",\n      NotRightTriangleBar: \"⧐̸\",\n      NotRightTriangleEqual: \"⋭\",\n      NotSquareSubset: \"⊏̸\",\n      NotSquareSubsetEqual: \"⋢\",\n      NotSquareSuperset: \"⊐̸\",\n      NotSquareSupersetEqual: \"⋣\",\n      NotSubset: \"⊂⃒\",\n      NotSubsetEqual: \"⊈\",\n      NotSucceeds: \"⊁\",\n      NotSucceedsEqual: \"⪰̸\",\n      NotSucceedsSlantEqual: \"⋡\",\n      NotSucceedsTilde: \"≿̸\",\n      NotSuperset: \"⊃⃒\",\n      NotSupersetEqual: \"⊉\",\n      NotTilde: \"≁\",\n      NotTildeEqual: \"≄\",\n      NotTildeFullEqual: \"≇\",\n      NotTildeTilde: \"≉\",\n      NotVerticalBar: \"∤\",\n      npar: \"∦\",\n      nparallel: \"∦\",\n      nparsl: \"⫽⃥\",\n      npart: \"∂̸\",\n      npolint: \"⨔\",\n      npr: \"⊀\",\n      nprcue: \"⋠\",\n      npre: \"⪯̸\",\n      nprec: \"⊀\",\n      npreceq: \"⪯̸\",\n      nrArr: \"⇏\",\n      nrarr: \"↛\",\n      nrarrc: \"⤳̸\",\n      nrarrw: \"↝̸\",\n      nRightarrow: \"⇏\",\n      nrightarrow: \"↛\",\n      nrtri: \"⋫\",\n      nrtrie: \"⋭\",\n      nsc: \"⊁\",\n      nsccue: \"⋡\",\n      nsce: \"⪰̸\",\n      Nscr: \"𝒩\",\n      nscr: \"𝓃\",\n      nshortmid: \"∤\",\n      nshortparallel: \"∦\",\n      nsim: \"≁\",\n      nsime: \"≄\",\n      nsimeq: \"≄\",\n      nsmid: \"∤\",\n      nspar: \"∦\",\n      nsqsube: \"⋢\",\n      nsqsupe: \"⋣\",\n      nsub: \"⊄\",\n      nsubE: \"⫅̸\",\n      nsube: \"⊈\",\n      nsubset: \"⊂⃒\",\n      nsubseteq: \"⊈\",\n      nsubseteqq: \"⫅̸\",\n      nsucc: \"⊁\",\n      nsucceq: \"⪰̸\",\n      nsup: \"⊅\",\n      nsupE: \"⫆̸\",\n      nsupe: \"⊉\",\n      nsupset: \"⊃⃒\",\n      nsupseteq: \"⊉\",\n      nsupseteqq: \"⫆̸\",\n      ntgl: \"≹\",\n      Ntilde: \"Ñ\",\n      ntilde: \"ñ\",\n      ntlg: \"≸\",\n      ntriangleleft: \"⋪\",\n      ntrianglelefteq: \"⋬\",\n      ntriangleright: \"⋫\",\n      ntrianglerighteq: \"⋭\",\n      Nu: \"Ν\",\n      nu: \"ν\",\n      num: \"#\",\n      numero: \"№\",\n      numsp: \" \",\n      nvap: \"≍⃒\",\n      nVDash: \"⊯\",\n      nVdash: \"⊮\",\n      nvDash: \"⊭\",\n      nvdash: \"⊬\",\n      nvge: \"≥⃒\",\n      nvgt: \">⃒\",\n      nvHarr: \"⤄\",\n      nvinfin: \"⧞\",\n      nvlArr: \"⤂\",\n      nvle: \"≤⃒\",\n      nvlt: \"<⃒\",\n      nvltrie: \"⊴⃒\",\n      nvrArr: \"⤃\",\n      nvrtrie: \"⊵⃒\",\n      nvsim: \"∼⃒\",\n      nwarhk: \"⤣\",\n      nwArr: \"⇖\",\n      nwarr: \"↖\",\n      nwarrow: \"↖\",\n      nwnear: \"⤧\",\n      Oacute: \"Ó\",\n      oacute: \"ó\",\n      oast: \"⊛\",\n      ocir: \"⊚\",\n      Ocirc: \"Ô\",\n      ocirc: \"ô\",\n      Ocy: \"О\",\n      ocy: \"о\",\n      odash: \"⊝\",\n      Odblac: \"Ő\",\n      odblac: \"ő\",\n      odiv: \"⨸\",\n      odot: \"⊙\",\n      odsold: \"⦼\",\n      OElig: \"Œ\",\n      oelig: \"œ\",\n      ofcir: \"⦿\",\n      Ofr: \"𝔒\",\n      ofr: \"𝔬\",\n      ogon: \"˛\",\n      Ograve: \"Ò\",\n      ograve: \"ò\",\n      ogt: \"⧁\",\n      ohbar: \"⦵\",\n      ohm: \"Ω\",\n      oint: \"∮\",\n      olarr: \"↺\",\n      olcir: \"⦾\",\n      olcross: \"⦻\",\n      oline: \"‾\",\n      olt: \"⧀\",\n      Omacr: \"Ō\",\n      omacr: \"ō\",\n      Omega: \"Ω\",\n      omega: \"ω\",\n      Omicron: \"Ο\",\n      omicron: \"ο\",\n      omid: \"⦶\",\n      ominus: \"⊖\",\n      Oopf: \"𝕆\",\n      oopf: \"𝕠\",\n      opar: \"⦷\",\n      OpenCurlyDoubleQuote: \"“\",\n      OpenCurlyQuote: \"‘\",\n      operp: \"⦹\",\n      oplus: \"⊕\",\n      Or: \"⩔\",\n      or: \"∨\",\n      orarr: \"↻\",\n      ord: \"⩝\",\n      order: \"ℴ\",\n      orderof: \"ℴ\",\n      ordf: \"ª\",\n      ordm: \"º\",\n      origof: \"⊶\",\n      oror: \"⩖\",\n      orslope: \"⩗\",\n      orv: \"⩛\",\n      oS: \"Ⓢ\",\n      Oscr: \"𝒪\",\n      oscr: \"ℴ\",\n      Oslash: \"Ø\",\n      oslash: \"ø\",\n      osol: \"⊘\",\n      Otilde: \"Õ\",\n      otilde: \"õ\",\n      Otimes: \"⨷\",\n      otimes: \"⊗\",\n      otimesas: \"⨶\",\n      Ouml: \"Ö\",\n      ouml: \"ö\",\n      ovbar: \"⌽\",\n      OverBar: \"‾\",\n      OverBrace: \"⏞\",\n      OverBracket: \"⎴\",\n      OverParenthesis: \"⏜\",\n      par: \"∥\",\n      para: \"¶\",\n      parallel: \"∥\",\n      parsim: \"⫳\",\n      parsl: \"⫽\",\n      part: \"∂\",\n      PartialD: \"∂\",\n      Pcy: \"П\",\n      pcy: \"п\",\n      percnt: \"%\",\n      period: \".\",\n      permil: \"‰\",\n      perp: \"⊥\",\n      pertenk: \"‱\",\n      Pfr: \"𝔓\",\n      pfr: \"𝔭\",\n      Phi: \"Φ\",\n      phi: \"φ\",\n      phiv: \"ϕ\",\n      phmmat: \"ℳ\",\n      phone: \"☎\",\n      Pi: \"Π\",\n      pi: \"π\",\n      pitchfork: \"⋔\",\n      piv: \"ϖ\",\n      planck: \"ℏ\",\n      planckh: \"ℎ\",\n      plankv: \"ℏ\",\n      plus: \"+\",\n      plusacir: \"⨣\",\n      plusb: \"⊞\",\n      pluscir: \"⨢\",\n      plusdo: \"∔\",\n      plusdu: \"⨥\",\n      pluse: \"⩲\",\n      PlusMinus: \"±\",\n      plusmn: \"±\",\n      plussim: \"⨦\",\n      plustwo: \"⨧\",\n      pm: \"±\",\n      Poincareplane: \"ℌ\",\n      pointint: \"⨕\",\n      Popf: \"ℙ\",\n      popf: \"𝕡\",\n      pound: \"£\",\n      Pr: \"⪻\",\n      pr: \"≺\",\n      prap: \"⪷\",\n      prcue: \"≼\",\n      prE: \"⪳\",\n      pre: \"⪯\",\n      prec: \"≺\",\n      precapprox: \"⪷\",\n      preccurlyeq: \"≼\",\n      Precedes: \"≺\",\n      PrecedesEqual: \"⪯\",\n      PrecedesSlantEqual: \"≼\",\n      PrecedesTilde: \"≾\",\n      preceq: \"⪯\",\n      precnapprox: \"⪹\",\n      precneqq: \"⪵\",\n      precnsim: \"⋨\",\n      precsim: \"≾\",\n      Prime: \"″\",\n      prime: \"′\",\n      primes: \"ℙ\",\n      prnap: \"⪹\",\n      prnE: \"⪵\",\n      prnsim: \"⋨\",\n      prod: \"∏\",\n      Product: \"∏\",\n      profalar: \"⌮\",\n      profline: \"⌒\",\n      profsurf: \"⌓\",\n      prop: \"∝\",\n      Proportion: \"∷\",\n      Proportional: \"∝\",\n      propto: \"∝\",\n      prsim: \"≾\",\n      prurel: \"⊰\",\n      Pscr: \"𝒫\",\n      pscr: \"𝓅\",\n      Psi: \"Ψ\",\n      psi: \"ψ\",\n      puncsp: \" \",\n      Qfr: \"𝔔\",\n      qfr: \"𝔮\",\n      qint: \"⨌\",\n      Qopf: \"ℚ\",\n      qopf: \"𝕢\",\n      qprime: \"⁗\",\n      Qscr: \"𝒬\",\n      qscr: \"𝓆\",\n      quaternions: \"ℍ\",\n      quatint: \"⨖\",\n      quest: \"?\",\n      questeq: \"≟\",\n      QUOT: '\"',\n      quot: '\"',\n      rAarr: \"⇛\",\n      race: \"∽̱\",\n      Racute: \"Ŕ\",\n      racute: \"ŕ\",\n      radic: \"√\",\n      raemptyv: \"⦳\",\n      Rang: \"⟫\",\n      rang: \"⟩\",\n      rangd: \"⦒\",\n      range: \"⦥\",\n      rangle: \"⟩\",\n      raquo: \"»\",\n      Rarr: \"↠\",\n      rArr: \"⇒\",\n      rarr: \"→\",\n      rarrap: \"⥵\",\n      rarrb: \"⇥\",\n      rarrbfs: \"⤠\",\n      rarrc: \"⤳\",\n      rarrfs: \"⤞\",\n      rarrhk: \"↪\",\n      rarrlp: \"↬\",\n      rarrpl: \"⥅\",\n      rarrsim: \"⥴\",\n      Rarrtl: \"⤖\",\n      rarrtl: \"↣\",\n      rarrw: \"↝\",\n      rAtail: \"⤜\",\n      ratail: \"⤚\",\n      ratio: \"∶\",\n      rationals: \"ℚ\",\n      RBarr: \"⤐\",\n      rBarr: \"⤏\",\n      rbarr: \"⤍\",\n      rbbrk: \"❳\",\n      rbrace: \"}\",\n      rbrack: \"]\",\n      rbrke: \"⦌\",\n      rbrksld: \"⦎\",\n      rbrkslu: \"⦐\",\n      Rcaron: \"Ř\",\n      rcaron: \"ř\",\n      Rcedil: \"Ŗ\",\n      rcedil: \"ŗ\",\n      rceil: \"⌉\",\n      rcub: \"}\",\n      Rcy: \"Р\",\n      rcy: \"р\",\n      rdca: \"⤷\",\n      rdldhar: \"⥩\",\n      rdquo: \"”\",\n      rdquor: \"”\",\n      rdsh: \"↳\",\n      Re: \"ℜ\",\n      real: \"ℜ\",\n      realine: \"ℛ\",\n      realpart: \"ℜ\",\n      reals: \"ℝ\",\n      rect: \"▭\",\n      REG: \"®\",\n      reg: \"®\",\n      ReverseElement: \"∋\",\n      ReverseEquilibrium: \"⇋\",\n      ReverseUpEquilibrium: \"⥯\",\n      rfisht: \"⥽\",\n      rfloor: \"⌋\",\n      Rfr: \"ℜ\",\n      rfr: \"𝔯\",\n      rHar: \"⥤\",\n      rhard: \"⇁\",\n      rharu: \"⇀\",\n      rharul: \"⥬\",\n      Rho: \"Ρ\",\n      rho: \"ρ\",\n      rhov: \"ϱ\",\n      RightAngleBracket: \"⟩\",\n      RightArrow: \"→\",\n      Rightarrow: \"⇒\",\n      rightarrow: \"→\",\n      RightArrowBar: \"⇥\",\n      RightArrowLeftArrow: \"⇄\",\n      rightarrowtail: \"↣\",\n      RightCeiling: \"⌉\",\n      RightDoubleBracket: \"⟧\",\n      RightDownTeeVector: \"⥝\",\n      RightDownVector: \"⇂\",\n      RightDownVectorBar: \"⥕\",\n      RightFloor: \"⌋\",\n      rightharpoondown: \"⇁\",\n      rightharpoonup: \"⇀\",\n      rightleftarrows: \"⇄\",\n      rightleftharpoons: \"⇌\",\n      rightrightarrows: \"⇉\",\n      rightsquigarrow: \"↝\",\n      RightTee: \"⊢\",\n      RightTeeArrow: \"↦\",\n      RightTeeVector: \"⥛\",\n      rightthreetimes: \"⋌\",\n      RightTriangle: \"⊳\",\n      RightTriangleBar: \"⧐\",\n      RightTriangleEqual: \"⊵\",\n      RightUpDownVector: \"⥏\",\n      RightUpTeeVector: \"⥜\",\n      RightUpVector: \"↾\",\n      RightUpVectorBar: \"⥔\",\n      RightVector: \"⇀\",\n      RightVectorBar: \"⥓\",\n      ring: \"˚\",\n      risingdotseq: \"≓\",\n      rlarr: \"⇄\",\n      rlhar: \"⇌\",\n      rlm: \"‏\",\n      rmoust: \"⎱\",\n      rmoustache: \"⎱\",\n      rnmid: \"⫮\",\n      roang: \"⟭\",\n      roarr: \"⇾\",\n      robrk: \"⟧\",\n      ropar: \"⦆\",\n      Ropf: \"ℝ\",\n      ropf: \"𝕣\",\n      roplus: \"⨮\",\n      rotimes: \"⨵\",\n      RoundImplies: \"⥰\",\n      rpar: \")\",\n      rpargt: \"⦔\",\n      rppolint: \"⨒\",\n      rrarr: \"⇉\",\n      Rrightarrow: \"⇛\",\n      rsaquo: \"›\",\n      Rscr: \"ℛ\",\n      rscr: \"𝓇\",\n      Rsh: \"↱\",\n      rsh: \"↱\",\n      rsqb: \"]\",\n      rsquo: \"’\",\n      rsquor: \"’\",\n      rthree: \"⋌\",\n      rtimes: \"⋊\",\n      rtri: \"▹\",\n      rtrie: \"⊵\",\n      rtrif: \"▸\",\n      rtriltri: \"⧎\",\n      RuleDelayed: \"⧴\",\n      ruluhar: \"⥨\",\n      rx: \"℞\",\n      Sacute: \"Ś\",\n      sacute: \"ś\",\n      sbquo: \"‚\",\n      Sc: \"⪼\",\n      sc: \"≻\",\n      scap: \"⪸\",\n      Scaron: \"Š\",\n      scaron: \"š\",\n      sccue: \"≽\",\n      scE: \"⪴\",\n      sce: \"⪰\",\n      Scedil: \"Ş\",\n      scedil: \"ş\",\n      Scirc: \"Ŝ\",\n      scirc: \"ŝ\",\n      scnap: \"⪺\",\n      scnE: \"⪶\",\n      scnsim: \"⋩\",\n      scpolint: \"⨓\",\n      scsim: \"≿\",\n      Scy: \"С\",\n      scy: \"с\",\n      sdot: \"⋅\",\n      sdotb: \"⊡\",\n      sdote: \"⩦\",\n      searhk: \"⤥\",\n      seArr: \"⇘\",\n      searr: \"↘\",\n      searrow: \"↘\",\n      sect: \"§\",\n      semi: \";\",\n      seswar: \"⤩\",\n      setminus: \"∖\",\n      setmn: \"∖\",\n      sext: \"✶\",\n      Sfr: \"𝔖\",\n      sfr: \"𝔰\",\n      sfrown: \"⌢\",\n      sharp: \"♯\",\n      SHCHcy: \"Щ\",\n      shchcy: \"щ\",\n      SHcy: \"Ш\",\n      shcy: \"ш\",\n      ShortDownArrow: \"↓\",\n      ShortLeftArrow: \"←\",\n      shortmid: \"∣\",\n      shortparallel: \"∥\",\n      ShortRightArrow: \"→\",\n      ShortUpArrow: \"↑\",\n      shy: \"­\",\n      Sigma: \"Σ\",\n      sigma: \"σ\",\n      sigmaf: \"ς\",\n      sigmav: \"ς\",\n      sim: \"∼\",\n      simdot: \"⩪\",\n      sime: \"≃\",\n      simeq: \"≃\",\n      simg: \"⪞\",\n      simgE: \"⪠\",\n      siml: \"⪝\",\n      simlE: \"⪟\",\n      simne: \"≆\",\n      simplus: \"⨤\",\n      simrarr: \"⥲\",\n      slarr: \"←\",\n      SmallCircle: \"∘\",\n      smallsetminus: \"∖\",\n      smashp: \"⨳\",\n      smeparsl: \"⧤\",\n      smid: \"∣\",\n      smile: \"⌣\",\n      smt: \"⪪\",\n      smte: \"⪬\",\n      smtes: \"⪬︀\",\n      SOFTcy: \"Ь\",\n      softcy: \"ь\",\n      sol: \"/\",\n      solb: \"⧄\",\n      solbar: \"⌿\",\n      Sopf: \"𝕊\",\n      sopf: \"𝕤\",\n      spades: \"♠\",\n      spadesuit: \"♠\",\n      spar: \"∥\",\n      sqcap: \"⊓\",\n      sqcaps: \"⊓︀\",\n      sqcup: \"⊔\",\n      sqcups: \"⊔︀\",\n      Sqrt: \"√\",\n      sqsub: \"⊏\",\n      sqsube: \"⊑\",\n      sqsubset: \"⊏\",\n      sqsubseteq: \"⊑\",\n      sqsup: \"⊐\",\n      sqsupe: \"⊒\",\n      sqsupset: \"⊐\",\n      sqsupseteq: \"⊒\",\n      squ: \"□\",\n      Square: \"□\",\n      square: \"□\",\n      SquareIntersection: \"⊓\",\n      SquareSubset: \"⊏\",\n      SquareSubsetEqual: \"⊑\",\n      SquareSuperset: \"⊐\",\n      SquareSupersetEqual: \"⊒\",\n      SquareUnion: \"⊔\",\n      squarf: \"▪\",\n      squf: \"▪\",\n      srarr: \"→\",\n      Sscr: \"𝒮\",\n      sscr: \"𝓈\",\n      ssetmn: \"∖\",\n      ssmile: \"⌣\",\n      sstarf: \"⋆\",\n      Star: \"⋆\",\n      star: \"☆\",\n      starf: \"★\",\n      straightepsilon: \"ϵ\",\n      straightphi: \"ϕ\",\n      strns: \"¯\",\n      Sub: \"⋐\",\n      sub: \"⊂\",\n      subdot: \"⪽\",\n      subE: \"⫅\",\n      sube: \"⊆\",\n      subedot: \"⫃\",\n      submult: \"⫁\",\n      subnE: \"⫋\",\n      subne: \"⊊\",\n      subplus: \"⪿\",\n      subrarr: \"⥹\",\n      Subset: \"⋐\",\n      subset: \"⊂\",\n      subseteq: \"⊆\",\n      subseteqq: \"⫅\",\n      SubsetEqual: \"⊆\",\n      subsetneq: \"⊊\",\n      subsetneqq: \"⫋\",\n      subsim: \"⫇\",\n      subsub: \"⫕\",\n      subsup: \"⫓\",\n      succ: \"≻\",\n      succapprox: \"⪸\",\n      succcurlyeq: \"≽\",\n      Succeeds: \"≻\",\n      SucceedsEqual: \"⪰\",\n      SucceedsSlantEqual: \"≽\",\n      SucceedsTilde: \"≿\",\n      succeq: \"⪰\",\n      succnapprox: \"⪺\",\n      succneqq: \"⪶\",\n      succnsim: \"⋩\",\n      succsim: \"≿\",\n      SuchThat: \"∋\",\n      Sum: \"∑\",\n      sum: \"∑\",\n      sung: \"♪\",\n      Sup: \"⋑\",\n      sup: \"⊃\",\n      sup1: \"¹\",\n      sup2: \"²\",\n      sup3: \"³\",\n      supdot: \"⪾\",\n      supdsub: \"⫘\",\n      supE: \"⫆\",\n      supe: \"⊇\",\n      supedot: \"⫄\",\n      Superset: \"⊃\",\n      SupersetEqual: \"⊇\",\n      suphsol: \"⟉\",\n      suphsub: \"⫗\",\n      suplarr: \"⥻\",\n      supmult: \"⫂\",\n      supnE: \"⫌\",\n      supne: \"⊋\",\n      supplus: \"⫀\",\n      Supset: \"⋑\",\n      supset: \"⊃\",\n      supseteq: \"⊇\",\n      supseteqq: \"⫆\",\n      supsetneq: \"⊋\",\n      supsetneqq: \"⫌\",\n      supsim: \"⫈\",\n      supsub: \"⫔\",\n      supsup: \"⫖\",\n      swarhk: \"⤦\",\n      swArr: \"⇙\",\n      swarr: \"↙\",\n      swarrow: \"↙\",\n      swnwar: \"⤪\",\n      szlig: \"ß\",\n      Tab: \"\\t\",\n      target: \"⌖\",\n      Tau: \"Τ\",\n      tau: \"τ\",\n      tbrk: \"⎴\",\n      Tcaron: \"Ť\",\n      tcaron: \"ť\",\n      Tcedil: \"Ţ\",\n      tcedil: \"ţ\",\n      Tcy: \"Т\",\n      tcy: \"т\",\n      tdot: \"⃛\",\n      telrec: \"⌕\",\n      Tfr: \"𝔗\",\n      tfr: \"𝔱\",\n      there4: \"∴\",\n      Therefore: \"∴\",\n      therefore: \"∴\",\n      Theta: \"Θ\",\n      theta: \"θ\",\n      thetasym: \"ϑ\",\n      thetav: \"ϑ\",\n      thickapprox: \"≈\",\n      thicksim: \"∼\",\n      ThickSpace: \"  \",\n      thinsp: \" \",\n      ThinSpace: \" \",\n      thkap: \"≈\",\n      thksim: \"∼\",\n      THORN: \"Þ\",\n      thorn: \"þ\",\n      Tilde: \"∼\",\n      tilde: \"˜\",\n      TildeEqual: \"≃\",\n      TildeFullEqual: \"≅\",\n      TildeTilde: \"≈\",\n      times: \"×\",\n      timesb: \"⊠\",\n      timesbar: \"⨱\",\n      timesd: \"⨰\",\n      tint: \"∭\",\n      toea: \"⤨\",\n      top: \"⊤\",\n      topbot: \"⌶\",\n      topcir: \"⫱\",\n      Topf: \"𝕋\",\n      topf: \"𝕥\",\n      topfork: \"⫚\",\n      tosa: \"⤩\",\n      tprime: \"‴\",\n      TRADE: \"™\",\n      trade: \"™\",\n      triangle: \"▵\",\n      triangledown: \"▿\",\n      triangleleft: \"◃\",\n      trianglelefteq: \"⊴\",\n      triangleq: \"≜\",\n      triangleright: \"▹\",\n      trianglerighteq: \"⊵\",\n      tridot: \"◬\",\n      trie: \"≜\",\n      triminus: \"⨺\",\n      TripleDot: \"⃛\",\n      triplus: \"⨹\",\n      trisb: \"⧍\",\n      tritime: \"⨻\",\n      trpezium: \"⏢\",\n      Tscr: \"𝒯\",\n      tscr: \"𝓉\",\n      TScy: \"Ц\",\n      tscy: \"ц\",\n      TSHcy: \"Ћ\",\n      tshcy: \"ћ\",\n      Tstrok: \"Ŧ\",\n      tstrok: \"ŧ\",\n      twixt: \"≬\",\n      twoheadleftarrow: \"↞\",\n      twoheadrightarrow: \"↠\",\n      Uacute: \"Ú\",\n      uacute: \"ú\",\n      Uarr: \"↟\",\n      uArr: \"⇑\",\n      uarr: \"↑\",\n      Uarrocir: \"⥉\",\n      Ubrcy: \"Ў\",\n      ubrcy: \"ў\",\n      Ubreve: \"Ŭ\",\n      ubreve: \"ŭ\",\n      Ucirc: \"Û\",\n      ucirc: \"û\",\n      Ucy: \"У\",\n      ucy: \"у\",\n      udarr: \"⇅\",\n      Udblac: \"Ű\",\n      udblac: \"ű\",\n      udhar: \"⥮\",\n      ufisht: \"⥾\",\n      Ufr: \"𝔘\",\n      ufr: \"𝔲\",\n      Ugrave: \"Ù\",\n      ugrave: \"ù\",\n      uHar: \"⥣\",\n      uharl: \"↿\",\n      uharr: \"↾\",\n      uhblk: \"▀\",\n      ulcorn: \"⌜\",\n      ulcorner: \"⌜\",\n      ulcrop: \"⌏\",\n      ultri: \"◸\",\n      Umacr: \"Ū\",\n      umacr: \"ū\",\n      uml: \"¨\",\n      UnderBar: \"_\",\n      UnderBrace: \"⏟\",\n      UnderBracket: \"⎵\",\n      UnderParenthesis: \"⏝\",\n      Union: \"⋃\",\n      UnionPlus: \"⊎\",\n      Uogon: \"Ų\",\n      uogon: \"ų\",\n      Uopf: \"𝕌\",\n      uopf: \"𝕦\",\n      UpArrow: \"↑\",\n      Uparrow: \"⇑\",\n      uparrow: \"↑\",\n      UpArrowBar: \"⤒\",\n      UpArrowDownArrow: \"⇅\",\n      UpDownArrow: \"↕\",\n      Updownarrow: \"⇕\",\n      updownarrow: \"↕\",\n      UpEquilibrium: \"⥮\",\n      upharpoonleft: \"↿\",\n      upharpoonright: \"↾\",\n      uplus: \"⊎\",\n      UpperLeftArrow: \"↖\",\n      UpperRightArrow: \"↗\",\n      Upsi: \"ϒ\",\n      upsi: \"υ\",\n      upsih: \"ϒ\",\n      Upsilon: \"Υ\",\n      upsilon: \"υ\",\n      UpTee: \"⊥\",\n      UpTeeArrow: \"↥\",\n      upuparrows: \"⇈\",\n      urcorn: \"⌝\",\n      urcorner: \"⌝\",\n      urcrop: \"⌎\",\n      Uring: \"Ů\",\n      uring: \"ů\",\n      urtri: \"◹\",\n      Uscr: \"𝒰\",\n      uscr: \"𝓊\",\n      utdot: \"⋰\",\n      Utilde: \"Ũ\",\n      utilde: \"ũ\",\n      utri: \"▵\",\n      utrif: \"▴\",\n      uuarr: \"⇈\",\n      Uuml: \"Ü\",\n      uuml: \"ü\",\n      uwangle: \"⦧\",\n      vangrt: \"⦜\",\n      varepsilon: \"ϵ\",\n      varkappa: \"ϰ\",\n      varnothing: \"∅\",\n      varphi: \"ϕ\",\n      varpi: \"ϖ\",\n      varpropto: \"∝\",\n      vArr: \"⇕\",\n      varr: \"↕\",\n      varrho: \"ϱ\",\n      varsigma: \"ς\",\n      varsubsetneq: \"⊊︀\",\n      varsubsetneqq: \"⫋︀\",\n      varsupsetneq: \"⊋︀\",\n      varsupsetneqq: \"⫌︀\",\n      vartheta: \"ϑ\",\n      vartriangleleft: \"⊲\",\n      vartriangleright: \"⊳\",\n      Vbar: \"⫫\",\n      vBar: \"⫨\",\n      vBarv: \"⫩\",\n      Vcy: \"В\",\n      vcy: \"в\",\n      VDash: \"⊫\",\n      Vdash: \"⊩\",\n      vDash: \"⊨\",\n      vdash: \"⊢\",\n      Vdashl: \"⫦\",\n      Vee: \"⋁\",\n      vee: \"∨\",\n      veebar: \"⊻\",\n      veeeq: \"≚\",\n      vellip: \"⋮\",\n      Verbar: \"‖\",\n      verbar: \"|\",\n      Vert: \"‖\",\n      vert: \"|\",\n      VerticalBar: \"∣\",\n      VerticalLine: \"|\",\n      VerticalSeparator: \"❘\",\n      VerticalTilde: \"≀\",\n      VeryThinSpace: \" \",\n      Vfr: \"𝔙\",\n      vfr: \"𝔳\",\n      vltri: \"⊲\",\n      vnsub: \"⊂⃒\",\n      vnsup: \"⊃⃒\",\n      Vopf: \"𝕍\",\n      vopf: \"𝕧\",\n      vprop: \"∝\",\n      vrtri: \"⊳\",\n      Vscr: \"𝒱\",\n      vscr: \"𝓋\",\n      vsubnE: \"⫋︀\",\n      vsubne: \"⊊︀\",\n      vsupnE: \"⫌︀\",\n      vsupne: \"⊋︀\",\n      Vvdash: \"⊪\",\n      vzigzag: \"⦚\",\n      Wcirc: \"Ŵ\",\n      wcirc: \"ŵ\",\n      wedbar: \"⩟\",\n      Wedge: \"⋀\",\n      wedge: \"∧\",\n      wedgeq: \"≙\",\n      weierp: \"℘\",\n      Wfr: \"𝔚\",\n      wfr: \"𝔴\",\n      Wopf: \"𝕎\",\n      wopf: \"𝕨\",\n      wp: \"℘\",\n      wr: \"≀\",\n      wreath: \"≀\",\n      Wscr: \"𝒲\",\n      wscr: \"𝓌\",\n      xcap: \"⋂\",\n      xcirc: \"◯\",\n      xcup: \"⋃\",\n      xdtri: \"▽\",\n      Xfr: \"𝔛\",\n      xfr: \"𝔵\",\n      xhArr: \"⟺\",\n      xharr: \"⟷\",\n      Xi: \"Ξ\",\n      xi: \"ξ\",\n      xlArr: \"⟸\",\n      xlarr: \"⟵\",\n      xmap: \"⟼\",\n      xnis: \"⋻\",\n      xodot: \"⨀\",\n      Xopf: \"𝕏\",\n      xopf: \"𝕩\",\n      xoplus: \"⨁\",\n      xotime: \"⨂\",\n      xrArr: \"⟹\",\n      xrarr: \"⟶\",\n      Xscr: \"𝒳\",\n      xscr: \"𝓍\",\n      xsqcup: \"⨆\",\n      xuplus: \"⨄\",\n      xutri: \"△\",\n      xvee: \"⋁\",\n      xwedge: \"⋀\",\n      Yacute: \"Ý\",\n      yacute: \"ý\",\n      YAcy: \"Я\",\n      yacy: \"я\",\n      Ycirc: \"Ŷ\",\n      ycirc: \"ŷ\",\n      Ycy: \"Ы\",\n      ycy: \"ы\",\n      yen: \"¥\",\n      Yfr: \"𝔜\",\n      yfr: \"𝔶\",\n      YIcy: \"Ї\",\n      yicy: \"ї\",\n      Yopf: \"𝕐\",\n      yopf: \"𝕪\",\n      Yscr: \"𝒴\",\n      yscr: \"𝓎\",\n      YUcy: \"Ю\",\n      yucy: \"ю\",\n      Yuml: \"Ÿ\",\n      yuml: \"ÿ\",\n      Zacute: \"Ź\",\n      zacute: \"ź\",\n      Zcaron: \"Ž\",\n      zcaron: \"ž\",\n      Zcy: \"З\",\n      zcy: \"з\",\n      Zdot: \"Ż\",\n      zdot: \"ż\",\n      zeetrf: \"ℨ\",\n      ZeroWidthSpace: \"​\",\n      Zeta: \"Ζ\",\n      zeta: \"ζ\",\n      Zfr: \"ℨ\",\n      zfr: \"𝔷\",\n      ZHcy: \"Ж\",\n      zhcy: \"ж\",\n      zigrarr: \"⇝\",\n      Zopf: \"ℤ\",\n      zopf: \"𝕫\",\n      Zscr: \"𝒵\",\n      zscr: \"𝓏\",\n      zwj: \"‍\",\n      zwnj: \"‌\"\n    }, t.NGSP_UNICODE = \"\", t.NAMED_ENTITIES.ngsp = t.NGSP_UNICODE;\n  });\n\n  h(Dc);\n  Dc.TagContentType, Dc.splitNsName, Dc.isNgContainer, Dc.isNgContent, Dc.isNgTemplate, Dc.getNsPrefix, Dc.mergeNsAndName, Dc.NAMED_ENTITIES, Dc.NGSP_UNICODE;\n  var gc = d(function (e, t) {\n    /**\n         * @license\n         * Copyright Google Inc. All Rights Reserved.\n         *\n         * Use of this source code is governed by an MIT-style license that can be\n         * found in the LICENSE file at https://angular.io/license\n         */\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    });\n\n    var n,\n        a,\n        o = function () {\n      function e() {\n        var t = this,\n            n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n            i = n.closedByChildren,\n            a = n.requiredParents,\n            o = n.implicitNamespacePrefix,\n            u = n.contentType,\n            s = void 0 === u ? Dc.TagContentType.PARSABLE_DATA : u,\n            c = n.closedByParent,\n            l = void 0 !== c && c,\n            p = n.isVoid,\n            f = void 0 !== p && p,\n            h = n.ignoreFirstLf,\n            d = void 0 !== h && h;\n        r(this, e), this.closedByChildren = {}, this.closedByParent = !1, this.canSelfClose = !1, i && i.length > 0 && i.forEach(function (e) {\n          return t.closedByChildren[e] = !0;\n        }), this.isVoid = f, this.closedByParent = l || f, a && a.length > 0 && (this.requiredParents = {}, this.parentToAdd = a[0], a.forEach(function (e) {\n          return t.requiredParents[e] = !0;\n        })), this.implicitNamespacePrefix = o || null, this.contentType = s, this.ignoreFirstLf = d;\n      }\n\n      return i(e, [{\n        key: \"requireExtraParent\",\n        value: function (e) {\n          if (!this.requiredParents) return !1;\n          if (!e) return !0;\n          var t = e.toLowerCase();\n          return !(\"template\" === t || \"ng-template\" === e) && 1 != this.requiredParents[t];\n        }\n      }, {\n        key: \"isClosedByChild\",\n        value: function (e) {\n          return this.isVoid || e.toLowerCase() in this.closedByChildren;\n        }\n      }]), e;\n    }();\n\n    t.HtmlTagDefinition = o, t.getHtmlTagDefinition = function (e) {\n      return a || (n = new o(), a = {\n        base: new o({\n          isVoid: !0\n        }),\n        meta: new o({\n          isVoid: !0\n        }),\n        area: new o({\n          isVoid: !0\n        }),\n        embed: new o({\n          isVoid: !0\n        }),\n        link: new o({\n          isVoid: !0\n        }),\n        img: new o({\n          isVoid: !0\n        }),\n        input: new o({\n          isVoid: !0\n        }),\n        param: new o({\n          isVoid: !0\n        }),\n        hr: new o({\n          isVoid: !0\n        }),\n        br: new o({\n          isVoid: !0\n        }),\n        source: new o({\n          isVoid: !0\n        }),\n        track: new o({\n          isVoid: !0\n        }),\n        wbr: new o({\n          isVoid: !0\n        }),\n        p: new o({\n          closedByChildren: [\"address\", \"article\", \"aside\", \"blockquote\", \"div\", \"dl\", \"fieldset\", \"footer\", \"form\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"header\", \"hgroup\", \"hr\", \"main\", \"nav\", \"ol\", \"p\", \"pre\", \"section\", \"table\", \"ul\"],\n          closedByParent: !0\n        }),\n        thead: new o({\n          closedByChildren: [\"tbody\", \"tfoot\"]\n        }),\n        tbody: new o({\n          closedByChildren: [\"tbody\", \"tfoot\"],\n          closedByParent: !0\n        }),\n        tfoot: new o({\n          closedByChildren: [\"tbody\"],\n          closedByParent: !0\n        }),\n        tr: new o({\n          closedByChildren: [\"tr\"],\n          requiredParents: [\"tbody\", \"tfoot\", \"thead\"],\n          closedByParent: !0\n        }),\n        td: new o({\n          closedByChildren: [\"td\", \"th\"],\n          closedByParent: !0\n        }),\n        th: new o({\n          closedByChildren: [\"td\", \"th\"],\n          closedByParent: !0\n        }),\n        col: new o({\n          requiredParents: [\"colgroup\"],\n          isVoid: !0\n        }),\n        svg: new o({\n          implicitNamespacePrefix: \"svg\"\n        }),\n        math: new o({\n          implicitNamespacePrefix: \"math\"\n        }),\n        li: new o({\n          closedByChildren: [\"li\"],\n          closedByParent: !0\n        }),\n        dt: new o({\n          closedByChildren: [\"dt\", \"dd\"]\n        }),\n        dd: new o({\n          closedByChildren: [\"dt\", \"dd\"],\n          closedByParent: !0\n        }),\n        rb: new o({\n          closedByChildren: [\"rb\", \"rt\", \"rtc\", \"rp\"],\n          closedByParent: !0\n        }),\n        rt: new o({\n          closedByChildren: [\"rb\", \"rt\", \"rtc\", \"rp\"],\n          closedByParent: !0\n        }),\n        rtc: new o({\n          closedByChildren: [\"rb\", \"rtc\", \"rp\"],\n          closedByParent: !0\n        }),\n        rp: new o({\n          closedByChildren: [\"rb\", \"rt\", \"rtc\", \"rp\"],\n          closedByParent: !0\n        }),\n        optgroup: new o({\n          closedByChildren: [\"optgroup\"],\n          closedByParent: !0\n        }),\n        option: new o({\n          closedByChildren: [\"option\", \"optgroup\"],\n          closedByParent: !0\n        }),\n        pre: new o({\n          ignoreFirstLf: !0\n        }),\n        listing: new o({\n          ignoreFirstLf: !0\n        }),\n        style: new o({\n          contentType: Dc.TagContentType.RAW_TEXT\n        }),\n        script: new o({\n          contentType: Dc.TagContentType.RAW_TEXT\n        }),\n        title: new o({\n          contentType: Dc.TagContentType.ESCAPABLE_RAW_TEXT\n        }),\n        textarea: new o({\n          contentType: Dc.TagContentType.ESCAPABLE_RAW_TEXT,\n          ignoreFirstLf: !0\n        })\n      }), a[e] || n;\n    };\n  });\n  h(gc);\n  gc.HtmlTagDefinition, gc.getHtmlTagDefinition;\n  var mc = d(function (e, t) {\n    /**\n         * @license\n         * Copyright Google Inc. All Rights Reserved.\n         *\n         * Use of this source code is governed by an MIT-style license that can be\n         * found in the LICENSE file at https://angular.io/license\n         */\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    }), t.assertArrayOfStrings = function (e, t) {\n      if (null != t) {\n        if (!Array.isArray(t)) throw new Error(\"Expected '\".concat(e, \"' to be an array of strings.\"));\n\n        for (var r = 0; r < t.length; r += 1) if (\"string\" != typeof t[r]) throw new Error(\"Expected '\".concat(e, \"' to be an array of strings.\"));\n      }\n    };\n    var r = [/^\\s*$/, /[<>]/, /^[{}]$/, /&(#|[a-z])/i, /^\\/\\//];\n\n    t.assertInterpolationSymbols = function (e, t) {\n      if (!(null == t || Array.isArray(t) && 2 == t.length)) throw new Error(\"Expected '\".concat(e, \"' to be an array, [start, end].\"));\n\n      if (null != t) {\n        var n = t[0],\n            i = t[1];\n        r.forEach(function (e) {\n          if (e.test(n) || e.test(i)) throw new Error(\"['\".concat(n, \"', '\").concat(i, \"'] contains unusable interpolation symbol.\"));\n        });\n      }\n    };\n  });\n  h(mc);\n  mc.assertArrayOfStrings, mc.assertInterpolationSymbols;\n  var vc = d(function (e, t) {\n    /**\n         * @license\n         * Copyright Google Inc. All Rights Reserved.\n         *\n         * Use of this source code is governed by an MIT-style license that can be\n         * found in the LICENSE file at https://angular.io/license\n         */\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    });\n\n    var n = function () {\n      function e(t, n) {\n        r(this, e), this.start = t, this.end = n;\n      }\n\n      return i(e, null, [{\n        key: \"fromArray\",\n        value: function (r) {\n          return r ? (mc.assertInterpolationSymbols(\"interpolation\", r), new e(r[0], r[1])) : t.DEFAULT_INTERPOLATION_CONFIG;\n        }\n      }]), e;\n    }();\n\n    t.InterpolationConfig = n, t.DEFAULT_INTERPOLATION_CONFIG = new n(\"{{\", \"}}\");\n  });\n  h(vc);\n  vc.InterpolationConfig, vc.DEFAULT_INTERPOLATION_CONFIG;\n  var bc = d(function (e, t) {\n    function r(e) {\n      return t.$0 <= e && e <= t.$9;\n    }\n    /**\n         * @license\n         * Copyright Google Inc. All Rights Reserved.\n         *\n         * Use of this source code is governed by an MIT-style license that can be\n         * found in the LICENSE file at https://angular.io/license\n         */\n\n\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    }), t.$EOF = 0, t.$TAB = 9, t.$LF = 10, t.$VTAB = 11, t.$FF = 12, t.$CR = 13, t.$SPACE = 32, t.$BANG = 33, t.$DQ = 34, t.$HASH = 35, t.$$ = 36, t.$PERCENT = 37, t.$AMPERSAND = 38, t.$SQ = 39, t.$LPAREN = 40, t.$RPAREN = 41, t.$STAR = 42, t.$PLUS = 43, t.$COMMA = 44, t.$MINUS = 45, t.$PERIOD = 46, t.$SLASH = 47, t.$COLON = 58, t.$SEMICOLON = 59, t.$LT = 60, t.$EQ = 61, t.$GT = 62, t.$QUESTION = 63, t.$0 = 48, t.$9 = 57, t.$A = 65, t.$E = 69, t.$F = 70, t.$X = 88, t.$Z = 90, t.$LBRACKET = 91, t.$BACKSLASH = 92, t.$RBRACKET = 93, t.$CARET = 94, t.$_ = 95, t.$a = 97, t.$e = 101, t.$f = 102, t.$n = 110, t.$r = 114, t.$t = 116, t.$u = 117, t.$v = 118, t.$x = 120, t.$z = 122, t.$LBRACE = 123, t.$BAR = 124, t.$RBRACE = 125, t.$NBSP = 160, t.$PIPE = 124, t.$TILDA = 126, t.$AT = 64, t.$BT = 96, t.isWhitespace = function (e) {\n      return e >= t.$TAB && e <= t.$SPACE || e == t.$NBSP;\n    }, t.isDigit = r, t.isAsciiLetter = function (e) {\n      return e >= t.$a && e <= t.$z || e >= t.$A && e <= t.$Z;\n    }, t.isAsciiHexDigit = function (e) {\n      return e >= t.$a && e <= t.$f || e >= t.$A && e <= t.$F || r(e);\n    };\n  });\n  h(bc);\n  bc.$EOF, bc.$TAB, bc.$LF, bc.$VTAB, bc.$FF, bc.$CR, bc.$SPACE, bc.$BANG, bc.$DQ, bc.$HASH, bc.$$, bc.$PERCENT, bc.$AMPERSAND, bc.$SQ, bc.$LPAREN, bc.$RPAREN, bc.$STAR, bc.$PLUS, bc.$COMMA, bc.$MINUS, bc.$PERIOD, bc.$SLASH, bc.$COLON, bc.$SEMICOLON, bc.$LT, bc.$EQ, bc.$GT, bc.$QUESTION, bc.$0, bc.$9, bc.$A, bc.$E, bc.$F, bc.$X, bc.$Z, bc.$LBRACKET, bc.$BACKSLASH, bc.$RBRACKET, bc.$CARET, bc.$_, bc.$a, bc.$e, bc.$f, bc.$n, bc.$r, bc.$t, bc.$u, bc.$v, bc.$x, bc.$z, bc.$LBRACE, bc.$BAR, bc.$RBRACE, bc.$NBSP, bc.$PIPE, bc.$TILDA, bc.$AT, bc.$BT, bc.isWhitespace, bc.isDigit, bc.isAsciiLetter, bc.isAsciiHexDigit;\n  var yc = d(function (e, t) {\n    /**\n         * @license\n         * Copyright Google Inc. All Rights Reserved.\n         *\n         * Use of this source code is governed by an MIT-style license that can be\n         * found in the LICENSE file at https://angular.io/license\n         */\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    });\n\n    var n = function () {\n      function e(t, n, i) {\n        r(this, e), this.filePath = t, this.name = n, this.members = i;\n      }\n\n      return i(e, [{\n        key: \"assertNoMembers\",\n        value: function () {\n          if (this.members.length) throw new Error(\"Illegal state: symbol without members expected, but got \".concat(JSON.stringify(this), \".\"));\n        }\n      }]), e;\n    }();\n\n    t.StaticSymbol = n;\n\n    var a = function () {\n      function e() {\n        r(this, e), this.cache = new Map();\n      }\n\n      return i(e, [{\n        key: \"get\",\n        value: function (e, t, r) {\n          var i = (r = r || []).length ? \".\".concat(r.join(\".\")) : \"\",\n              a = '\"'.concat(e, '\".').concat(t).concat(i),\n              o = this.cache.get(a);\n          return o || (o = new n(e, t, r), this.cache.set(a, o)), o;\n        }\n      }]), e;\n    }();\n\n    t.StaticSymbolCache = a;\n  });\n  h(yc);\n  yc.StaticSymbol, yc.StaticSymbolCache;\n  var Ec = d(function (e, n) {\n    /**\n         * @license\n         * Copyright Google Inc. All Rights Reserved.\n         *\n         * Use of this source code is governed by an MIT-style license that can be\n         * found in the LICENSE file at https://angular.io/license\n         */\n    Object.defineProperty(n, \"__esModule\", {\n      value: !0\n    });\n    var a = /-+([a-z0-9])/g;\n\n    function o(e, t, r) {\n      var n = e.indexOf(t);\n      return -1 == n ? r : [e.slice(0, n).trim(), e.slice(n + 1).trim()];\n    }\n\n    function u(e, r, n) {\n      return Array.isArray(e) ? r.visitArray(e, n) : \"object\" === t(i = e) && null !== i && Object.getPrototypeOf(i) === p ? r.visitStringMap(e, n) : null == e || \"string\" == typeof e || \"number\" == typeof e || \"boolean\" == typeof e ? r.visitPrimitive(e, n) : r.visitOther(e, n);\n      var i;\n    }\n\n    n.dashCaseToCamelCase = function (e) {\n      return e.replace(a, function () {\n        for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) t[r] = arguments[r];\n\n        return t[1].toUpperCase();\n      });\n    }, n.splitAtColon = function (e, t) {\n      return o(e, \":\", t);\n    }, n.splitAtPeriod = function (e, t) {\n      return o(e, \".\", t);\n    }, n.visitValue = u, n.isDefined = function (e) {\n      return null != e;\n    }, n.noUndefined = function (e) {\n      return void 0 === e ? null : e;\n    };\n\n    var s = function () {\n      function e() {\n        r(this, e);\n      }\n\n      return i(e, [{\n        key: \"visitArray\",\n        value: function (e, t) {\n          var r = this;\n          return e.map(function (e) {\n            return u(e, r, t);\n          });\n        }\n      }, {\n        key: \"visitStringMap\",\n        value: function (e, t) {\n          var r = this,\n              n = {};\n          return Object.keys(e).forEach(function (i) {\n            n[i] = u(e[i], r, t);\n          }), n;\n        }\n      }, {\n        key: \"visitPrimitive\",\n        value: function (e, t) {\n          return e;\n        }\n      }, {\n        key: \"visitOther\",\n        value: function (e, t) {\n          return e;\n        }\n      }]), e;\n    }();\n\n    n.ValueTransformer = s, n.SyncAsync = {\n      assertSync: function (e) {\n        if (f(e)) throw new Error(\"Illegal state: value cannot be a promise\");\n        return e;\n      },\n      then: function (e, t) {\n        return f(e) ? e.then(t) : t(e);\n      },\n      all: function (e) {\n        return e.some(f) ? Promise.all(e) : e;\n      }\n    }, n.error = function (e) {\n      throw new Error(\"Internal Error: \".concat(e));\n    }, n.syntaxError = function (e, t) {\n      var r = Error(e);\n      return r[c] = !0, t && (r[l] = t), r;\n    };\n    var c = \"ngSyntaxError\",\n        l = \"ngParseErrors\";\n    n.isSyntaxError = function (e) {\n      return e[c];\n    }, n.getParseErrors = function (e) {\n      return e[l] || [];\n    }, n.escapeRegExp = function (e) {\n      return e.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, \"\\\\$1\");\n    };\n    var p = Object.getPrototypeOf({});\n\n    function f(e) {\n      return !!e && \"function\" == typeof e.then;\n    }\n\n    n.utf8Encode = function (e) {\n      for (var t = \"\", r = 0; r < e.length; r++) {\n        var n = e.charCodeAt(r);\n\n        if (n >= 55296 && n <= 56319 && e.length > r + 1) {\n          var i = e.charCodeAt(r + 1);\n          i >= 56320 && i <= 57343 && (r++, n = (n - 55296 << 10) + i - 56320 + 65536);\n        }\n\n        n <= 127 ? t += String.fromCharCode(n) : n <= 2047 ? t += String.fromCharCode(n >> 6 & 31 | 192, 63 & n | 128) : n <= 65535 ? t += String.fromCharCode(n >> 12 | 224, n >> 6 & 63 | 128, 63 & n | 128) : n <= 2097151 && (t += String.fromCharCode(n >> 18 & 7 | 240, n >> 12 & 63 | 128, n >> 6 & 63 | 128, 63 & n | 128));\n      }\n\n      return t;\n    }, n.stringify = function e(t) {\n      if (\"string\" == typeof t) return t;\n      if (t instanceof Array) return \"[\" + t.map(e).join(\", \") + \"]\";\n      if (null == t) return \"\" + t;\n      if (t.overriddenName) return \"\".concat(t.overriddenName);\n      if (t.name) return \"\".concat(t.name);\n      var r = t.toString();\n      if (null == r) return \"\" + r;\n      var n = r.indexOf(\"\\n\");\n      return -1 === n ? r : r.substring(0, n);\n    }, n.resolveForwardRef = function (e) {\n      return \"function\" == typeof e && e.hasOwnProperty(\"__forward_ref__\") ? e() : e;\n    }, n.isPromise = f;\n\n    n.Version = function e(t) {\n      r(this, e), this.full = t;\n      var n = t.split(\".\");\n      this.major = n[0], this.minor = n[1], this.patch = n.slice(2).join(\".\");\n    };\n  });\n  h(Ec);\n  Ec.dashCaseToCamelCase, Ec.splitAtColon, Ec.splitAtPeriod, Ec.visitValue, Ec.isDefined, Ec.noUndefined, Ec.ValueTransformer, Ec.SyncAsync, Ec.error, Ec.syntaxError, Ec.isSyntaxError, Ec.getParseErrors, Ec.escapeRegExp, Ec.utf8Encode, Ec.stringify, Ec.resolveForwardRef, Ec.isPromise, Ec.Version;\n  var Cc = d(function (e, t) {\n    /**\n         * @license\n         * Copyright Google Inc. All Rights Reserved.\n         *\n         * Use of this source code is governed by an MIT-style license that can be\n         * found in the LICENSE file at https://angular.io/license\n         */\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    });\n    var n = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n\n    function a(e) {\n      return e.replace(/\\W/g, \"_\");\n    }\n\n    t.sanitizeIdentifier = a;\n    var o,\n        u = 0;\n\n    function s(e) {\n      if (!e || !e.reference) return null;\n      var t = e.reference;\n      if (t instanceof yc.StaticSymbol) return t.name;\n      if (t.__anonymousType) return t.__anonymousType;\n      var r = Ec.stringify(t);\n      return r.indexOf(\"(\") >= 0 ? (r = \"anonymous_\".concat(u++), t.__anonymousType = r) : r = a(r), r;\n    }\n\n    t.identifierName = s, t.identifierModuleUrl = function (e) {\n      var t = e.reference;\n      return t instanceof yc.StaticSymbol ? t.filePath : \"./\".concat(Ec.stringify(t));\n    }, t.viewClassName = function (e, t) {\n      return \"View_\".concat(s({\n        reference: e\n      }), \"_\").concat(t);\n    }, t.rendererTypeName = function (e) {\n      return \"RenderType_\".concat(s({\n        reference: e\n      }));\n    }, t.hostViewClassName = function (e) {\n      return \"HostView_\".concat(s({\n        reference: e\n      }));\n    }, t.componentFactoryName = function (e) {\n      return \"\".concat(s({\n        reference: e\n      }), \"NgFactory\");\n    }, function (e) {\n      e[e.Pipe = 0] = \"Pipe\", e[e.Directive = 1] = \"Directive\", e[e.NgModule = 2] = \"NgModule\", e[e.Injectable = 3] = \"Injectable\";\n    }(o = t.CompileSummaryKind || (t.CompileSummaryKind = {})), t.tokenName = function (e) {\n      return null != e.value ? a(e.value) : s(e.identifier);\n    }, t.tokenReference = function (e) {\n      return null != e.identifier ? e.identifier.reference : e.value;\n    };\n\n    t.CompileStylesheetMetadata = function e() {\n      var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n          n = t.moduleUrl,\n          i = t.styles,\n          a = t.styleUrls;\n      r(this, e), this.moduleUrl = n || null, this.styles = d(i), this.styleUrls = d(a);\n    };\n\n    var c = function () {\n      function e(t) {\n        var n = t.encapsulation,\n            i = t.template,\n            a = t.templateUrl,\n            o = t.htmlAst,\n            u = t.styles,\n            s = t.styleUrls,\n            c = t.externalStylesheets,\n            l = t.animations,\n            p = t.ngContentSelectors,\n            f = t.interpolation,\n            h = t.isInline,\n            g = t.preserveWhitespaces;\n        if (r(this, e), this.encapsulation = n, this.template = i, this.templateUrl = a, this.htmlAst = o, this.styles = d(u), this.styleUrls = d(s), this.externalStylesheets = d(c), this.animations = l ? D(l) : [], this.ngContentSelectors = p || [], f && 2 != f.length) throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        this.interpolation = f, this.isInline = h, this.preserveWhitespaces = g;\n      }\n\n      return i(e, [{\n        key: \"toSummary\",\n        value: function () {\n          return {\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n            styles: this.styles,\n            animations: this.animations\n          };\n        }\n      }]), e;\n    }();\n\n    t.CompileTemplateMetadata = c;\n\n    var l = function () {\n      function e(t) {\n        var n = t.isHost,\n            i = t.type,\n            a = t.isComponent,\n            o = t.selector,\n            u = t.exportAs,\n            s = t.changeDetection,\n            c = t.inputs,\n            l = t.outputs,\n            p = t.hostListeners,\n            f = t.hostProperties,\n            h = t.hostAttributes,\n            D = t.providers,\n            g = t.viewProviders,\n            m = t.queries,\n            v = t.guards,\n            b = t.viewQueries,\n            y = t.entryComponents,\n            E = t.template,\n            C = t.componentViewType,\n            A = t.rendererType,\n            w = t.componentFactory;\n        r(this, e), this.isHost = !!n, this.type = i, this.isComponent = a, this.selector = o, this.exportAs = u, this.changeDetection = s, this.inputs = c, this.outputs = l, this.hostListeners = p, this.hostProperties = f, this.hostAttributes = h, this.providers = d(D), this.viewProviders = d(g), this.queries = d(m), this.guards = v, this.viewQueries = d(b), this.entryComponents = d(y), this.template = E, this.componentViewType = C, this.rendererType = A, this.componentFactory = w;\n      }\n\n      return i(e, null, [{\n        key: \"create\",\n        value: function (t) {\n          var r = t.isHost,\n              i = t.type,\n              a = t.isComponent,\n              o = t.selector,\n              u = t.exportAs,\n              s = t.changeDetection,\n              c = t.inputs,\n              l = t.outputs,\n              p = t.host,\n              f = t.providers,\n              h = t.viewProviders,\n              d = t.queries,\n              D = t.guards,\n              g = t.viewQueries,\n              m = t.entryComponents,\n              v = t.template,\n              b = t.componentViewType,\n              y = t.rendererType,\n              E = t.componentFactory,\n              C = {},\n              A = {},\n              w = {};\n          null != p && Object.keys(p).forEach(function (e) {\n            var t = p[e],\n                r = e.match(n);\n            null === r ? w[e] = t : null != r[1] ? A[r[1]] = t : null != r[2] && (C[r[2]] = t);\n          });\n          var k = {};\n          null != c && c.forEach(function (e) {\n            var t = Ec.splitAtColon(e, [e, e]);\n            k[t[0]] = t[1];\n          });\n          var T = {};\n          return null != l && l.forEach(function (e) {\n            var t = Ec.splitAtColon(e, [e, e]);\n            T[t[0]] = t[1];\n          }), new e({\n            isHost: r,\n            type: i,\n            isComponent: !!a,\n            selector: o,\n            exportAs: u,\n            changeDetection: s,\n            inputs: k,\n            outputs: T,\n            hostListeners: C,\n            hostProperties: A,\n            hostAttributes: w,\n            providers: f,\n            viewProviders: h,\n            queries: d,\n            guards: D,\n            viewQueries: g,\n            entryComponents: m,\n            template: v,\n            componentViewType: b,\n            rendererType: y,\n            componentFactory: E\n          });\n        }\n      }]), i(e, [{\n        key: \"toSummary\",\n        value: function () {\n          return {\n            summaryKind: o.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            guards: this.guards,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n          };\n        }\n      }]), e;\n    }();\n\n    t.CompileDirectiveMetadata = l;\n\n    var p = function () {\n      function e(t) {\n        var n = t.type,\n            i = t.name,\n            a = t.pure;\n        r(this, e), this.type = n, this.name = i, this.pure = !!a;\n      }\n\n      return i(e, [{\n        key: \"toSummary\",\n        value: function () {\n          return {\n            summaryKind: o.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n          };\n        }\n      }]), e;\n    }();\n\n    t.CompilePipeMetadata = p;\n\n    t.CompileShallowModuleMetadata = function e() {\n      r(this, e);\n    };\n\n    var f = function () {\n      function e(t) {\n        var n = t.type,\n            i = t.providers,\n            a = t.declaredDirectives,\n            o = t.exportedDirectives,\n            u = t.declaredPipes,\n            s = t.exportedPipes,\n            c = t.entryComponents,\n            l = t.bootstrapComponents,\n            p = t.importedModules,\n            f = t.exportedModules,\n            h = t.schemas,\n            D = t.transitiveModule,\n            g = t.id;\n        r(this, e), this.type = n || null, this.declaredDirectives = d(a), this.exportedDirectives = d(o), this.declaredPipes = d(u), this.exportedPipes = d(s), this.providers = d(i), this.entryComponents = d(c), this.bootstrapComponents = d(l), this.importedModules = d(p), this.exportedModules = d(f), this.schemas = d(h), this.id = g || null, this.transitiveModule = D || null;\n      }\n\n      return i(e, [{\n        key: \"toSummary\",\n        value: function () {\n          var e = this.transitiveModule;\n          return {\n            summaryKind: o.NgModule,\n            type: this.type,\n            entryComponents: e.entryComponents,\n            providers: e.providers,\n            modules: e.modules,\n            exportedDirectives: e.exportedDirectives,\n            exportedPipes: e.exportedPipes\n          };\n        }\n      }]), e;\n    }();\n\n    t.CompileNgModuleMetadata = f;\n\n    var h = function () {\n      function e() {\n        r(this, e), this.directivesSet = new Set(), this.directives = [], this.exportedDirectivesSet = new Set(), this.exportedDirectives = [], this.pipesSet = new Set(), this.pipes = [], this.exportedPipesSet = new Set(), this.exportedPipes = [], this.modulesSet = new Set(), this.modules = [], this.entryComponentsSet = new Set(), this.entryComponents = [], this.providers = [];\n      }\n\n      return i(e, [{\n        key: \"addProvider\",\n        value: function (e, t) {\n          this.providers.push({\n            provider: e,\n            module: t\n          });\n        }\n      }, {\n        key: \"addDirective\",\n        value: function (e) {\n          this.directivesSet.has(e.reference) || (this.directivesSet.add(e.reference), this.directives.push(e));\n        }\n      }, {\n        key: \"addExportedDirective\",\n        value: function (e) {\n          this.exportedDirectivesSet.has(e.reference) || (this.exportedDirectivesSet.add(e.reference), this.exportedDirectives.push(e));\n        }\n      }, {\n        key: \"addPipe\",\n        value: function (e) {\n          this.pipesSet.has(e.reference) || (this.pipesSet.add(e.reference), this.pipes.push(e));\n        }\n      }, {\n        key: \"addExportedPipe\",\n        value: function (e) {\n          this.exportedPipesSet.has(e.reference) || (this.exportedPipesSet.add(e.reference), this.exportedPipes.push(e));\n        }\n      }, {\n        key: \"addModule\",\n        value: function (e) {\n          this.modulesSet.has(e.reference) || (this.modulesSet.add(e.reference), this.modules.push(e));\n        }\n      }, {\n        key: \"addEntryComponent\",\n        value: function (e) {\n          this.entryComponentsSet.has(e.componentType) || (this.entryComponentsSet.add(e.componentType), this.entryComponents.push(e));\n        }\n      }]), e;\n    }();\n\n    function d(e) {\n      return e || [];\n    }\n\n    t.TransitiveCompileNgModuleMetadata = h;\n\n    function D(e) {\n      return e.reduce(function (e, t) {\n        var r = Array.isArray(t) ? D(t) : t;\n        return e.concat(r);\n      }, []);\n    }\n\n    function g(e) {\n      return e.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, \"ng:///\");\n    }\n\n    t.ProviderMeta = function e(t, n) {\n      var i = n.useClass,\n          a = n.useValue,\n          o = n.useExisting,\n          u = n.useFactory,\n          s = n.deps,\n          c = n.multi;\n      r(this, e), this.token = t, this.useClass = i || null, this.useValue = a, this.useExisting = o, this.useFactory = u || null, this.dependencies = s || null, this.multi = !!c;\n    }, t.flatten = D, t.templateSourceUrl = function (e, t, r) {\n      var n;\n      return n = r.isInline ? t.type.reference instanceof yc.StaticSymbol ? \"\".concat(t.type.reference.filePath, \".\").concat(t.type.reference.name, \".html\") : \"\".concat(s(e), \"/\").concat(s(t.type), \".html\") : r.templateUrl, t.type.reference instanceof yc.StaticSymbol ? n : g(n);\n    }, t.sharedStylesheetJitUrl = function (e, t) {\n      var r = e.moduleUrl.split(/\\/\\\\/g),\n          n = r[r.length - 1];\n      return g(\"css/\".concat(t).concat(n, \".ngstyle.js\"));\n    }, t.ngModuleJitUrl = function (e) {\n      return g(\"\".concat(s(e.type), \"/module.ngfactory.js\"));\n    }, t.templateJitUrl = function (e, t) {\n      return g(\"\".concat(s(e), \"/\").concat(s(t.type), \".ngfactory.js\"));\n    };\n  });\n  h(Cc);\n  Cc.sanitizeIdentifier, Cc.identifierName, Cc.identifierModuleUrl, Cc.viewClassName, Cc.rendererTypeName, Cc.hostViewClassName, Cc.componentFactoryName, Cc.CompileSummaryKind, Cc.tokenName, Cc.tokenReference, Cc.CompileStylesheetMetadata, Cc.CompileTemplateMetadata, Cc.CompileDirectiveMetadata, Cc.CompilePipeMetadata, Cc.CompileShallowModuleMetadata, Cc.CompileNgModuleMetadata, Cc.TransitiveCompileNgModuleMetadata, Cc.ProviderMeta, Cc.flatten, Cc.templateSourceUrl, Cc.sharedStylesheetJitUrl, Cc.ngModuleJitUrl, Cc.templateJitUrl;\n  var Ac = d(function (e, t) {\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    });\n    /**\n         * @license\n         * Copyright Google Inc. All Rights Reserved.\n         *\n         * Use of this source code is governed by an MIT-style license that can be\n         * found in the LICENSE file at https://angular.io/license\n         */\n\n    var n = function () {\n      function e(t, n, i, a) {\n        r(this, e), this.file = t, this.offset = n, this.line = i, this.col = a;\n      }\n\n      return i(e, [{\n        key: \"toString\",\n        value: function () {\n          return null != this.offset ? \"\".concat(this.file.url, \"@\").concat(this.line, \":\").concat(this.col) : this.file.url;\n        }\n      }, {\n        key: \"moveBy\",\n        value: function (t) {\n          for (var r = this.file.content, n = r.length, i = this.offset, a = this.line, o = this.col; i > 0 && t < 0;) {\n            if (i--, t++, r.charCodeAt(i) == bc.$LF) {\n              a--;\n              var u = r.substr(0, i - 1).lastIndexOf(String.fromCharCode(bc.$LF));\n              o = u > 0 ? i - u : i;\n            } else o--;\n          }\n\n          for (; i < n && t > 0;) {\n            var s = r.charCodeAt(i);\n            i++, t--, s == bc.$LF ? (a++, o = 0) : o++;\n          }\n\n          return new e(this.file, i, a, o);\n        }\n      }, {\n        key: \"getContext\",\n        value: function (e, t) {\n          var r = this.file.content,\n              n = this.offset;\n\n          if (null != n) {\n            n > r.length - 1 && (n = r.length - 1);\n\n            for (var i = n, a = 0, o = 0; a < e && n > 0 && (a++, \"\\n\" != r[--n] || ++o != t););\n\n            for (a = 0, o = 0; a < e && i < r.length - 1 && (a++, \"\\n\" != r[++i] || ++o != t););\n\n            return {\n              before: r.substring(n, this.offset),\n              after: r.substring(this.offset, i + 1)\n            };\n          }\n\n          return null;\n        }\n      }]), e;\n    }();\n\n    t.ParseLocation = n;\n\n    var a = function e(t, n) {\n      r(this, e), this.content = t, this.url = n;\n    };\n\n    t.ParseSourceFile = a;\n\n    var o,\n        u = function () {\n      function e(t, n) {\n        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;\n        r(this, e), this.start = t, this.end = n, this.details = i;\n      }\n\n      return i(e, [{\n        key: \"toString\",\n        value: function () {\n          return this.start.file.content.substring(this.start.offset, this.end.offset);\n        }\n      }]), e;\n    }();\n\n    t.ParseSourceSpan = u, function (e) {\n      e[e.WARNING = 0] = \"WARNING\", e[e.ERROR = 1] = \"ERROR\";\n    }(o = t.ParseErrorLevel || (t.ParseErrorLevel = {}));\n\n    var s = function () {\n      function e(t, n) {\n        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : o.ERROR;\n        r(this, e), this.span = t, this.msg = n, this.level = i;\n      }\n\n      return i(e, [{\n        key: \"contextualMessage\",\n        value: function () {\n          var e = this.span.start.getContext(100, 3);\n          return e ? \"\".concat(this.msg, ' (\"').concat(e.before, \"[\").concat(o[this.level], \" ->]\").concat(e.after, '\")') : this.msg;\n        }\n      }, {\n        key: \"toString\",\n        value: function () {\n          var e = this.span.details ? \", \".concat(this.span.details) : \"\";\n          return \"\".concat(this.contextualMessage(), \": \").concat(this.span.start).concat(e);\n        }\n      }]), e;\n    }();\n\n    t.ParseError = s, t.typeSourceSpan = function (e, t) {\n      var r = Cc.identifierModuleUrl(t),\n          i = null != r ? \"in \".concat(e, \" \").concat(Cc.identifierName(t), \" in \").concat(r) : \"in \".concat(e, \" \").concat(Cc.identifierName(t)),\n          o = new a(\"\", i);\n      return new u(new n(o, -1, -1, -1), new n(o, -1, -1, -1));\n    };\n  });\n  h(Ac);\n  Ac.ParseLocation, Ac.ParseSourceFile, Ac.ParseSourceSpan, Ac.ParseErrorLevel, Ac.ParseError, Ac.typeSourceSpan;\n  var wc = d(function (e, t) {\n    /**\n         * @license\n         * Copyright Google Inc. All Rights Reserved.\n         *\n         * Use of this source code is governed by an MIT-style license that can be\n         * found in the LICENSE file at https://angular.io/license\n         */\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    });\n\n    var n = function () {\n      function e(t) {\n        var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : -1;\n        r(this, e), this.path = t, this.position = n;\n      }\n\n      return i(e, [{\n        key: \"parentOf\",\n        value: function (e) {\n          return e && this.path[this.path.indexOf(e) - 1];\n        }\n      }, {\n        key: \"childOf\",\n        value: function (e) {\n          return this.path[this.path.indexOf(e) + 1];\n        }\n      }, {\n        key: \"first\",\n        value: function (e) {\n          for (var t = this.path.length - 1; t >= 0; t--) {\n            var r = this.path[t];\n            if (r instanceof e) return r;\n          }\n        }\n      }, {\n        key: \"push\",\n        value: function (e) {\n          this.path.push(e);\n        }\n      }, {\n        key: \"pop\",\n        value: function () {\n          return this.path.pop();\n        }\n      }, {\n        key: \"empty\",\n        get: function () {\n          return !this.path || !this.path.length;\n        }\n      }, {\n        key: \"head\",\n        get: function () {\n          return this.path[0];\n        }\n      }, {\n        key: \"tail\",\n        get: function () {\n          return this.path[this.path.length - 1];\n        }\n      }]), e;\n    }();\n\n    t.AstPath = n;\n  });\n  h(wc);\n  wc.AstPath;\n  var kc = d(function (e, t) {\n    /**\n         * @license\n         * Copyright Google Inc. All Rights Reserved.\n         *\n         * Use of this source code is governed by an MIT-style license that can be\n         * found in the LICENSE file at https://angular.io/license\n         */\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    });\n\n    var n = function () {\n      function e(t, n) {\n        r(this, e), this.value = t, this.sourceSpan = n;\n      }\n\n      return i(e, [{\n        key: \"visit\",\n        value: function (e, t) {\n          return e.visitText(this, t);\n        }\n      }]), e;\n    }();\n\n    t.Text = n;\n\n    var u = function () {\n      function e(t, n) {\n        r(this, e), this.value = t, this.sourceSpan = n;\n      }\n\n      return i(e, [{\n        key: \"visit\",\n        value: function (e, t) {\n          return e.visitCdata(this, t);\n        }\n      }]), e;\n    }();\n\n    t.CDATA = u;\n\n    var c = function () {\n      function e(t, n, i, a, o) {\n        r(this, e), this.switchValue = t, this.type = n, this.cases = i, this.sourceSpan = a, this.switchValueSourceSpan = o;\n      }\n\n      return i(e, [{\n        key: \"visit\",\n        value: function (e, t) {\n          return e.visitExpansion(this, t);\n        }\n      }]), e;\n    }();\n\n    t.Expansion = c;\n\n    var l = function () {\n      function e(t, n, i, a, o) {\n        r(this, e), this.value = t, this.expression = n, this.sourceSpan = i, this.valueSourceSpan = a, this.expSourceSpan = o;\n      }\n\n      return i(e, [{\n        key: \"visit\",\n        value: function (e, t) {\n          return e.visitExpansionCase(this, t);\n        }\n      }]), e;\n    }();\n\n    t.ExpansionCase = l;\n\n    var p = function () {\n      function e(t, n, i) {\n        var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,\n            o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : null;\n        r(this, e), this.name = t, this.value = n, this.sourceSpan = i, this.valueSpan = a, this.nameSpan = o;\n      }\n\n      return i(e, [{\n        key: \"visit\",\n        value: function (e, t) {\n          return e.visitAttribute(this, t);\n        }\n      }]), e;\n    }();\n\n    t.Attribute = p;\n\n    var f = function () {\n      function e(t, n, i, a) {\n        var o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : null,\n            u = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null,\n            s = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null;\n        r(this, e), this.name = t, this.attrs = n, this.children = i, this.sourceSpan = a, this.startSourceSpan = o, this.endSourceSpan = u, this.nameSpan = s;\n      }\n\n      return i(e, [{\n        key: \"visit\",\n        value: function (e, t) {\n          return e.visitElement(this, t);\n        }\n      }]), e;\n    }();\n\n    t.Element = f;\n\n    var h = function () {\n      function e(t, n) {\n        r(this, e), this.value = t, this.sourceSpan = n;\n      }\n\n      return i(e, [{\n        key: \"visit\",\n        value: function (e, t) {\n          return e.visitComment(this, t);\n        }\n      }]), e;\n    }();\n\n    t.Comment = h;\n\n    var d = function () {\n      function e(t, n) {\n        r(this, e), this.value = t, this.sourceSpan = n;\n      }\n\n      return i(e, [{\n        key: \"visit\",\n        value: function (e, t) {\n          return e.visitDocType(this, t);\n        }\n      }]), e;\n    }();\n\n    function D(e, t) {\n      var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,\n          n = [],\n          i = e.visit ? function (t) {\n        return e.visit(t, r) || t.visit(e, r);\n      } : function (t) {\n        return t.visit(e, r);\n      };\n      return t.forEach(function (e) {\n        var t = i(e);\n        t && n.push(t);\n      }), n;\n    }\n\n    t.DocType = d, t.visitAll = D;\n\n    var g = function () {\n      function e() {\n        r(this, e);\n      }\n\n      return i(e, [{\n        key: \"visitElement\",\n        value: function (e, t) {\n          this.visitChildren(t, function (t) {\n            t(e.attrs), t(e.children);\n          });\n        }\n      }, {\n        key: \"visitAttribute\",\n        value: function (e, t) {}\n      }, {\n        key: \"visitText\",\n        value: function (e, t) {}\n      }, {\n        key: \"visitCdata\",\n        value: function (e, t) {}\n      }, {\n        key: \"visitComment\",\n        value: function (e, t) {}\n      }, {\n        key: \"visitDocType\",\n        value: function (e, t) {}\n      }, {\n        key: \"visitExpansion\",\n        value: function (e, t) {\n          return this.visitChildren(t, function (t) {\n            t(e.cases);\n          });\n        }\n      }, {\n        key: \"visitExpansionCase\",\n        value: function (e, t) {}\n      }, {\n        key: \"visitChildren\",\n        value: function (e, t) {\n          var r = [],\n              n = this;\n          return t(function (t) {\n            t && r.push(D(n, t, e));\n          }), [].concat.apply([], r);\n        }\n      }]), e;\n    }();\n\n    t.RecursiveVisitor = g, t.findNode = function (e, t) {\n      var n = [];\n      return D(new (function (e) {\n        function u() {\n          return r(this, u), s(this, o(u).apply(this, arguments));\n        }\n\n        return a(u, e), i(u, [{\n          key: \"visit\",\n          value: function (e, r) {\n            var i = function e(t) {\n              var r = t.sourceSpan.start.offset,\n                  n = t.sourceSpan.end.offset;\n              return t instanceof f && (t.endSourceSpan ? n = t.endSourceSpan.end.offset : t.children && t.children.length && (n = e(t.children[t.children.length - 1]).end)), {\n                start: r,\n                end: n\n              };\n            }(e);\n\n            if (!(i.start <= t && t < i.end)) return !0;\n            n.push(e);\n          }\n        }]), u;\n      }(g))(), e), new wc.AstPath(n, t);\n    };\n  });\n  h(kc);\n  kc.Text, kc.CDATA, kc.Expansion, kc.ExpansionCase, kc.Attribute, kc.Element, kc.Comment, kc.DocType, kc.visitAll, kc.RecursiveVisitor, kc.findNode;\n  var Tc = d(function (e, t) {\n    var n;\n    /**\n         * @license\n         * Copyright Google Inc. All Rights Reserved.\n         *\n         * Use of this source code is governed by an MIT-style license that can be\n         * found in the LICENSE file at https://angular.io/license\n         */\n\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    }), function (e) {\n      e[e.TAG_OPEN_START = 0] = \"TAG_OPEN_START\", e[e.TAG_OPEN_END = 1] = \"TAG_OPEN_END\", e[e.TAG_OPEN_END_VOID = 2] = \"TAG_OPEN_END_VOID\", e[e.TAG_CLOSE = 3] = \"TAG_CLOSE\", e[e.TEXT = 4] = \"TEXT\", e[e.ESCAPABLE_RAW_TEXT = 5] = \"ESCAPABLE_RAW_TEXT\", e[e.RAW_TEXT = 6] = \"RAW_TEXT\", e[e.COMMENT_START = 7] = \"COMMENT_START\", e[e.COMMENT_END = 8] = \"COMMENT_END\", e[e.CDATA_START = 9] = \"CDATA_START\", e[e.CDATA_END = 10] = \"CDATA_END\", e[e.ATTR_NAME = 11] = \"ATTR_NAME\", e[e.ATTR_VALUE = 12] = \"ATTR_VALUE\", e[e.DOC_TYPE_START = 13] = \"DOC_TYPE_START\", e[e.DOC_TYPE_END = 14] = \"DOC_TYPE_END\", e[e.EXPANSION_FORM_START = 15] = \"EXPANSION_FORM_START\", e[e.EXPANSION_CASE_VALUE = 16] = \"EXPANSION_CASE_VALUE\", e[e.EXPANSION_CASE_EXP_START = 17] = \"EXPANSION_CASE_EXP_START\", e[e.EXPANSION_CASE_EXP_END = 18] = \"EXPANSION_CASE_EXP_END\", e[e.EXPANSION_FORM_END = 19] = \"EXPANSION_FORM_END\", e[e.EOF = 20] = \"EOF\";\n    }(n = t.TokenType || (t.TokenType = {}));\n\n    var u = function e(t, n, i) {\n      r(this, e), this.type = t, this.parts = n, this.sourceSpan = i;\n    };\n\n    t.Token = u;\n\n    var c = function (e) {\n      function t(e, n, i) {\n        var a;\n        return r(this, t), (a = s(this, o(t).call(this, i, e))).tokenType = n, a;\n      }\n\n      return a(t, e), t;\n    }(Ac.ParseError);\n\n    t.TokenError = c;\n\n    var l = function e(t, n) {\n      r(this, e), this.tokens = t, this.errors = n;\n    };\n\n    t.TokenizeResult = l, t.tokenize = function (e, t, r) {\n      var n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],\n          i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : vc.DEFAULT_INTERPOLATION_CONFIG,\n          a = arguments.length > 5 && void 0 !== arguments[5] && arguments[5],\n          o = arguments.length > 6 && void 0 !== arguments[6] && arguments[6];\n      return new D(new Ac.ParseSourceFile(e, t), r, n, i, a, o).tokenize();\n    };\n    var p = /\\r\\n?/g;\n\n    function f(e) {\n      var t = e === bc.$EOF ? \"EOF\" : String.fromCharCode(e);\n      return 'Unexpected character \"'.concat(t, '\"');\n    }\n\n    function h(e) {\n      return 'Unknown entity \"'.concat(e, '\" - use the \"&#<decimal>;\" or  \"&#x<hex>;\" syntax');\n    }\n\n    var d = function e(t) {\n      r(this, e), this.error = t;\n    },\n        D = function () {\n      function e(t, n, i) {\n        var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : vc.DEFAULT_INTERPOLATION_CONFIG,\n            o = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],\n            u = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];\n        r(this, e), this._file = t, this._getTagDefinition = n, this._tokenizeIcu = i, this._interpolationConfig = a, this.canSelfClose = o, this.allowHtmComponentClosingTags = u, this._peek = -1, this._nextPeek = -1, this._index = -1, this._line = 0, this._column = -1, this._expansionCaseStack = [], this._inInterpolation = !1, this.tokens = [], this.errors = [], this._input = t.content, this._length = t.content.length, this._advance();\n      }\n\n      return i(e, [{\n        key: \"_processCarriageReturns\",\n        value: function (e) {\n          return e.replace(p, \"\\n\");\n        }\n      }, {\n        key: \"tokenize\",\n        value: function () {\n          for (; this._peek !== bc.$EOF;) {\n            var e = this._getLocation();\n\n            try {\n              if (this._attemptCharCode(bc.$LT)) {\n                if (this._attemptCharCode(bc.$BANG)) this._attemptStr(\"[CDATA[\") ? this._consumeCdata(e) : this._attemptStr(\"--\") ? this._consumeComment(e) : this._attemptStrCaseInsensitive(\"doctype\") ? this._consumeDocType(e) : this._consumeBogusComment(e);else if (this._attemptCharCode(bc.$SLASH)) this._consumeTagClose(e);else {\n                  var t = this._savePosition();\n\n                  this._attemptCharCode(bc.$QUESTION) ? (this._restorePosition(t), this._consumeBogusComment(e)) : this._consumeTagOpen(e);\n                }\n              } else this._tokenizeIcu && this._tokenizeExpansionForm() || this._consumeText();\n            } catch (e) {\n              if (!(e instanceof d)) throw e;\n              this.errors.push(e.error);\n            }\n          }\n\n          return this._beginToken(n.EOF), this._endToken([]), new l(function (e) {\n            for (var t = [], r = void 0, i = 0; i < e.length; i++) {\n              var a = e[i];\n              r && r.type == n.TEXT && a.type == n.TEXT ? (r.parts[0] += a.parts[0], r.sourceSpan.end = a.sourceSpan.end) : (r = a, t.push(r));\n            }\n\n            return t;\n          }(this.tokens), this.errors);\n        }\n      }, {\n        key: \"_tokenizeExpansionForm\",\n        value: function () {\n          if (y(this._input, this._index, this._interpolationConfig)) return this._consumeExpansionFormStart(), !0;\n          if (((e = this._peek) === bc.$EQ || bc.isAsciiLetter(e) || bc.isDigit(e)) && this._isInExpansionForm()) return this._consumeExpansionCaseStart(), !0;\n          var e;\n\n          if (this._peek === bc.$RBRACE) {\n            if (this._isInExpansionCase()) return this._consumeExpansionCaseEnd(), !0;\n            if (this._isInExpansionForm()) return this._consumeExpansionFormEnd(), !0;\n          }\n\n          return !1;\n        }\n      }, {\n        key: \"_getLocation\",\n        value: function () {\n          return new Ac.ParseLocation(this._file, this._index, this._line, this._column);\n        }\n      }, {\n        key: \"_getSpan\",\n        value: function () {\n          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._getLocation(),\n              t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this._getLocation();\n          return new Ac.ParseSourceSpan(e, t);\n        }\n      }, {\n        key: \"_beginToken\",\n        value: function (e) {\n          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this._getLocation();\n          this._currentTokenStart = t, this._currentTokenType = e;\n        }\n      }, {\n        key: \"_endToken\",\n        value: function (e) {\n          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this._getLocation(),\n              r = new u(this._currentTokenType, e, new Ac.ParseSourceSpan(this._currentTokenStart, t));\n          return this.tokens.push(r), this._currentTokenStart = null, this._currentTokenType = null, r;\n        }\n      }, {\n        key: \"_createError\",\n        value: function (e, t) {\n          this._isInExpansionForm() && (e += ' (Do you have an unescaped \"{\" in your template? Use \"{{ \\'{\\' }}\") to escape it.)');\n          var r = new c(e, this._currentTokenType, t);\n          return this._currentTokenStart = null, this._currentTokenType = null, new d(r);\n        }\n      }, {\n        key: \"_advance\",\n        value: function () {\n          if (this._index >= this._length) throw this._createError(f(bc.$EOF), this._getSpan());\n          this._peek === bc.$LF ? (this._line++, this._column = 0) : this._peek !== bc.$LF && this._peek !== bc.$CR && this._column++, this._index++, this._peek = this._index >= this._length ? bc.$EOF : this._input.charCodeAt(this._index), this._nextPeek = this._index + 1 >= this._length ? bc.$EOF : this._input.charCodeAt(this._index + 1);\n        }\n      }, {\n        key: \"_attemptCharCode\",\n        value: function (e) {\n          return this._peek === e && (this._advance(), !0);\n        }\n      }, {\n        key: \"_attemptCharCodeCaseInsensitive\",\n        value: function (e) {\n          return t = this._peek, r = e, E(t) == E(r) && (this._advance(), !0);\n          var t, r;\n        }\n      }, {\n        key: \"_requireCharCode\",\n        value: function (e) {\n          var t = this._getLocation();\n\n          if (!this._attemptCharCode(e)) throw this._createError(f(this._peek), this._getSpan(t, t));\n        }\n      }, {\n        key: \"_attemptStr\",\n        value: function (e) {\n          var t = e.length;\n          if (this._index + t > this._length) return !1;\n\n          for (var r = this._savePosition(), n = 0; n < t; n++) if (!this._attemptCharCode(e.charCodeAt(n))) return this._restorePosition(r), !1;\n\n          return !0;\n        }\n      }, {\n        key: \"_attemptStrCaseInsensitive\",\n        value: function (e) {\n          for (var t = 0; t < e.length; t++) if (!this._attemptCharCodeCaseInsensitive(e.charCodeAt(t))) return !1;\n\n          return !0;\n        }\n      }, {\n        key: \"_requireStr\",\n        value: function (e) {\n          var t = this._getLocation();\n\n          if (!this._attemptStr(e)) throw this._createError(f(this._peek), this._getSpan(t));\n        }\n      }, {\n        key: \"_requireStrCaseInsensitive\",\n        value: function (e) {\n          var t = this._getLocation();\n\n          if (!this._attemptStrCaseInsensitive(e)) throw this._createError(f(this._peek), this._getSpan(t));\n        }\n      }, {\n        key: \"_attemptCharCodeUntilFn\",\n        value: function (e) {\n          for (; !e(this._peek);) this._advance();\n        }\n      }, {\n        key: \"_requireCharCodeUntilFn\",\n        value: function (e, t) {\n          var r = this._getLocation();\n\n          if (this._attemptCharCodeUntilFn(e), this._index - r.offset < t) throw this._createError(f(this._peek), this._getSpan(r, r));\n        }\n      }, {\n        key: \"_attemptUntilChar\",\n        value: function (e) {\n          for (; this._peek !== e;) this._advance();\n        }\n      }, {\n        key: \"_readChar\",\n        value: function (e) {\n          if (e && this._peek === bc.$AMPERSAND) return this._decodeEntity();\n          var t = this._index;\n          return this._advance(), this._input[t];\n        }\n      }, {\n        key: \"_decodeEntity\",\n        value: function () {\n          var e = this._getLocation();\n\n          if (this._advance(), !this._attemptCharCode(bc.$HASH)) {\n            var t = this._savePosition();\n\n            if (this._attemptCharCodeUntilFn(b), this._peek != bc.$SEMICOLON) return this._restorePosition(t), \"&\";\n\n            this._advance();\n\n            var r = this._input.substring(e.offset + 1, this._index - 1),\n                n = Dc.NAMED_ENTITIES[r];\n\n            if (!n) throw this._createError(h(r), this._getSpan(e));\n            return n;\n          }\n\n          var i = this._attemptCharCode(bc.$x) || this._attemptCharCode(bc.$X),\n              a = this._getLocation().offset;\n\n          if (this._attemptCharCodeUntilFn(v), this._peek != bc.$SEMICOLON) throw this._createError(f(this._peek), this._getSpan());\n\n          this._advance();\n\n          var o = this._input.substring(a, this._index - 1);\n\n          try {\n            var u = parseInt(o, i ? 16 : 10);\n            return String.fromCharCode(u);\n          } catch (t) {\n            var s = this._input.substring(e.offset + 1, this._index - 1);\n\n            throw this._createError(h(s), this._getSpan(e));\n          }\n        }\n      }, {\n        key: \"_consumeRawText\",\n        value: function (e, t, r) {\n          var i,\n              a = this._getLocation();\n\n          this._beginToken(e ? n.ESCAPABLE_RAW_TEXT : n.RAW_TEXT, a);\n\n          for (var o = []; i = this._getLocation(), !this._attemptCharCode(t) || !r();) for (this._index > i.offset && o.push(this._input.substring(i.offset, this._index)); this._peek !== t;) o.push(this._readChar(e));\n\n          return this._endToken([this._processCarriageReturns(o.join(\"\"))], i);\n        }\n      }, {\n        key: \"_consumeComment\",\n        value: function (e) {\n          var t = this;\n          this._beginToken(n.COMMENT_START, e), this._endToken([]);\n\n          var r = this._consumeRawText(!1, bc.$MINUS, function () {\n            return t._attemptStr(\"->\");\n          });\n\n          this._beginToken(n.COMMENT_END, r.sourceSpan.end), this._endToken([]);\n        }\n      }, {\n        key: \"_consumeBogusComment\",\n        value: function (e) {\n          this._beginToken(n.COMMENT_START, e), this._endToken([]);\n\n          var t = this._consumeRawText(!1, bc.$GT, function () {\n            return !0;\n          });\n\n          this._beginToken(n.COMMENT_END, t.sourceSpan.end), this._endToken([]);\n        }\n      }, {\n        key: \"_consumeCdata\",\n        value: function (e) {\n          var t = this;\n          this._beginToken(n.CDATA_START, e), this._endToken([]);\n\n          var r = this._consumeRawText(!1, bc.$RBRACKET, function () {\n            return t._attemptStr(\"]>\");\n          });\n\n          this._beginToken(n.CDATA_END, r.sourceSpan.end), this._endToken([]);\n        }\n      }, {\n        key: \"_consumeDocType\",\n        value: function (e) {\n          this._beginToken(n.DOC_TYPE_START, e), this._endToken([]);\n\n          var t = this._consumeRawText(!1, bc.$GT, function () {\n            return !0;\n          });\n\n          this._beginToken(n.DOC_TYPE_END, t.sourceSpan.end), this._endToken([]);\n        }\n      }, {\n        key: \"_consumePrefixAndName\",\n        value: function () {\n          for (var e, t, r = this._index, n = null; this._peek !== bc.$COLON && !(((e = this._peek) < bc.$a || bc.$z < e) && (e < bc.$A || bc.$Z < e) && (e < bc.$0 || e > bc.$9));) this._advance();\n\n          return this._peek === bc.$COLON ? (this._advance(), n = this._input.substring(r, this._index - 1), t = this._index) : t = r, this._requireCharCodeUntilFn(m, this._index === t ? 1 : 0), [n, this._input.substring(t, this._index)];\n        }\n      }, {\n        key: \"_consumeTagOpen\",\n        value: function (e) {\n          var t,\n              r,\n              i = this._savePosition();\n\n          try {\n            if (!bc.isAsciiLetter(this._peek)) throw this._createError(f(this._peek), this._getSpan());\n            var a = this._index;\n\n            for (this._consumeTagOpenStart(e), r = (t = this._input.substring(a, this._index)).toLowerCase(), this._attemptCharCodeUntilFn(g); this._peek !== bc.$SLASH && this._peek !== bc.$GT;) this._consumeAttributeName(), this._attemptCharCodeUntilFn(g), this._attemptCharCode(bc.$EQ) && (this._attemptCharCodeUntilFn(g), this._consumeAttributeValue()), this._attemptCharCodeUntilFn(g);\n\n            this._consumeTagOpenEnd();\n          } catch (t) {\n            if (t instanceof d) return this._restorePosition(i), this._beginToken(n.TEXT, e), void this._endToken([\"<\"]);\n            throw t;\n          }\n\n          if (!this.canSelfClose || this.tokens[this.tokens.length - 1].type !== n.TAG_OPEN_END_VOID) {\n            var o = this._getTagDefinition(t).contentType;\n\n            o === Dc.TagContentType.RAW_TEXT ? this._consumeRawTextWithTagClose(r, !1) : o === Dc.TagContentType.ESCAPABLE_RAW_TEXT && this._consumeRawTextWithTagClose(r, !0);\n          }\n        }\n      }, {\n        key: \"_consumeRawTextWithTagClose\",\n        value: function (e, t) {\n          var r = this,\n              i = this._consumeRawText(t, bc.$LT, function () {\n            return !!r._attemptCharCode(bc.$SLASH) && (r._attemptCharCodeUntilFn(g), !!r._attemptStrCaseInsensitive(e) && (r._attemptCharCodeUntilFn(g), r._attemptCharCode(bc.$GT)));\n          });\n\n          this._beginToken(n.TAG_CLOSE, i.sourceSpan.end), this._endToken([null, e]);\n        }\n      }, {\n        key: \"_consumeTagOpenStart\",\n        value: function (e) {\n          this._beginToken(n.TAG_OPEN_START, e);\n\n          var t = this._consumePrefixAndName();\n\n          this._endToken(t);\n        }\n      }, {\n        key: \"_consumeAttributeName\",\n        value: function () {\n          this._beginToken(n.ATTR_NAME);\n\n          var e = this._consumePrefixAndName();\n\n          this._endToken(e);\n        }\n      }, {\n        key: \"_consumeAttributeValue\",\n        value: function () {\n          var e;\n\n          if (this._beginToken(n.ATTR_VALUE), this._peek === bc.$SQ || this._peek === bc.$DQ) {\n            var t = this._peek;\n\n            this._advance();\n\n            for (var r = []; this._peek !== t;) r.push(this._readChar(!0));\n\n            e = r.join(\"\"), this._advance();\n          } else {\n            var i = this._index;\n            this._requireCharCodeUntilFn(m, 1), e = this._input.substring(i, this._index);\n          }\n\n          this._endToken([this._processCarriageReturns(e)]);\n        }\n      }, {\n        key: \"_consumeTagOpenEnd\",\n        value: function () {\n          var e = this._attemptCharCode(bc.$SLASH) ? n.TAG_OPEN_END_VOID : n.TAG_OPEN_END;\n          this._beginToken(e), this._requireCharCode(bc.$GT), this._endToken([]);\n        }\n      }, {\n        key: \"_consumeTagClose\",\n        value: function (e) {\n          if (this._beginToken(n.TAG_CLOSE, e), this._attemptCharCodeUntilFn(g), this.allowHtmComponentClosingTags && this._attemptCharCode(bc.$SLASH)) this._attemptCharCodeUntilFn(g), this._requireCharCode(bc.$GT), this._endToken([]);else {\n            var t = this._consumePrefixAndName();\n\n            this._attemptCharCodeUntilFn(g), this._requireCharCode(bc.$GT), this._endToken(t);\n          }\n        }\n      }, {\n        key: \"_consumeExpansionFormStart\",\n        value: function () {\n          this._beginToken(n.EXPANSION_FORM_START, this._getLocation()), this._requireCharCode(bc.$LBRACE), this._endToken([]), this._expansionCaseStack.push(n.EXPANSION_FORM_START), this._beginToken(n.RAW_TEXT, this._getLocation());\n\n          var e = this._readUntil(bc.$COMMA);\n\n          this._endToken([e], this._getLocation()), this._requireCharCode(bc.$COMMA), this._attemptCharCodeUntilFn(g), this._beginToken(n.RAW_TEXT, this._getLocation());\n\n          var t = this._readUntil(bc.$COMMA);\n\n          this._endToken([t], this._getLocation()), this._requireCharCode(bc.$COMMA), this._attemptCharCodeUntilFn(g);\n        }\n      }, {\n        key: \"_consumeExpansionCaseStart\",\n        value: function () {\n          this._beginToken(n.EXPANSION_CASE_VALUE, this._getLocation());\n\n          var e = this._readUntil(bc.$LBRACE).trim();\n\n          this._endToken([e], this._getLocation()), this._attemptCharCodeUntilFn(g), this._beginToken(n.EXPANSION_CASE_EXP_START, this._getLocation()), this._requireCharCode(bc.$LBRACE), this._endToken([], this._getLocation()), this._attemptCharCodeUntilFn(g), this._expansionCaseStack.push(n.EXPANSION_CASE_EXP_START);\n        }\n      }, {\n        key: \"_consumeExpansionCaseEnd\",\n        value: function () {\n          this._beginToken(n.EXPANSION_CASE_EXP_END, this._getLocation()), this._requireCharCode(bc.$RBRACE), this._endToken([], this._getLocation()), this._attemptCharCodeUntilFn(g), this._expansionCaseStack.pop();\n        }\n      }, {\n        key: \"_consumeExpansionFormEnd\",\n        value: function () {\n          this._beginToken(n.EXPANSION_FORM_END, this._getLocation()), this._requireCharCode(bc.$RBRACE), this._endToken([]), this._expansionCaseStack.pop();\n        }\n      }, {\n        key: \"_consumeText\",\n        value: function () {\n          var e = this._getLocation();\n\n          this._beginToken(n.TEXT, e);\n\n          var t = [];\n\n          do {\n            this._interpolationConfig && this._attemptStr(this._interpolationConfig.start) ? (t.push(this._interpolationConfig.start), this._inInterpolation = !0) : this._interpolationConfig && this._inInterpolation && this._attemptStr(this._interpolationConfig.end) ? (t.push(this._interpolationConfig.end), this._inInterpolation = !1) : t.push(this._readChar(!0));\n          } while (!this._isTextEnd());\n\n          this._endToken([this._processCarriageReturns(t.join(\"\"))]);\n        }\n      }, {\n        key: \"_isTextEnd\",\n        value: function () {\n          if (this._peek === bc.$LT || this._peek === bc.$EOF) return !0;\n\n          if (this._tokenizeIcu && !this._inInterpolation) {\n            if (y(this._input, this._index, this._interpolationConfig)) return !0;\n            if (this._peek === bc.$RBRACE && this._isInExpansionCase()) return !0;\n          }\n\n          return !1;\n        }\n      }, {\n        key: \"_savePosition\",\n        value: function () {\n          return [this._peek, this._index, this._column, this._line, this.tokens.length];\n        }\n      }, {\n        key: \"_readUntil\",\n        value: function (e) {\n          var t = this._index;\n          return this._attemptUntilChar(e), this._input.substring(t, this._index);\n        }\n      }, {\n        key: \"_restorePosition\",\n        value: function (e) {\n          this._peek = e[0], this._index = e[1], this._column = e[2], this._line = e[3];\n          var t = e[4];\n          t < this.tokens.length && (this.tokens = this.tokens.slice(0, t));\n        }\n      }, {\n        key: \"_isInExpansionCase\",\n        value: function () {\n          return this._expansionCaseStack.length > 0 && this._expansionCaseStack[this._expansionCaseStack.length - 1] === n.EXPANSION_CASE_EXP_START;\n        }\n      }, {\n        key: \"_isInExpansionForm\",\n        value: function () {\n          return this._expansionCaseStack.length > 0 && this._expansionCaseStack[this._expansionCaseStack.length - 1] === n.EXPANSION_FORM_START;\n        }\n      }]), e;\n    }();\n\n    function g(e) {\n      return !bc.isWhitespace(e) || e === bc.$EOF;\n    }\n\n    function m(e) {\n      return bc.isWhitespace(e) || e === bc.$GT || e === bc.$SLASH || e === bc.$SQ || e === bc.$DQ || e === bc.$EQ;\n    }\n\n    function v(e) {\n      return e == bc.$SEMICOLON || e == bc.$EOF || !bc.isAsciiHexDigit(e);\n    }\n\n    function b(e) {\n      return e == bc.$SEMICOLON || e == bc.$EOF || !bc.isAsciiLetter(e);\n    }\n\n    function y(e, t, r) {\n      var n = !!r && e.indexOf(r.start, t) == t;\n      return e.charCodeAt(t) == bc.$LBRACE && !n;\n    }\n\n    function E(e) {\n      return e >= bc.$a && e <= bc.$z ? e - bc.$a + bc.$A : e;\n    }\n  });\n  h(Tc);\n  Tc.TokenType, Tc.Token, Tc.TokenError, Tc.TokenizeResult, Tc.tokenize;\n\n  var _c = d(function (e, t) {\n    /**\n         * @license\n         * Copyright Google Inc. All Rights Reserved.\n         *\n         * Use of this source code is governed by an MIT-style license that can be\n         * found in the LICENSE file at https://angular.io/license\n         */\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    });\n\n    var n = function (e) {\n      function t(e, n, i) {\n        var a;\n        return r(this, t), (a = s(this, o(t).call(this, n, i))).elementName = e, a;\n      }\n\n      return a(t, e), i(t, null, [{\n        key: \"create\",\n        value: function (e, r, n) {\n          return new t(e, r, n);\n        }\n      }]), t;\n    }(Ac.ParseError);\n\n    t.TreeError = n;\n\n    var u = function e(t, n) {\n      r(this, e), this.rootNodes = t, this.errors = n;\n    };\n\n    t.ParseTreeResult = u;\n\n    var c = function () {\n      function e(t) {\n        r(this, e), this.getTagDefinition = t;\n      }\n\n      return i(e, [{\n        key: \"parse\",\n        value: function (e, t) {\n          var r = this,\n              n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],\n              i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : vc.DEFAULT_INTERPOLATION_CONFIG,\n              a = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],\n              o = arguments.length > 5 && void 0 !== arguments[5] && arguments[5],\n              s = arguments.length > 6 && void 0 !== arguments[6] && arguments[6],\n              c = s ? this.getTagDefinition : function (e) {\n            return r.getTagDefinition(e.toLowerCase());\n          },\n              p = Tc.tokenize(e, t, c, n, i, a, o),\n              f = new l(p.tokens, c, a, o, s).build();\n          return new u(f.rootNodes, p.errors.concat(f.errors));\n        }\n      }]), e;\n    }();\n\n    t.Parser = c;\n\n    var l = function () {\n      function e(t, n, i, a, o) {\n        r(this, e), this.tokens = t, this.getTagDefinition = n, this.canSelfClose = i, this.allowHtmComponentClosingTags = a, this.isTagNameCaseSensitive = o, this._index = -1, this._rootNodes = [], this._errors = [], this._elementStack = [], this._advance();\n      }\n\n      return i(e, [{\n        key: \"build\",\n        value: function () {\n          for (; this._peek.type !== Tc.TokenType.EOF;) this._peek.type === Tc.TokenType.TAG_OPEN_START ? this._consumeStartTag(this._advance()) : this._peek.type === Tc.TokenType.TAG_CLOSE ? this._consumeEndTag(this._advance()) : this._peek.type === Tc.TokenType.CDATA_START ? (this._closeVoidElement(), this._consumeCdata(this._advance())) : this._peek.type === Tc.TokenType.COMMENT_START ? (this._closeVoidElement(), this._consumeComment(this._advance())) : this._peek.type === Tc.TokenType.TEXT || this._peek.type === Tc.TokenType.RAW_TEXT || this._peek.type === Tc.TokenType.ESCAPABLE_RAW_TEXT ? (this._closeVoidElement(), this._consumeText(this._advance())) : this._peek.type === Tc.TokenType.EXPANSION_FORM_START ? this._consumeExpansion(this._advance()) : this._peek.type === Tc.TokenType.DOC_TYPE_START ? this._consumeDocType(this._advance()) : this._advance();\n\n          return new u(this._rootNodes, this._errors);\n        }\n      }, {\n        key: \"_advance\",\n        value: function () {\n          var e = this._peek;\n          return this._index < this.tokens.length - 1 && this._index++, this._peek = this.tokens[this._index], e;\n        }\n      }, {\n        key: \"_advanceIf\",\n        value: function (e) {\n          return this._peek.type === e ? this._advance() : null;\n        }\n      }, {\n        key: \"_consumeCdata\",\n        value: function (e) {\n          var t = this._advance(),\n              r = this._getText(t),\n              n = this._advanceIf(Tc.TokenType.CDATA_END);\n\n          this._addToParent(new kc.CDATA(r, new Ac.ParseSourceSpan(e.sourceSpan.start, (n || t).sourceSpan.end)));\n        }\n      }, {\n        key: \"_consumeComment\",\n        value: function (e) {\n          var t = this._advanceIf(Tc.TokenType.RAW_TEXT),\n              r = this._advanceIf(Tc.TokenType.COMMENT_END),\n              n = null != t ? t.parts[0].trim() : null,\n              i = new Ac.ParseSourceSpan(e.sourceSpan.start, (r || t || e).sourceSpan.end);\n\n          this._addToParent(new kc.Comment(n, i));\n        }\n      }, {\n        key: \"_consumeDocType\",\n        value: function (e) {\n          var t = this._advanceIf(Tc.TokenType.RAW_TEXT),\n              r = this._advanceIf(Tc.TokenType.DOC_TYPE_END),\n              n = null != t ? t.parts[0].trim() : null,\n              i = new Ac.ParseSourceSpan(e.sourceSpan.start, (r || t || e).sourceSpan.end);\n\n          this._addToParent(new kc.DocType(n, i));\n        }\n      }, {\n        key: \"_consumeExpansion\",\n        value: function (e) {\n          for (var t = this._advance(), r = this._advance(), i = []; this._peek.type === Tc.TokenType.EXPANSION_CASE_VALUE;) {\n            var a = this._parseExpansionCase();\n\n            if (!a) return;\n            i.push(a);\n          }\n\n          if (this._peek.type === Tc.TokenType.EXPANSION_FORM_END) {\n            var o = new Ac.ParseSourceSpan(e.sourceSpan.start, this._peek.sourceSpan.end);\n            this._addToParent(new kc.Expansion(t.parts[0], r.parts[0], i, o, t.sourceSpan)), this._advance();\n          } else this._errors.push(n.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n        }\n      }, {\n        key: \"_parseExpansionCase\",\n        value: function () {\n          var t = this._advance();\n\n          if (this._peek.type !== Tc.TokenType.EXPANSION_CASE_EXP_START) return this._errors.push(n.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\")), null;\n\n          var r = this._advance(),\n              i = this._collectExpansionExpTokens(r);\n\n          if (!i) return null;\n\n          var a = this._advance();\n\n          i.push(new Tc.Token(Tc.TokenType.EOF, [], a.sourceSpan));\n          var o = new e(i, this.getTagDefinition, this.canSelfClose, this.allowHtmComponentClosingTags, this.isTagNameCaseSensitive).build();\n          if (o.errors.length > 0) return this._errors = this._errors.concat(o.errors), null;\n          var u = new Ac.ParseSourceSpan(t.sourceSpan.start, a.sourceSpan.end),\n              s = new Ac.ParseSourceSpan(r.sourceSpan.start, a.sourceSpan.end);\n          return new kc.ExpansionCase(t.parts[0], o.rootNodes, u, t.sourceSpan, s);\n        }\n      }, {\n        key: \"_collectExpansionExpTokens\",\n        value: function (e) {\n          for (var t = [], r = [Tc.TokenType.EXPANSION_CASE_EXP_START];;) {\n            if (this._peek.type !== Tc.TokenType.EXPANSION_FORM_START && this._peek.type !== Tc.TokenType.EXPANSION_CASE_EXP_START || r.push(this._peek.type), this._peek.type === Tc.TokenType.EXPANSION_CASE_EXP_END) {\n              if (!p(r, Tc.TokenType.EXPANSION_CASE_EXP_START)) return this._errors.push(n.create(null, e.sourceSpan, \"Invalid ICU message. Missing '}'.\")), null;\n              if (r.pop(), 0 == r.length) return t;\n            }\n\n            if (this._peek.type === Tc.TokenType.EXPANSION_FORM_END) {\n              if (!p(r, Tc.TokenType.EXPANSION_FORM_START)) return this._errors.push(n.create(null, e.sourceSpan, \"Invalid ICU message. Missing '}'.\")), null;\n              r.pop();\n            }\n\n            if (this._peek.type === Tc.TokenType.EOF) return this._errors.push(n.create(null, e.sourceSpan, \"Invalid ICU message. Missing '}'.\")), null;\n            t.push(this._advance());\n          }\n        }\n      }, {\n        key: \"_getText\",\n        value: function (e) {\n          var t = e.parts[0];\n\n          if (t.length > 0 && \"\\n\" == t[0]) {\n            var r = this._getParentElement();\n\n            null != r && 0 == r.children.length && this.getTagDefinition(r.name).ignoreFirstLf && (t = t.substring(1));\n          }\n\n          return t;\n        }\n      }, {\n        key: \"_consumeText\",\n        value: function (e) {\n          var t = this._getText(e);\n\n          t.length > 0 && this._addToParent(new kc.Text(t, e.sourceSpan));\n        }\n      }, {\n        key: \"_closeVoidElement\",\n        value: function () {\n          var e = this._getParentElement();\n\n          e && this.getTagDefinition(e.name).isVoid && this._elementStack.pop();\n        }\n      }, {\n        key: \"_consumeStartTag\",\n        value: function (e) {\n          for (var t = e.parts[0], r = e.parts[1], i = []; this._peek.type === Tc.TokenType.ATTR_NAME;) i.push(this._consumeAttr(this._advance()));\n\n          var a = this._getElementFullName(t, r, this._getParentElement()),\n              o = !1;\n\n          if (this._peek.type === Tc.TokenType.TAG_OPEN_END_VOID) {\n            this._advance(), o = !0;\n            var u = this.getTagDefinition(a);\n            this.canSelfClose || u.canSelfClose || null !== Dc.getNsPrefix(a) || u.isVoid || this._errors.push(n.create(a, e.sourceSpan, 'Only void and foreign elements can be self closed \"'.concat(e.parts[1], '\"')));\n          } else this._peek.type === Tc.TokenType.TAG_OPEN_END && (this._advance(), o = !1);\n\n          var s = this._peek.sourceSpan.start,\n              c = new Ac.ParseSourceSpan(e.sourceSpan.start, s),\n              l = new Ac.ParseSourceSpan(e.sourceSpan.start.moveBy(1), e.sourceSpan.end),\n              p = new kc.Element(a, i, [], c, c, void 0, l);\n          this._pushElement(p), o && (this._popElement(a), p.endSourceSpan = c);\n        }\n      }, {\n        key: \"_pushElement\",\n        value: function (e) {\n          var t = this._getParentElement();\n\n          t && this.getTagDefinition(t.name).isClosedByChild(e.name) && this._elementStack.pop();\n\n          var r = this.getTagDefinition(e.name),\n              n = this._getParentElementSkippingContainers(),\n              i = n.parent,\n              a = n.container;\n\n          if (i && r.requireExtraParent(i.name)) {\n            var o = new kc.Element(r.parentToAdd, [], [], e.sourceSpan, e.startSourceSpan, e.endSourceSpan);\n\n            this._insertBeforeContainer(i, a, o);\n          }\n\n          this._addToParent(e), this._elementStack.push(e);\n        }\n      }, {\n        key: \"_consumeEndTag\",\n        value: function (e) {\n          var t = this.allowHtmComponentClosingTags && 0 === e.parts.length ? null : this._getElementFullName(e.parts[0], e.parts[1], this._getParentElement());\n          if (this._getParentElement() && (this._getParentElement().endSourceSpan = e.sourceSpan), t && this.getTagDefinition(t).isVoid) this._errors.push(n.create(t, e.sourceSpan, 'Void elements do not have end tags \"'.concat(e.parts[1], '\"')));else if (!this._popElement(t)) {\n            var r = 'Unexpected closing tag \"'.concat(t, '\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags');\n\n            this._errors.push(n.create(t, e.sourceSpan, r));\n          }\n        }\n      }, {\n        key: \"_popElement\",\n        value: function (e) {\n          for (var t = this._elementStack.length - 1; t >= 0; t--) {\n            var r = this._elementStack[t];\n            if (!e || (Dc.getNsPrefix(r.name) ? r.name == e : r.name.toLowerCase() == e.toLowerCase())) return this._elementStack.splice(t, this._elementStack.length - t), !0;\n            if (!this.getTagDefinition(r.name).closedByParent) return !1;\n          }\n\n          return !1;\n        }\n      }, {\n        key: \"_consumeAttr\",\n        value: function (e) {\n          var t = Dc.mergeNsAndName(e.parts[0], e.parts[1]),\n              r = e.sourceSpan.end,\n              n = \"\",\n              i = void 0;\n\n          if (this._peek.type === Tc.TokenType.ATTR_VALUE) {\n            var a = this._advance();\n\n            n = a.parts[0], r = a.sourceSpan.end, i = a.sourceSpan;\n          }\n\n          return new kc.Attribute(t, n, new Ac.ParseSourceSpan(e.sourceSpan.start, r), i, e.sourceSpan);\n        }\n      }, {\n        key: \"_getParentElement\",\n        value: function () {\n          return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n        }\n      }, {\n        key: \"_getParentElementSkippingContainers\",\n        value: function () {\n          for (var e = null, t = this._elementStack.length - 1; t >= 0; t--) {\n            if (!Dc.isNgContainer(this._elementStack[t].name)) return {\n              parent: this._elementStack[t],\n              container: e\n            };\n            e = this._elementStack[t];\n          }\n\n          return {\n            parent: null,\n            container: e\n          };\n        }\n      }, {\n        key: \"_addToParent\",\n        value: function (e) {\n          var t = this._getParentElement();\n\n          null != t ? t.children.push(e) : this._rootNodes.push(e);\n        }\n      }, {\n        key: \"_insertBeforeContainer\",\n        value: function (e, t, r) {\n          if (t) {\n            if (e) {\n              var n = e.children.indexOf(t);\n              e.children[n] = r;\n            } else this._rootNodes.push(r);\n\n            r.children.push(t), this._elementStack.splice(this._elementStack.indexOf(t), 0, r);\n          } else this._addToParent(r), this._elementStack.push(r);\n        }\n      }, {\n        key: \"_getElementFullName\",\n        value: function (e, t, r) {\n          return null == e && null == (e = this.getTagDefinition(t).implicitNamespacePrefix) && null != r && (e = Dc.getNsPrefix(r.name)), Dc.mergeNsAndName(e, t);\n        }\n      }]), e;\n    }();\n\n    function p(e, t) {\n      return e.length > 0 && e[e.length - 1] === t;\n    }\n  });\n\n  h(_c);\n  _c.TreeError, _c.ParseTreeResult, _c.Parser;\n  var Sc = d(function (e, t) {\n    /**\n         * @license\n         * Copyright Google Inc. All Rights Reserved.\n         *\n         * Use of this source code is governed by an MIT-style license that can be\n         * found in the LICENSE file at https://angular.io/license\n         */\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    });\n    var n = _c;\n    t.ParseTreeResult = n.ParseTreeResult, t.TreeError = n.TreeError;\n\n    var u = function (e) {\n      function t() {\n        return r(this, t), s(this, o(t).call(this, gc.getHtmlTagDefinition));\n      }\n\n      return a(t, e), i(t, [{\n        key: \"parse\",\n        value: function (e, r) {\n          var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],\n              i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : vc.DEFAULT_INTERPOLATION_CONFIG,\n              a = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],\n              u = arguments.length > 5 && void 0 !== arguments[5] && arguments[5],\n              s = arguments.length > 6 && void 0 !== arguments[6] && arguments[6];\n          return c(o(t.prototype), \"parse\", this).call(this, e, r, n, i, a, u, s);\n        }\n      }]), t;\n    }(_c.Parser);\n\n    t.HtmlParser = u;\n  });\n  h(Sc);\n  Sc.ParseTreeResult, Sc.TreeError, Sc.HtmlParser;\n  var Fc = d(function (e, t) {\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    });\n\n    var r = null,\n        n = function () {\n      return r || (r = new Sc.HtmlParser()), r;\n    };\n\n    t.parse = function (e) {\n      var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n          r = t.canSelfClose,\n          i = void 0 !== r && r,\n          a = t.allowHtmComponentClosingTags,\n          o = void 0 !== a && a,\n          u = t.isTagNameCaseSensitive,\n          s = void 0 !== u && u;\n      return n().parse(e, \"angular-html-parser\", !1, void 0, i, o, s);\n    };\n  });\n  h(Fc);\n  Fc.parse;\n  var xc = ic.HTML_ELEMENT_ATTRIBUTES,\n      qc = ic.HTML_TAGS,\n      Nc = ac,\n      Lc = fc.Node,\n      Bc = dc;\n\n  function Pc(e, t) {\n    var n = t.recognizeSelfClosing,\n        u = t.normalizeTagName,\n        c = t.normalizeAttributeName,\n        l = t.allowHtmComponentClosingTags,\n        p = t.isTagNameCaseSensitive,\n        f = Fc,\n        h = kc.RecursiveVisitor,\n        d = kc.visitAll,\n        D = kc.Attribute,\n        g = kc.CDATA,\n        m = kc.Comment,\n        v = kc.DocType,\n        b = kc.Element,\n        y = kc.Text,\n        E = Ac.ParseSourceSpan,\n        C = gc.getHtmlTagDefinition,\n        A = f.parse(e, {\n      canSelfClose: n,\n      allowHtmComponentClosingTags: l,\n      isTagNameCaseSensitive: p\n    }),\n        w = A.rootNodes,\n        k = A.errors;\n\n    if (0 !== k.length) {\n      var T = k[0],\n          _ = T.msg,\n          S = T.span.start,\n          F = S.line,\n          x = S.col;\n      throw oc(_, {\n        start: {\n          line: F + 1,\n          column: x + 1\n        }\n      });\n    }\n\n    var q = function (e) {\n      var t = e.name.startsWith(\":\") ? e.name.slice(1).split(\":\")[0] : null,\n          r = e.nameSpan ? e.nameSpan.toString() : e.name,\n          n = r.startsWith(\"\".concat(t, \":\")),\n          i = n ? r.slice(t.length + 1) : r;\n      e.name = i, e.namespace = t, e.hasExplicitNamespace = n;\n    },\n        N = function (e, t) {\n      var r = e.toLowerCase();\n      return t(r) ? r : e;\n    };\n\n    return d(new (function (e) {\n      function t() {\n        return r(this, t), s(this, o(t).apply(this, arguments));\n      }\n\n      return a(t, e), i(t, [{\n        key: \"visit\",\n        value: function (e) {\n          !function (e) {\n            if (e instanceof D) e.type = \"attribute\";else if (e instanceof g) e.type = \"cdata\";else if (e instanceof m) e.type = \"comment\";else if (e instanceof v) e.type = \"docType\";else if (e instanceof b) e.type = \"element\";else {\n              if (!(e instanceof y)) throw new Error(\"Unexpected node \".concat(JSON.stringify(e)));\n              e.type = \"text\";\n            }\n          }(e), function (e) {\n            e instanceof b ? (q(e), e.attrs.forEach(function (e) {\n              q(e), e.valueSpan ? (e.value = e.valueSpan.toString(), /['\"]/.test(e.value[0]) && (e.value = e.value.slice(1, -1))) : e.value = null;\n            })) : e instanceof m ? e.value = e.sourceSpan.toString().slice(\"\\x3c!--\".length, -\"--\\x3e\".length) : e instanceof y && (e.value = e.sourceSpan.toString());\n          }(e), function (e) {\n            if (e instanceof b) {\n              var t = C(p ? e.name : e.name.toLowerCase());\n              e.namespace && e.namespace !== t.implicitNamespacePrefix ? e.tagDefinition = C(\"\") : e.tagDefinition = t;\n            }\n          }(e), function (e) {\n            if (e instanceof b && (!u || e.namespace && e.namespace !== e.tagDefinition.implicitNamespacePrefix || (e.name = N(e.name, function (e) {\n              return e in qc;\n            })), c)) {\n              var t = xc[e.name] || Object.create(null);\n              e.attrs.forEach(function (r) {\n                r.namespace || (r.name = N(r.name, function (r) {\n                  return e.name in xc && (r in xc[\"*\"] || r in t);\n                }));\n              });\n            }\n          }(e), function (e) {\n            e.sourceSpan && e.endSourceSpan && (e.sourceSpan = new E(e.sourceSpan.start, e.endSourceSpan.end));\n          }(e);\n        }\n      }]), t;\n    }(h))(), w), w;\n  }\n\n  function Oc(e) {\n    return e.sourceSpan.start.offset;\n  }\n\n  function Rc(e) {\n    return e.sourceSpan.end.offset;\n  }\n\n  function Ic() {\n    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n        t = e.recognizeSelfClosing,\n        r = void 0 !== t && t,\n        n = e.normalizeTagName,\n        i = void 0 !== n && n,\n        a = e.normalizeAttributeName,\n        o = void 0 !== a && a,\n        u = e.allowHtmComponentClosingTags,\n        s = void 0 !== u && u,\n        c = e.isTagNameCaseSensitive,\n        l = void 0 !== c && c;\n    return {\n      parse: function (e, t, n) {\n        return function e(t, r, n) {\n          var i = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3] ? lo(t) : {\n            frontMatter: null,\n            content: t\n          },\n              a = i.frontMatter,\n              o = i.content,\n              u = {\n            type: \"root\",\n            sourceSpan: {\n              start: {\n                offset: 0\n              },\n              end: {\n                offset: t.length\n              }\n            },\n            children: Pc(o, n)\n          };\n          a && u.children.unshift(a);\n\n          var s = new Lc(u),\n              c = function (i, a) {\n            var o = a.offset,\n                u = e(t.slice(0, o).replace(/[^\\r\\n]/g, \" \") + i, r, n, !1),\n                s = u.children[0].sourceSpan.constructor;\n            u.sourceSpan = new s(a, u.children[u.children.length - 1].sourceSpan.end);\n            var c = u.children[0];\n            return c.length === o ? u.children.shift() : (c.sourceSpan = new s(c.sourceSpan.start.moveBy(o), c.sourceSpan.end), c.value = c.value.slice(o)), u;\n          },\n              l = function (e) {\n            return \"element\" === e.type && !e.nameSpan;\n          };\n\n          return s.map(function (e) {\n            if (e.children && e.children.some(l)) {\n              var t = [],\n                  r = !0,\n                  n = !1,\n                  i = void 0;\n\n              try {\n                for (var a, o = e.children[Symbol.iterator](); !(r = (a = o.next()).done); r = !0) {\n                  var u = a.value;\n                  l(u) ? Array.prototype.push.apply(t, u.children) : t.push(u);\n                }\n              } catch (e) {\n                n = !0, i = e;\n              } finally {\n                try {\n                  r || null == o.return || o.return();\n                } finally {\n                  if (n) throw i;\n                }\n              }\n\n              return e.clone({\n                children: t\n              });\n            }\n\n            if (\"comment\" === e.type) {\n              var s = Bc(e, c);\n              if (s) return s;\n            }\n\n            return e;\n          });\n        }(e, n, {\n          recognizeSelfClosing: r,\n          normalizeTagName: i,\n          normalizeAttributeName: o,\n          allowHtmComponentClosingTags: s,\n          isTagNameCaseSensitive: l\n        });\n      },\n      hasPragma: Nc,\n      astFormat: \"html\",\n      locStart: Oc,\n      locEnd: Rc\n    };\n  }\n\n  var Uc = {\n    parsers: {\n      html: Ic({\n        recognizeSelfClosing: !0,\n        normalizeTagName: !0,\n        normalizeAttributeName: !0,\n        allowHtmComponentClosingTags: !0\n      }),\n      angular: Ic(),\n      vue: Ic({\n        recognizeSelfClosing: !0,\n        isTagNameCaseSensitive: !0\n      }),\n      lwc: Ic()\n    }\n  },\n      $c = Ro.mapAst,\n      Vc = Ro.INLINE_NODE_WRAPPER_TYPES,\n      Mc = Uc.parsers.html;\n\n  function jc(e) {\n    var t = e.isMDX;\n    return function (e) {\n      var r = Za().use(ji, Object.assign({\n        footnotes: !0,\n        commonmark: !0\n      }, t && {\n        blocks: [jo.BLOCKS_REGEX]\n      })).use(Hc).use(ru).use(t ? jo.esSyntax : zc).use(Xc).use(t ? Gc : zc);\n      return r.runSync(r.parse(e));\n    };\n  }\n\n  function zc(e) {\n    return e;\n  }\n\n  function Gc() {\n    return function (e) {\n      return $c(e, function (e, t, r) {\n        var n = l(r, 1)[0];\n        if (\"html\" !== e.type || e.value.match(jo.COMMENT_REGEX) || -1 !== Vc.indexOf(n.type)) return e;\n        var i = Mc.parse(e.value).children;\n        return i.length <= 1 ? Object.assign({}, e, {\n          type: \"jsx\"\n        }) : i.reduce(function (t, r) {\n          var n = r.sourceSpan,\n              i = r.type,\n              a = e.value.slice(n.start.offset, n.end.offset);\n          return a && t.push({\n            type: \"element\" === i ? \"jsx\" : i,\n            value: a,\n            position: n\n          }), t;\n        }, []);\n      });\n    };\n  }\n\n  function Hc() {\n    var e = this.Parser.prototype;\n\n    function t(e, t) {\n      var r = lo(t);\n      if (r.frontMatter) return e(r.frontMatter.raw)(r.frontMatter);\n    }\n\n    e.blockMethods = [\"frontMatter\"].concat(e.blockMethods), e.blockTokenizers.frontMatter = t, t.onlyAtStart = !0;\n  }\n\n  function Xc() {\n    var e = this.Parser.prototype,\n        t = e.inlineMethods;\n\n    function r(e, t) {\n      var r = t.match(/^({%[\\s\\S]*?%}|{{[\\s\\S]*?}})/);\n      if (r) return e(r[0])({\n        type: \"liquidNode\",\n        value: r[0]\n      });\n    }\n\n    t.splice(t.indexOf(\"text\"), 0, \"liquid\"), e.inlineTokenizers.liquid = r, r.locator = function (e, t) {\n      return e.indexOf(\"{\", t);\n    };\n  }\n\n  var Wc = {\n    astFormat: \"mdast\",\n    hasPragma: ho.hasPragma,\n    locStart: function (e) {\n      return e.position.start.offset;\n    },\n    locEnd: function (e) {\n      return e.position.end.offset;\n    },\n    preprocess: function (e) {\n      return e.replace(/\\n\\s+$/, \"\\n\");\n    }\n  },\n      Qc = Object.assign({}, Wc, {\n    parse: jc({\n      isMDX: !1\n    })\n  }),\n      Yc = {\n    parsers: {\n      remark: Qc,\n      markdown: Qc,\n      mdx: Object.assign({}, Wc, {\n        parse: jc({\n          isMDX: !0\n        })\n      })\n    }\n  },\n      Zc = Yc.parsers;\n  e.default = Yc, e.parsers = Zc, Object.defineProperty(e, \"__esModule\", {\n    value: !0\n  });\n});","map":null,"metadata":{},"sourceType":"script"}