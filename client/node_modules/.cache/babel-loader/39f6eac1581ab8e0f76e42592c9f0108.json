{"ast":null,"code":"import { firestore } from '../../firebase/utils';\nimport convertCollectionsToMap from '../../firebase/convertCollectionsToMap';\nimport directoryTypes from './types';\nexport const fetchCollectionsStart = () => ({\n  type: directoryTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: directoryTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const dataCollection = convertCollectionsToMap(snapshot);\n      setLoading(false);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/nick.bansal/Desktop/dev/ecommerce-site/src/redux/directory/actions.js"],"names":["firestore","convertCollectionsToMap","directoryTypes","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","dataCollection","setLoading"],"mappings":"AAAA,SAASA,SAAT,QAA0B,sBAA1B;AACA,OAAOC,uBAAP,MAAoC,wCAApC;AAEA,OAAOC,cAAP,MAA2B,SAA3B;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC3CC,EAAAA,IAAI,EAAEF,cAAc,CAACG;AADsB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACzDH,EAAAA,IAAI,EAAEF,cAAc,CAACM,yBADoC;AAEzDC,EAAAA,OAAO,EAAEF;AAFgD,CAAL,CAA9C;AAKP,OAAO,MAAMG,0BAA0B,GAAG,MAAM;AAC/C,SAAOC,QAAQ,IAAI;AAClB,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACR,qBAAqB,EAAtB,CAAR;AAEAS,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACpC,YAAMC,cAAc,GAAGhB,uBAAuB,CAACe,QAAD,CAA9C;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KAHD;AAIA,GARD;AASA,CAVM","sourcesContent":["import { firestore } from '../../firebase/utils';\nimport convertCollectionsToMap from '../../firebase/convertCollectionsToMap';\n\nimport directoryTypes from './types';\n\nexport const fetchCollectionsStart = () => ({\n\ttype: directoryTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n\ttype: directoryTypes.FETCH_COLLECTIONS_SUCCESS,\n\tpayload: collectionsMap\n});\n\nexport const fetchCollectionsStartAsync = () => {\n\treturn dispatch => {\n\t\tconst collectionRef = firestore.collection('collections');\n\t\tdispatch(fetchCollectionsStart());\n\n\t\tcollectionRef.get().then(snapshot => {\n\t\t\tconst dataCollection = convertCollectionsToMap(snapshot);\n\t\t\tsetLoading(false);\n\t\t});\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}